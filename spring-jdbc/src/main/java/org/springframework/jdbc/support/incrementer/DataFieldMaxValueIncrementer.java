/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2007 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2007的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.jdbc.support.incrementer;

import org.springframework.dao.DataAccessException;

/**
 * Interface that defines contract of incrementing any data store field's
 * maximum value. Works much like a sequence number generator.
 *
 * <p>Typical implementations may use standard SQL, native RDBMS sequences
 * or Stored Procedures to do the job.
 *
 * @author Dmitriy Kopylenko
 * @author Jean-Pierre Pawlak
 * @author Juergen Hoeller
 */
/**
 * 定义递增任何数据存储字段的最大值的协定的接口。 
 * 就像序列号生成器一样工作。 
 *  <p>典型的实现可以使用标准SQL，本机RDBMS序列或存储过程来完成工作。 
 *  @author  Dmitriy Kopylenko @author  Jean-Pierre Pawlak @author 于尔根·霍勒（Juergen Hoeller）
 */
public interface DataFieldMaxValueIncrementer {

	/**
	 * Increment the data store field's max value as int.
	 * @return int next data store value such as <b>max + 1</b>
	 * @throws org.springframework.dao.DataAccessException in case of errors
	 */
	/**
	 * 将数据存储字段的最大值递增为int。 
	 *  
	 * @return  int下一个数据存储值，例如<b> max +1 </ b> 
	 * @throws 发生错误时的org.springframework.dao.DataAccessException
	 */
	int nextIntValue() throws DataAccessException;

	/**
	 * Increment the data store field's max value as long.
	 * @return int next data store value such as <b>max + 1</b>
	 * @throws org.springframework.dao.DataAccessException in case of errors
	 */
	/**
	 * 尽可能长地增加数据存储字段的最大值。 
	 *  
	 * @return  int下一个数据存储值，例如<b> max +1 </ b> 
	 * @throws 发生错误时的org.springframework.dao.DataAccessException
	 */
	long nextLongValue() throws DataAccessException;

	/**
	 * Increment the data store field's max value as String.
	 * @return next data store value such as <b>max + 1</b>
	 * @throws org.springframework.dao.DataAccessException in case of errors
	 */
	/**
	 * 将数据存储字段的最大值递增为String。 
	 *  
	 * @return 下一个数据存储值，例如<b> max + 1 </ b> 
	 * @throws  org.springframework.dao.DataAccessException如果发生错误
	 */
	String nextStringValue() throws DataAccessException;

}
