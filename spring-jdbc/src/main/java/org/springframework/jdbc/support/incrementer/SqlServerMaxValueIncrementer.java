/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2014 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2014的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.jdbc.support.incrementer;

import javax.sql.DataSource;

/**
 * {@link DataFieldMaxValueIncrementer} that increments the maximum value of a given SQL Server table
 * with the equivalent of an auto-increment column. Note: If you use this class, your table key
 * column should <i>NOT</i> be defined as an IDENTITY column, as the sequence table does the job.
 *
 * <p>This class is intended to be used with Microsoft SQL Server.
 *
 * <p>The sequence is kept in a table. There should be one sequence table per
 * table that needs an auto-generated key.
 *
 * <p>Example:
 *
 * <pre class="code">create table tab (id int not null primary key, text varchar(100))
 * create table tab_sequence (id bigint identity)
 * insert into tab_sequence default values</pre>
 *
 * If "cacheSize" is set, the intermediate values are served without querying the
 * database. If the server or your application is stopped or crashes or a transaction
 * is rolled back, the unused values will never be served. The maximum hole size in
 * numbering is consequently the value of cacheSize.
 *
 * <b>HINT:</b> Since Microsoft SQL Server supports the JDBC 3.0 {@code getGeneratedKeys}
 * method, it is recommended to use IDENTITY columns directly in the tables and then using a
 * {@link org.springframework.jdbc.core.simple.SimpleJdbcInsert} or utilizing
 * a {@link org.springframework.jdbc.support.KeyHolder} when calling the with the
 * {@code update(PreparedStatementCreator psc, KeyHolder generatedKeyHolder)}
 * method of the {@link org.springframework.jdbc.core.JdbcTemplate}.
 *
 * <p>Thanks to Preben Nilsson for the suggestion!
 *
 * @author Thomas Risberg
 * @author Juergen Hoeller
 * @since 2.5.5
 */
/**
 * {@link  DataFieldMaxValueIncrementer}，它以给定的SQL Server表的最大值递增一个等效的自动递增列。 
 * 注意：如果使用此类，则表键列应<i> NOT </ i>定义为IDENTITY列，因为序列表可以完成此工作。 
 *  <p>此类旨在与Microsoft SQL Server一起使用。 
 *  <p>序列保存在表格中。 
 * 每个表应该有一个需要自动生成键的序列表。 
 *  <p>示例：<pre class ="code">创建表标签（id int不为null的主键，文本varchar（100））创建表tab_sequence（id bigint身份）插入到tab_sequence的默认值中</ pre>设置为"时，将提供中间值而不查询数据库。 
 * 如果服务器或应用程序停止，崩溃或回滚事务，则永远不会提供未使用的值。 
 * 因此，编号中的最大孔大小是cacheSize的值。 
 *  <b>提示：</ b>由于Microsoft SQL Server支持JDBC 3.0 {@code  getGeneratedKeys}方法，因此建议直接在表中使用IDENTITY列，然后再使用{@link  org.springframework。 
 *  jdbc.core.simple.SimpleJdbcInsert}或在{@link  org.springframework.jdbc.core.JdbcTemplate}。 
 *  <p>感谢Preben Nilsson的建议！ 
 *  @author 托马斯·里斯伯格@author  Juergen Hoeller @从2.5.5开始
 */
public class SqlServerMaxValueIncrementer extends AbstractIdentityColumnMaxValueIncrementer {

	/**
	 * Default constructor for bean property style usage.
	 * @see #setDataSource
	 * @see #setIncrementerName
	 * @see #setColumnName
	 */
	/**
	 * Bean属性样式用法的默认构造函数。 
	 *  
	 * @see  #setDataSource 
	 * @see  #setIncrementerName 
	 * @see  #setColumnName
	 */
	public SqlServerMaxValueIncrementer() {
	}

	/**
	 * Convenience constructor.
	 * @param dataSource the DataSource to use
	 * @param incrementerName the name of the sequence/table to use
	 * @param columnName the name of the column in the sequence table to use
	 */
	/**
	 * 便利的构造函数。 
	 *  
	 * @param  dataSource要使用的数据源
	 * @param 增量器名称要使用的序列/表的名称
	 * @param  columnName要使用的序列表中的列的名称
	 */
	public SqlServerMaxValueIncrementer(DataSource dataSource, String incrementerName, String columnName) {
		super(dataSource, incrementerName, columnName);
	}


	@Override
	protected String getIncrementStatement() {
		return "insert into " + getIncrementerName() + " default values";
	}

	@Override
	protected String getIdentityStatement() {
		return "select @@identity";
	}

}
