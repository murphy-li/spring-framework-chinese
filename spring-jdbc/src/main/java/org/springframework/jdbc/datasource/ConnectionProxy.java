/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2017的原始作者或作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.jdbc.datasource;

import java.sql.Connection;

/**
 * Subinterface of {@link java.sql.Connection} to be implemented by
 * Connection proxies. Allows access to the underlying target Connection.
 *
 * <p>This interface can be checked when there is a need to cast to a
 * native JDBC Connection such as Oracle's OracleConnection. Alternatively,
 * all such connections also support JDBC 4.0's {@link Connection#unwrap}.
 *
 * @author Juergen Hoeller
 * @since 1.1
 * @see TransactionAwareDataSourceProxy
 * @see LazyConnectionDataSourceProxy
 * @see DataSourceUtils#getTargetConnection(java.sql.Connection)
 */
/**
 * {@link  java.sql.Connection}的子接口，由Connection代理实现。 
 * 允许访问基础目标连接。 
 *  <p>当需要转换为本机JDBC连接（例如Oracle的OracleConnection）时，可以检查此接口。 
 * 另外，所有这些连接也都支持JDBC 4.0的{@link  Connection＃unwrap}。 
 *  @author  Juergen Hoeller @since 1.1起
 * @see  TransactionAwareDataSourceProxy 
 * @see  LazyConnectionDataSourceProxy 
 * @see  DataSourceUtils＃getTargetConnection（java.sql.Connection）
 */
public interface ConnectionProxy extends Connection {

	/**
	 * Return the target Connection of this proxy.
	 * <p>This will typically be the native driver Connection
	 * or a wrapper from a connection pool.
	 * @return the underlying Connection (never {@code null})
	 */
	/**
	 * 返回此代理的目标连接。 
	 *  <p>这通常是本机驱动程序Connection或连接池中的包装器。 
	 *  
	 * @return 基础连接（决不{<@@code> null}）
	 */
	Connection getTargetConnection();

}
