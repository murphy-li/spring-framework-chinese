/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2014 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2014的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.web.socket.handler;

import org.springframework.web.socket.WebSocketHandler;

/**
 * A factory for applying decorators to a WebSocketHandler.
 *
 * <p>Decoration should be done through sub-classing
 * {@link org.springframework.web.socket.handler.WebSocketHandlerDecorator
 * WebSocketHandlerDecorator} to allow any code to traverse decorators and/or
 * unwrap the original handler when necessary .
 *
 * @author Rossen Stoyanchev
 * @since 4.1.2
 */
/**
 * 将装饰器应用于WebSocketHandler的工厂。 
 *  <p>装饰应该通过子类{@link  org.springframework.web.socket.handler.WebSocketHandlerDecorator WebSocketHandlerDecorator}进行，以允许任何代码遍历装饰器和/或在必要时解开原始处理程序。 
 *  @author  Rossen Stoyanchev @4.1.2起
 */
public interface WebSocketHandlerDecoratorFactory {

	/**
	 * Decorate the given WebSocketHandler.
	 * @param handler the handler to be decorated.
	 * @return the same handler or the handler wrapped with a sub-class of
	 * {@code WebSocketHandlerDecorator}.
	 */
	/**
	 * 装饰给定的WebSocketHandler。 
	 *  
	 * @param 处理程序要装饰的处理程序。 
	 *  
	 * @return 相同的处理程序，或者包装有{@code  WebSocketHandlerDecorator}的子类的处理程序。 
	 * 
	 */
	WebSocketHandler decorate(WebSocketHandler handler);

}
