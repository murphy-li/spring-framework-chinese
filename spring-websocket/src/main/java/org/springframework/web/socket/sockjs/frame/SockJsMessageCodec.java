/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2014 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2014的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.web.socket.sockjs.frame;

import java.io.IOException;
import java.io.InputStream;

import org.springframework.lang.Nullable;

/**
 * Encode and decode messages to and from a SockJS message frame,
 * essentially an array of JSON-encoded messages. For example:
 *
 * <pre class="code">
 * a["message1","message2"]
 * </pre>
 *
 * @author Rossen Stoyanchev
 * @since 4.0
 */
/**
 * 与SockJS消息帧之间的消息进行编码和解码，本质上是JSON编码消息的数组。 
 * 例如：<pre class ="code"> a ["message1"，"message2"] </ pre> @author  Rossen Stoyanchev @since 4.0
 */
public interface SockJsMessageCodec {

	/**
	 * Encode the given messages as a SockJS message frame. Aside from applying standard
	 * JSON quoting to each message, there are some additional JSON Unicode escaping
	 * rules. See the "JSON Unicode Encoding" section of SockJS protocol (i.e. the
	 * protocol test suite).
	 * @param messages the messages to encode
	 * @return the content for a SockJS message frame (never {@code null})
	 */
	/**
	 * 将给定的消息编码为SockJS消息框架。 
	 * 除了对每条消息应用标准的JSON引用之外，还有一些其他的JSON Unicode转义规则。 
	 * 请参阅SockJS协议（即协议测试套件）的"JSON Unicode编码"部分。 
	 *  
	 * @param 向消息发送消息以对SockJS消息帧的内容进行编码（
	 * @return ）（永不{@code  null}）
	 */
	String encode(String... messages);

	/**
	 * Decode the given SockJS message frame.
	 * @param content the SockJS message frame
	 * @return an array of messages, or {@code null} if none
	 * @throws IOException if the content could not be parsed
	 */
	/**
	 * 解码给定的SockJS消息框架。 
	 *  
	 * @param 内容是SockJS消息帧的
	 * @return 消息数组，如果没有则为{@code  null} 
	 * @throws  IOException如果无法解析内容
	 */
	@Nullable
	String[] decode(String content) throws IOException;

	/**
	 * Decode the given SockJS message frame.
	 * @param content the SockJS message frame
	 * @return an array of messages, or {@code null} if none
	 * @throws IOException if the content could not be parsed
	 */
	/**
	 * 解码给定的SockJS消息框架。 
	 *  
	 * @param 内容是SockJS消息帧的
	 * @return 消息数组，如果没有则为{@code  null} 
	 * @throws  IOException如果无法解析内容
	 */
	@Nullable
	String[] decodeInputStream(InputStream content) throws IOException;

}
