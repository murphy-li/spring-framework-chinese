/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2018的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.web.socket.config.annotation;

import org.springframework.web.socket.server.HandshakeHandler;
import org.springframework.web.socket.server.HandshakeInterceptor;

/**
 * A contract for configuring a STOMP over WebSocket endpoint.
 *
 * @author Rossen Stoyanchev
 * @since 4.0
 */
/**
 * 用于在WebSocket端点上配置STOMP的合同。 
 *  @author  Rossen Stoyanchev @从4.0开始
 */
public interface StompWebSocketEndpointRegistration {

	/**
	 * Enable SockJS fallback options.
	 */
	/**
	 * 启用S​​ockJS后备选项。 
	 * 
	 */
	SockJsServiceRegistration withSockJS();

	/**
	 * Configure the HandshakeHandler to use.
	 */
	/**
	 * 配置要使用的HandshakeHandler。 
	 * 
	 */
	StompWebSocketEndpointRegistration setHandshakeHandler(HandshakeHandler handshakeHandler);

	/**
	 * Configure the HandshakeInterceptor's to use.
	 */
	/**
	 * 配置要使用的HandshakeInterceptor。 
	 * 
	 */
	StompWebSocketEndpointRegistration addInterceptors(HandshakeInterceptor... interceptors);

	/**
	 * Configure allowed {@code Origin} header values. This check is mostly designed for
	 * browser clients. There is nothing preventing other types of client to modify the
	 * {@code Origin} header value.
	 *
	 * <p>When SockJS is enabled and origins are restricted, transport types that do not
	 * allow to check request origin (Iframe based transports) are disabled.
	 * As a consequence, IE 6 to 9 are not supported when origins are restricted.
	 *
	 * <p>Each provided allowed origin must start by "http://", "https://" or be "*"
	 * (means that all origins are allowed). By default, only same origin requests are
	 * allowed (empty list).
	 *
	 * @since 4.1.2
	 * @see <a href="https://tools.ietf.org/html/rfc6454">RFC 6454: The Web Origin Concept</a>
	 * @see <a href="https://github.com/sockjs/sockjs-client#supported-transports-by-browser-html-served-from-http-or-https">SockJS supported transports by browser</a>
	 */
	/**
	 * 配置允许的{@code  Origin}头值。 
	 * 此检查主要用于浏览器客户端。 
	 * 没有阻止其他类型的客户端修改{@code  Origin}标头值的措施。 
	 *  <p>启用SockJS并限制来源时，将禁用不允许检查请求来源的传输类型（基于Iframe的传输）。 
	 * 因此，在限制来源时不支持IE 6至9。 
	 *  <p>每个提供的允许的原点必须以"http：//"，"https：//"开头或为""（表示允许所有原点）。 
	 * 默认情况下，仅允许相同的原始请求（空列表）。 
	 *  @since 4.1.2 
	 * @see  <a href="https://tools.ietf.org/html/rfc6454"> RFC 6454：Web起源概念</a> 
	 * @see  <a href ="https ：//github.com/sockjs/sockjs-client#supported-transports-by-browser-html-served-from-http-or-https"> SockJS支持的浏览器传输</a>
	 */
	StompWebSocketEndpointRegistration setAllowedOrigins(String... origins);

}
