/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2017的原始作者或作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.expression.spel;

import org.springframework.expression.EvaluationContext;
import org.springframework.expression.EvaluationException;
import org.springframework.lang.Nullable;

/**
 * Base superclass for compiled expressions. Each generated compiled expression class
 * will extend this class and implement the {@link #getValue} method. It is not intended
 * to be subclassed by user code.
 *
 * @author Andy Clement
 * @since 4.1
 */
/**
 * 编译表达式的基础超类。 
 * 每个生成的编译表达式类都将扩展该类并实现{@link  #getValue}方法。 
 * 它不打算由用户代码子类化。 
 *  @author 安迪·克莱门特@始于4.1
 */
public abstract class CompiledExpression {

	/**
	 * Subclasses of CompiledExpression generated by SpelCompiler will provide an
	 * implementation of this method.
	 */
	/**
	 * SpelCompiler生成的CompiledExpression的子类将提供此方法的实现。 
	 * 
	 */
	public abstract Object getValue(@Nullable Object target, @Nullable EvaluationContext context)
			throws EvaluationException;

}
