/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2018的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.expression;

/**
 * A bean resolver can be registered with the evaluation context and will kick in
 * for bean references: {@code @myBeanName} and {@code &myBeanName} expressions.
 * The <tt>&</tt> variant syntax allows access to the factory bean where relevant.
 *
 * @author Andy Clement
 * @since 3.0.3
 */
/**
 * 可以在评估上下文中注册Bean解析器，并将其用于Bean引用：{<@code> @myBeanName}和{@code ＆myBeanName}表达式。 
 *  <tt>＆</ tt>变体语法允许在相关时访问工厂bean。 
 *  @author 安迪·克莱门特@3.0.3起
 */
public interface BeanResolver {

	/**
	 * Look up a bean by the given name and return a corresponding instance for it.
	 * For attempting access to a factory bean, the name needs a <tt>&</tt> prefix.
	 * @param context the current evaluation context
	 * @param beanName the name of the bean to look up
	 * @return an object representing the bean
	 * @throws AccessException if there is an unexpected problem resolving the bean
	 */
	/**
	 * 通过给定名称查找bean，并为其返回相应的实例。 
	 * 要尝试访问工厂bean，名称需要<tt>＆</ tt>前缀。 
	 *  
	 * @param 上下文当前的评估上下文
	 * @param  beanName要查找的bean的名称
	 * @return 代表bean的对象
	 * @throws  AccessException如果解决bean时出现意外问题
	 */
	Object resolve(EvaluationContext context, String beanName) throws AccessException;

}
