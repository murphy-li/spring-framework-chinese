/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2009 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2009的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.expression;

/**
 * Parses expression strings into compiled expressions that can be evaluated.
 * Supports parsing templates as well as standard expression strings.
 *
 * @author Keith Donald
 * @author Andy Clement
 * @since 3.0
 */
/**
 * 将表达式字符串解析为可求值的已编译表达式。 
 * 支持解析模板以及标准表达式字符串。 
 *  @author 基思·唐纳德@author 安迪·克莱门特@始于3.0
 */
public interface ExpressionParser {

	/**
	 * Parse the expression string and return an Expression object you can use for repeated evaluation.
	 * <p>Some examples:
	 * <pre class="code">
	 *     3 + 4
	 *     name.firstName
	 * </pre>
	 * @param expressionString the raw expression string to parse
	 * @return an evaluator for the parsed expression
	 * @throws ParseException an exception occurred during parsing
	 */
	/**
	 * 解析表达式字符串，并返回可用于重复求值的Expression对象。 
	 *  <p>一些示例：<pre class ="code"> 3 + 4 name.firstName </ pre> 
	 * @param  expressionString要解析的原始表达式字符串
	 * @return 解析表达式的求值器
	 * @throws  ParseException解析期间发生异常
	 */
	Expression parseExpression(String expressionString) throws ParseException;

	/**
	 * Parse the expression string and return an Expression object you can use for repeated evaluation.
	 * <p>Some examples:
	 * <pre class="code">
	 *     3 + 4
	 *     name.firstName
	 * </pre>
	 * @param expressionString the raw expression string to parse
	 * @param context a context for influencing this expression parsing routine (optional)
	 * @return an evaluator for the parsed expression
	 * @throws ParseException an exception occurred during parsing
	 */
	/**
	 * 解析表达式字符串，并返回可用于重复求值的Expression对象。 
	 *  <p>一些示例：<pre class ="code"> 3 + 4 name.firstName </ pre> 
	 * @param  expressionString用于解析
	 * @param 上下文的原始表达式字符串，一个用于影响此表达式解析例程的上下文（可选） ）
	 * @return 解析表达式的求值器
	 * @throws  ParseException解析期间发生异常
	 */
	Expression parseExpression(String expressionString, ParserContext context) throws ParseException;

}
