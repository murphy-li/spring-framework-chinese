/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2017的原始作者或作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.expression;

import org.springframework.lang.Nullable;

/**
 * By default the mathematical operators {@link Operation} support simple types
 * like numbers. By providing an implementation of OperatorOverloader, a user
 * of the expression language can support these operations on other types.
 *
 * @author Andy Clement
 * @since 3.0
 */
/**
 * 默认情况下，数学运算符{@link 运算}支持简单的类型，例如数字。 
 * 通过提供OperatorOverloader的实现，表达式语言的用户可以支持其他类型的这些操作。 
 *  @author 安迪·克莱门特@始于3.0
 */
public interface OperatorOverloader {

	/**
	 * Return true if the operator overloader supports the specified operation
	 * between the two operands and so should be invoked to handle it.
	 * @param operation the operation to be performed
	 * @param leftOperand the left operand
	 * @param rightOperand the right operand
	 * @return true if the OperatorOverloader supports the specified operation
	 * between the two operands
	 * @throws EvaluationException if there is a problem performing the operation
	 */
	/**
	 * 如果运算符重载程序支持两个操作数之间的指定操作，则返回true，因此应调用它来处理它。 
	 *  
	 * @param 操作要执行的操作
	 * @param  leftOper和左操作数
	 * @param  rightOper和右操作数
	 * @return 如果OperatorOverloader支持两个操作数之间的指定操作，则为true 
	 * @throws  EvaluationException执行操作时出现问题
	 */
	boolean overridesOperation(Operation operation, @Nullable Object leftOperand, @Nullable Object rightOperand)
			throws EvaluationException;

	/**
	 * Execute the specified operation on two operands, returning a result.
	 * See {@link Operation} for supported operations.
	 * @param operation the operation to be performed
	 * @param leftOperand the left operand
	 * @param rightOperand the right operand
	 * @return the result of performing the operation on the two operands
	 * @throws EvaluationException if there is a problem performing the operation
	 */
	/**
	 * 对两个操作数执行指定的操作，返回结果。 
	 * 有关支持的操作，请参见{@link 操作}。 
	 *  
	 * @param 操作要执行的操作
	 * @param  leftOper和左操作数
	 * @param  rightOper和右操作数
	 * @return 对两个操作数执行操作的结果
	 * @throws  EvaluationException如果存在问题执行操作
	 */
	Object operate(Operation operation, @Nullable Object leftOperand, @Nullable Object rightOperand)
			throws EvaluationException;

}
