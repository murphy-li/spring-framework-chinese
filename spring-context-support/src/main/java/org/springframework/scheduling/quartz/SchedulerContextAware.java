/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2011 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2011的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.scheduling.quartz;

import org.quartz.SchedulerContext;

import org.springframework.beans.factory.Aware;

/**
 * Callback interface to be implemented by Spring-managed
 * Quartz artifacts that need access to the SchedulerContext
 * (without having natural access to it).
 *
 * <p>Currently only supported for custom JobFactory implementations
 * that are passed in via Spring's SchedulerFactoryBean.
 *
 * @author Juergen Hoeller
 * @author Chris Beams
 * @since 2.0
 * @see org.quartz.spi.JobFactory
 * @see SchedulerFactoryBean#setJobFactory
 */
/**
 * 回调接口由需要访问SchedulerContext的Spring托管Quartz工件实现（没有自然访问权限）。 
 *  <p>当前仅支持通过Spring的SchedulerFactoryBean传入的自定义JobFactory实现。 
 *  @author  Juergen Hoeller @author 克里斯·比姆斯（Chris Beams）@since 2.0起
 * @see  org.quartz.spi.JobFactory 
 * @see  SchedulerFactoryBean＃setJobFactory
 */
public interface SchedulerContextAware extends Aware {

	/**
	 * Set the SchedulerContext of the current Quartz Scheduler.
	 * @see org.quartz.Scheduler#getContext()
	 */
	/**
	 * 设置当前Quartz Scheduler的SchedulerContext。 
	 *  
	 * @see  org.quartz.Scheduler＃getContext（）
	 */
	void setSchedulerContext(SchedulerContext schedulerContext);

}
