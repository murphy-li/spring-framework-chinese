/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2018的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.cache.jcache.config;

import org.springframework.cache.annotation.CachingConfigurer;
import org.springframework.cache.interceptor.CacheResolver;
import org.springframework.lang.Nullable;

/**
 * Extension of {@link CachingConfigurer} for the JSR-107 implementation.
 *
 * <p>To be implemented by classes annotated with
 * {@link org.springframework.cache.annotation.EnableCaching} that wish
 * or need to specify explicitly how exception caches are resolved for
 * annotation-driven cache management. Consider extending {@link JCacheConfigurerSupport},
 * which provides a stub implementation of all interface methods.
 *
 * <p>See {@link org.springframework.cache.annotation.EnableCaching} for
 * general examples and context; see {@link #exceptionCacheResolver()} for
 * detailed instructions.
 *
 * @author Stephane Nicoll
 * @since 4.1
 * @see CachingConfigurer
 * @see JCacheConfigurerSupport
 * @see org.springframework.cache.annotation.EnableCaching
 */
/**
 * {@link  CachingConfigurer}的扩展用于JSR-107实现。 
 *  <p>由{{@link> org.springframework.cache.annotation.EnableCaching}注释的类实现，这些类希望或需要明确指定如何解析异常缓存以进行注释驱动的缓存管理。 
 * 考虑扩展{@link  JCacheConfigurerSupport}，它提供了所有接口方法的存根实现。 
 *  <p>有关一般示例和上下文，请参见{@link  org.springframework.cache.annotation.EnableCaching}； 
 * 有关详细说明，请参见{@link  #exceptionCacheResolver（）}。 
 *  @author  Stephane Nicoll @since 4.1起
 * @see  CachingConfigurer 
 * @see  JCacheConfigurerSupport 
 * @see  org.springframework.cache.annotation.EnableCaching
 */
public interface JCacheConfigurer extends CachingConfigurer {

	/**
	 * Return the {@link CacheResolver} bean to use to resolve exception caches for
	 * annotation-driven cache management. Implementations must explicitly declare
	 * {@link org.springframework.context.annotation.Bean @Bean}, e.g.
	 * <pre class="code">
	 * &#064;Configuration
	 * &#064;EnableCaching
	 * public class AppConfig extends JCacheConfigurerSupport {
	 *     &#064;Bean // important!
	 *     &#064;Override
	 *     public CacheResolver exceptionCacheResolver() {
	 *         // configure and return CacheResolver instance
	 *     }
	 *     // ...
	 * }
	 * </pre>
	 * See {@link org.springframework.cache.annotation.EnableCaching} for more complete examples.
	 */
	/**
	 * 返回{@link  CacheResolver} bean，用于解析异常缓存，以进行注释驱动的缓存管理。 
	 * 实现必须显式声明{@link  org.springframework.context.annotation.Bean @Bean}，例如<pre class ="code"> @Configuration @EnableCaching公共类AppConfig扩展了JCacheConfigurerSupport {@Bean //重要！ 
	 *  @Override public CacheResolver exceptionCacheResolver（）{//配置并返回CacheResolver实例} // ...} </ pre>有关更完整的示例，请参见{@link  org.springframework.cache.annotation.EnableCaching}。 
	 * 
	 */
	@Nullable
	CacheResolver exceptionCacheResolver();

}
