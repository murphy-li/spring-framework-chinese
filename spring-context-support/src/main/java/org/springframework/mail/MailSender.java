/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2014 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2014的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.mail;

/**
 * This interface defines a strategy for sending simple mails. Can be
 * implemented for a variety of mailing systems due to the simple requirements.
 * For richer functionality like MIME messages, consider JavaMailSender.
 *
 * <p>Allows for easy testing of clients, as it does not depend on JavaMail's
 * infrastructure classes: no mocking of JavaMail Session or Transport necessary.
 *
 * @author Dmitriy Kopylenko
 * @author Juergen Hoeller
 * @since 10.09.2003
 * @see org.springframework.mail.javamail.JavaMailSender
 */
/**
 * 该接口定义了用于发送简单邮件的策略。 
 * 由于简单的要求，可以为各种邮件系统实现。 
 * 对于MIME消息等更丰富的功能，请考虑使用JavaMailSender。 
 *  <p>允许轻松测试客户端，因为它不依赖JavaMail的基础结构类：无需模拟JavaMail Session或Transport。 
 *  @author  Dmitriy Kopylenko @author  Juergen Hoeller @2003年10月10日以来
 * @see  org.springframework.mail.javamail.JavaMailSender
 */
public interface MailSender {

	/**
	 * Send the given simple mail message.
	 * @param simpleMessage the message to send
	 * @throws MailParseException in case of failure when parsing the message
	 * @throws MailAuthenticationException in case of authentication failure
	 * @throws MailSendException in case of failure when sending the message
	 */
	/**
	 * 发送给定的简单邮件。 
	 *  
	 * @param  simpleMessage解析消息时失败时发送
	 * @throws  MailParseException的消息
	 * @throws 身份验证失败时MailAuthenticationException 
	 * @throws 发送消息时失败的MailSendException
	 */
	void send(SimpleMailMessage simpleMessage) throws MailException;

	/**
	 * Send the given array of simple mail messages in batch.
	 * @param simpleMessages the messages to send
	 * @throws MailParseException in case of failure when parsing a message
	 * @throws MailAuthenticationException in case of authentication failure
	 * @throws MailSendException in case of failure when sending a message
	 */
	/**
	 * 批量发送给定的简单邮件消息数组。 
	 *  
	 * @param  simpleMessage消息在解析消息时失败时发送
	 * @throws  MailParseException 
	 * @throws 在身份验证失败时MailAuthenticationException 
	 * @throws 在发送消息失败时MailSendException
	 */
	void send(SimpleMailMessage... simpleMessages) throws MailException;

}
