/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2014 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2014的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.web.servlet.tags.form;

import javax.servlet.jsp.JspException;

/**
 * The {@code <password>} tag renders an HTML 'input' tag with type 'password'
 * using the bound value.
 *
 * <p>
 * <table>
 * <caption>Attribute Summary</caption>
 * <thead>
 * <tr>
 * <th class="colFirst">Attribute</th>
 * <th class="colOne">Required?</th>
 * <th class="colOne">Runtime Expression?</th>
 * <th class="colLast">Description</th>
 * </tr>
 * </thead>
 * <tbody>
 * <tr class="altColor">
 * <td><p>accesskey</p></td>
 * <td><p>false</p></td>
 * <td><p>true</p></td>
 * <td><p>HTML Standard Attribute</p></td>
 * </tr>
 * <tr class="rowColor">
 * <td><p>alt</p></td>
 * <td><p>false</p></td>
 * <td><p>true</p></td>
 * <td><p>HTML Optional Attribute</p></td>
 * </tr>
 * <tr class="altColor">
 * <td><p>autocomplete</p></td>
 * <td><p>false</p></td>
 * <td><p>true</p></td>
 * <td><p>Common Optional Attribute</p></td>
 * </tr>
 * <tr class="rowColor">
 * <td><p>cssClass</p></td>
 * <td><p>false</p></td>
 * <td><p>true</p></td>
 * <td><p>HTML Optional Attribute</p></td>
 * </tr>
 * <tr class="altColor">
 * <td><p>cssErrorClass</p></td>
 * <td><p>false</p></td>
 * <td><p>true</p></td>
 * <td><p>HTML Optional Attribute. Used when the bound field has
 * errors.</p></td>
 * </tr>
 * <tr class="rowColor">
 * <td><p>cssStyle</p></td>
 * <td><p>false</p></td>
 * <td><p>true</p></td>
 * <td><p>HTML Optional Attribute</p></td>
 * </tr>
 * <tr class="altColor">
 * <td><p>dir</p></td>
 * <td><p>false</p></td>
 * <td><p>true</p></td>
 * <td><p>HTML Standard Attribute</p></td>
 * </tr>
 * <tr class="rowColor">
 * <td><p>disabled</p></td>
 * <td><p>false</p></td>
 * <td><p>true</p></td>
 * <td><p>HTML Optional Attribute. Setting the value of this attribute to 'true'
 * will disable the HTML element.</p></td>
 * </tr>
 * <tr class="altColor">
 * <td><p>htmlEscape</p></td>
 * <td><p>false</p></td>
 * <td><p>true</p></td>
 * <td><p>Enable/disable HTML escaping of rendered values.</p></td>
 * </tr>
 * <tr class="rowColor">
 * <td><p>id</p></td>
 * <td><p>false</p></td>
 * <td><p>true</p></td>
 * <td><p>HTML Standard Attribute</p></td>
 * </tr>
 * <tr class="altColor">
 * <td><p>lang</p></td>
 * <td><p>false</p></td>
 * <td><p>true</p></td>
 * <td><p>HTML Standard Attribute</p></td>
 * </tr>
 * <tr class="rowColor">
 * <td><p>maxlength</p></td>
 * <td><p>false</p></td>
 * <td><p>true</p></td>
 * <td><p>HTML Optional Attribute</p></td>
 * </tr>
 * <tr class="altColor">
 * <td><p>onblur</p></td>
 * <td><p>false</p></td>
 * <td><p>true</p></td>
 * <td><p>HTML Event Attribute</p></td>
 * </tr>
 * <tr class="rowColor">
 * <td><p>onchange</p></td>
 * <td><p>false</p></td>
 * <td><p>true</p></td>
 * <td><p>HTML Event Attribute</p></td>
 * </tr>
 * <tr class="altColor">
 * <td><p>onclick</p></td>
 * <td><p>false</p></td>
 * <td><p>true</p></td>
 * <td><p>HTML Event Attribute</p></td>
 * </tr>
 * <tr class="rowColor">
 * <td><p>ondblclick</p></td>
 * <td><p>false</p></td>
 * <td><p>true</p></td>
 * <td><p>HTML Event Attribute</p></td>
 * </tr>
 * <tr class="altColor">
 * <td><p>onfocus</p></td>
 * <td><p>false</p></td>
 * <td><p>true</p></td>
 * <td><p>HTML Event Attribute</p></td>
 * </tr>
 * <tr class="rowColor">
 * <td><p>onkeydown</p></td>
 * <td><p>false</p></td>
 * <td><p>true</p></td>
 * <td><p>HTML Event Attribute</p></td>
 * </tr>
 * <tr class="altColor">
 * <td><p>onkeypress</p></td>
 * <td><p>false</p></td>
 * <td><p>true</p></td>
 * <td><p>HTML Event Attribute</p></td>
 * </tr>
 * <tr class="rowColor">
 * <td><p>onkeyup</p></td>
 * <td><p>false</p></td>
 * <td><p>true</p></td>
 * <td><p>HTML Event Attribute</p></td>
 * </tr>
 * <tr class="altColor">
 * <td><p>onmousedown</p></td>
 * <td><p>false</p></td>
 * <td><p>true</p></td>
 * <td><p>HTML Event Attribute</p></td>
 * </tr>
 * <tr class="rowColor">
 * <td><p>onmousemove</p></td>
 * <td><p>false</p></td>
 * <td><p>true</p></td>
 * <td><p>HTML Event Attribute</p></td>
 * </tr>
 * <tr class="altColor">
 * <td><p>onmouseout</p></td>
 * <td><p>false</p></td>
 * <td><p>true</p></td>
 * <td><p>HTML Event Attribute</p></td>
 * </tr>
 * <tr class="rowColor">
 * <td><p>onmouseover</p></td>
 * <td><p>false</p></td>
 * <td><p>true</p></td>
 * <td><p>HTML Event Attribute</p></td>
 * </tr>
 * <tr class="altColor">
 * <td><p>onmouseup</p></td>
 * <td><p>false</p></td>
 * <td><p>true</p></td>
 * <td><p>HTML Event Attribute</p></td>
 * </tr>
 * <tr class="rowColor">
 * <td><p>onselect</p></td>
 * <td><p>false</p></td>
 * <td><p>true</p></td>
 * <td><p>HTML Event Attribute</p></td>
 * </tr>
 * <tr class="altColor">
 * <td><p>path</p></td>
 * <td><p>true</p></td>
 * <td><p>true</p></td>
 * <td><p>Path to property for data binding</p></td>
 * </tr>
 * <tr class="rowColor">
 * <td><p>readonly</p></td>
 * <td><p>false</p></td>
 * <td><p>true</p></td>
 * <td><p>HTML Optional Attribute. Setting the value of this attribute to 'true'
 * will make the HTML element readonly.</p></td>
 * </tr>
 * <tr class="altColor">
 * <td><p>showPassword</p></td>
 * <td><p>false</p></td>
 * <td><p>true</p></td>
 * <td><p>Is the password value to be shown? Defaults to false.</p></td>
 * </tr>
 * <tr class="rowColor">
 * <td><p>size</p></td>
 * <td><p>false</p></td>
 * <td><p>true</p></td>
 * <td><p>HTML Optional Attribute</p></td>
 * </tr>
 * <tr class="altColor">
 * <td><p>tabindex</p></td>
 * <td><p>false</p></td>
 * <td><p>true</p></td>
 * <td><p>HTML Standard Attribute</p></td>
 * </tr>
 * <tr class="rowColor">
 * <td><p>title</p></td>
 * <td><p>false</p></td>
 * <td><p>true</p></td>
 * <td><p>HTML Standard Attribute</p></td>
 * </tr>
 * </tbody>
 * </table>
 *
 * @author Rob Harrop
 * @author Rick Evans
 * @author Rossen Stoyanchev
 * @since 2.0
 */
/**
 * {<< @code >> <password>}标签使用绑定值呈现类型为'password'的HTML'input'标签。 
 *  <p> <表> <标题>属性摘要</标题> <thead> <tr> <th class ="colFirst">属性</ th> <th class ="colOne">必需？</ th> <th class ="colOne">运行时表达式？</ th> <th class ="colLast">描述</ th> </ tr> </ thead> <tbody> <tr class ="altColor"> <td> <p > accesskey </ p> </ td> <td> <p> false </ p> </ td> <td> <p> true </ p> </ td> <td> <p> HTML标准属性< / p> </ td> </ tr> <tr class ="rowColor"> <td> <p> alt </ p> </ td> <td> <p> false </ p> </ td> < td> <p> true </ p> </ td> <td> <p> HTML可选属性</ p> </ td> </ tr> <tr class ="altColor"> <td> <p>自动完成</ p> </ td> <td> <p> false </ p> </ td> <td> <p> true </ p> </ td> <td> <p>通用可选属性</ p > </ td> </ tr> <tr class ="rowColor"> <td> <p> cssClass </ p> </ td> <td> <p> false </ p> </ td> <td> <p> true </ p> </ td> <td> <p> HTML可选属性</ p> </ td> </ tr> <tr class ="altColor"> <td> <p> cssErrorClass </ p> </ td> <td> <p> false </ p> </ td> <td> <p> true </ p> </ td> <td> <p> HTML可选属性。 
 *  </ p> </ td> </ tr> <tr class ="rowColor"> <td> <p> cssStyle </ p> </ td> <td> <p> false </ p> </ td> <td> <p> true </ p> </ td> <td> <p> HTML可选属性</ p> </ td> </ tr> <tr class ="altColor "> <td> <p> dir </ p> </ td> <td> <p> false </ p> </ td> <td> <p> true </ p> </ td> <td> <p> HTML标准属性</ p> </ td> </ tr> <tr class ="rowColor"> <td> <p>已禁用</ p> </ td> <td> <p> false </ p> </ td> <td> <p> true </ p> </ td> <td> <p> HTML可选属性。 
 * 将此属性的值设置为'true'将禁用HTML元素。 
 * </ p> </ td> </ tr> <tr class ="altColor"> <td> <p> htmlEscape </ p> </ td > <td> <p> false </ p> </ td> <td> <p> true </ p> </ td> <td> <p>启用/禁用呈现值的HTML转义。 
 * </ p> </ td> </ tr> <tr class ="rowColor"> <td> <p> id </ p> </ td> <td> <p> false </ p> </ td> <td> < p> true </ p> </ td> <td> <p> HTML标准属性</ p> </ td> </ tr> <tr class ="altColor"> <td> <p> lang </ p > </ td> <td> <p> false </ p> </ td> <td> <p> true </ p> </ td> <td> <p> HTML标准属性</ p> </ td> </ tr> <tr class ="rowColor"> <td> <p>最大长度</ p> </ td> <td> <p> false </ p> </ td> <td> <p> true </ p> </ td> <td> <p> HTML可选属性</ p> </ td> </ tr> <tr class ="altColor"> <td> <p> onblur </ p> < / td> <td> <p> false </ p> </ td> <td> <p> true </ p> </ td> <td> <p> HTML事件属性</ p> </ td> </ tr> <tr class ="rowColor"> <td> <p> onchange </ p> </ td> <td> <p> false </ p> </ td> <td> <p> true < / p> </ td> <td> <p> HTML事件属性</ p> </ td> </ tr> <tr class ="altColor"> <td> <p> onclick </ p> </ td > <td> <p> false </ p> </ td> <td> <p> true </ p > </ td> <td> <p> HTML事件属性</ p> </ td> </ tr> <tr class ="rowColor"> <td> <p> ondblclick </ p> </ td> < td> <p> false </ p> </ td> <td> <p> true </ p> </ td> <td> <p> HTML事件属性</ p> </ td> </ tr> <tr class ="altColor"> <td> <p>聚焦</ p> </ td> <td> <p>假</ p> </ td> <td> <p>真</ p> < / td> <td> <p> HTML事件属性</ p> </ td> </ tr> <tr class ="rowColor"> <td> <p> onkeydown </ p> </ td> <td> <p> false </ p> </ td> <td> <p> true </ p> </ td> <td> <p> HTML事件属性</ p> </ td> </ tr> <tr class ="altColor"> <td> <p> onkeypress </ p> </ td> <td> <p> false </ p> </ td> <td> <p> true </ p> </ td > <td> <p> HTML事件属性</ p> </ td> </ tr> <tr class ="rowColor"> <td> <p> onkeyup </ p> </ td> <td> <p > false </ p> </ td> <td> <p> true </ p> </ td> <td> <p> HTML事件属性</ p> </ td> </ tr> <tr class = "altColor"> <td> <p> onmousedown </ p> </ td> <td> <p> false </ p> </ td> <td> <p> true </ p> </ td> < td> <p> HTML事件属性</ p> </ td> </ tr> <tr class ="rowColor"> <td> <p> onmousemove </ p> </ td> <td> <p> false </ p> </ td> <td> <p> true </ p> </ td> <td> <p> HTML事件属性</ p> </ td> </ tr> <tr class = "altColor"> <td> <p> onmouseout </ p> </ td> <td> <p> false </ p> </ td> <td> <p> true </ p> </ td> < td> <p> HTML事件属性</ p> </ td> </ tr> <tr class ="rowColor"> <td> <p> onmouseover </ p> </ td> <td> <p> false </ p> </ td> <td> <p> true </ p> </ td> <td> <p> HTML事件属性</ p> </ td> </ tr> <tr class ="altColor "> <td> <p> onmouseup </ p> </ td> <td> <p> false </ p> </ td> <td> <p> true </ p> </ td> <td> <p> HTML事件属性</ p> </ td> </ tr> <tr class ="rowColor"> <td> <p> onselect </ p> </ td> <td> <p> false </ p> </ td> <td> <p> true </ p> </ td> <td> <p> HTML事件属性</ p> </ td> </ tr> <tr class ="altColor"> <td> <p>路径</ p> </ td> <td> <p> true </ p> </ td> <td> <p> true </ p> </ td> <td> <p >数据绑定属性的路径</ p> </ td> </ tr> <tr class ="rowColor"> <td> <p>只读</ p> </ td> <td> <p> false < / p> </ td> <td> <p> true </ p> </ td> <td> <p> HTML可选属性
 */
/**
 * 将此属性的值设置为'true'将使HTML元素变为只读。 
 * </ p> </ td> </ tr> <tr class ="altColor"> <td> <p> showPassword </ p> </ td> <td> <p> false </ p> </ td> <td> <p> true </ p> </ td> <td> <p>是否显示密码值？默认为false。 
 * </ p> </ td> </ tr> <tr class ="rowColor"> <td> <p> size </ p> </ td> <td> <p> false </ p> </ td> <td> <p> true </ p> </ td> <td> <p> HTML可选属性</ p> </ td> </ tr> <tr class ="altColor"> <td > <p> tabindex </ p> </ td> <td> <p> false </ p> </ td> <td> <p> true </ p> </ td> <td> <p> HTML标准属性</ p> </ td> </ tr> <tr class ="rowColor"> <td> <p> title </ p> </ td> <td> <p> false </ p> </ td> <td> <p> true </ p> </ td> <td> <p> HTML标准属性</ p> </ td> </ tr> </ tbody> </ table> << @author >> Rob Harrop << @author >> Rick Evans << @author >> Rossen Stoyanchev @since 2.0
 */
@SuppressWarnings("serial")
public class PasswordInputTag extends InputTag {

	private boolean showPassword = false;


	/**
	 * Is the password value to be rendered?
	 * @param showPassword {@code true} if the password value is to be rendered
	 */
	/**
	 * 是否要提供密码值？ 
	 * @param  showPassword {@code  true}（如果要呈现密码值）
	 */
	public void setShowPassword(boolean showPassword) {
		this.showPassword = showPassword;
	}

	/**
	 * Is the password value to be rendered?
	 * @return {@code true} if the password value to be rendered
	 */
	/**
	 * 是否要提供密码值？ 
	 * @return  {@code  true}（如果要呈现的密码值）
	 */
	public boolean isShowPassword() {
		return this.showPassword;
	}


	/**
	 * Flags "type" as an illegal dynamic attribute.
	 */
	/**
	 * 将"类型"标记为非法动态属性。 
	 * 
	 */
	@Override
	protected boolean isValidDynamicAttribute(String localName, Object value) {
		return !"type".equals(localName);
	}

	/**
	 * Return '{@code password}' causing the rendered HTML '{@code input}'
	 * element to have a '{@code type}' of '{@code password}'.
	 */
	/**
	 * 返回"{{@@code> password}"，使呈现的HTML"{@code  input}"元素的"{@code  type}"为"{@code  password}"。 
	 * 
	 */
	@Override
	protected String getType() {
		return "password";
	}

	/**
	 * The {@link PasswordInputTag} only writes it's value if the
	 * {@link #setShowPassword(boolean) 'showPassword'} property value is
	 * {@link Boolean#TRUE true}.
	 */
	/**
	 * 仅当{@link  #setShowPassword（boolean）'showPassword'}属性值为{@link  Boolean＃TRUE true}时，{<@link> PasswordInputTag}才写入其值。 
	 * 
	 */
	@Override
	protected void writeValue(TagWriter tagWriter) throws JspException {
		if (this.showPassword) {
			super.writeValue(tagWriter);
		}
		else {
			tagWriter.writeAttribute("value", processFieldValue(getName(), "", getType()));
		}
	}

}
