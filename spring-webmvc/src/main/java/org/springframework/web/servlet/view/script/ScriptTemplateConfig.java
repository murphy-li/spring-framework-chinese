/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2019 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2019的原始作者或作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.web.servlet.view.script;

import java.nio.charset.Charset;
import java.util.function.Supplier;

import javax.script.Bindings;
import javax.script.ScriptEngine;

import org.springframework.lang.Nullable;

/**
 * Interface to be implemented by objects that configure and manage a
 * JSR-223 {@link ScriptEngine} for automatic lookup in a web environment.
 * Detected and used by {@link ScriptTemplateView}.
 *
 * @author Sebastien Deleuze
 * @since 4.2
 */
/**
 * 由配置和管理JSR-223 {@link  ScriptEngine}的对象实现的接口，以在Web环境中自动查找。 
 * 由{@link  ScriptTemplateView}检测和使用。 
 *  @author 塞巴斯蒂安·德勒兹@4.2起
 */
public interface ScriptTemplateConfig {

	/**
	 * Return the {@link ScriptEngine} to use by the views.
	 */
	/**
	 * 返回{@link  ScriptEngine}以供视图使用。 
	 * 
	 */
	@Nullable
	ScriptEngine getEngine();

	/**
	 * Return the engine supplier that will be used to instantiate the {@link ScriptEngine}.
	 * @since 5.2
	 */
	/**
	 * 返回将用于实例化{@link  ScriptEngine}的引擎供应商。 
	 *  @5.2起
	 */
	@Nullable
	Supplier<ScriptEngine> getEngineSupplier();

	/**
	 * Return the engine name that will be used to instantiate the {@link ScriptEngine}.
	 */
	/**
	 * 返回将用于实例化{@link  ScriptEngine}的引擎名称。 
	 * 
	 */
	@Nullable
	String getEngineName();

	/**
	 * Return whether to use a shared engine for all threads or whether to create
	 * thread-local engine instances for each thread.
	 */
	/**
	 * 返回是为所有线程使用共享引擎，还是为每个线程创建线程本地引擎实例。 
	 * 
	 */
	@Nullable
	Boolean isSharedEngine();

	/**
	 * Return the scripts to be loaded by the script engine (library or user provided).
	 */
	/**
	 * 返回脚本引擎要加载的脚本（库或用户提供的）。 
	 * 
	 */
	@Nullable
	String[] getScripts();

	/**
	 * Return the object where the render function belongs (optional).
	 */
	/**
	 * 返回render函数所属的对象（可选）。 
	 * 
	 */
	@Nullable
	String getRenderObject();

	/**
	 * Return the render function name (optional). If not specified, the script templates
	 * will be evaluated with {@link ScriptEngine#eval(String, Bindings)}.
	 */
	/**
	 * 返回渲染函数名称（可选）。 
	 * 如果未指定，则将使用{@link  ScriptEngine＃eval（String，Bindings）}评估脚本模板。 
	 * 
	 */
	@Nullable
	String getRenderFunction();

	/**
	 * Return the content type to use for the response.
	 * @since 4.2.1
	 */
	/**
	 * 返回用于响应的内容类型。 
	 *  @4.2.1起
	 */
	@Nullable
	String getContentType();

	/**
	 * Return the charset used to read script and template files.
	 */
	/**
	 * 返回用于读取脚本和模板文件的字符集。 
	 * 
	 */
	@Nullable
	Charset getCharset();

	/**
	 * Return the resource loader path(s) via a Spring resource location.
	 */
	/**
	 * 通过Spring资源位置返回资源加载器路径。 
	 * 
	 */
	@Nullable
	String getResourceLoaderPath();

}
