/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2018的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.web.servlet;

import java.util.Locale;

import org.springframework.lang.Nullable;

/**
 * Interface to be implemented by objects that can resolve views by name.
 *
 * <p>View state doesn't change during the running of the application,
 * so implementations are free to cache views.
 *
 * <p>Implementations are encouraged to support internationalization,
 * i.e. localized view resolution.
 *
 * @author Rod Johnson
 * @author Juergen Hoeller
 * @see org.springframework.web.servlet.view.InternalResourceViewResolver
 * @see org.springframework.web.servlet.view.ResourceBundleViewResolver
 * @see org.springframework.web.servlet.view.XmlViewResolver
 */
/**
 * 由可以通过名称解析视图的对象实现的接口。 
 *  <p>视图状态在应用程序运行期间不会更改，因此实现可以自由地缓存视图。 
 *  <p>鼓励实施以支持国际化，即本地化视图解析。 
 *  @author  Rod Johnson @author  Juergen Hoeller 
 * @see  org.springframework.web.servlet.view.InternalResourceViewResolver 
 * @see  org.springframework.web.servlet.view.ResourceBundleViewResolver 
 * @see  org.springframework。 
 *  web.servlet.view.XmlViewResolver
 */
public interface ViewResolver {

	/**
	 * Resolve the given view by name.
	 * <p>Note: To allow for ViewResolver chaining, a ViewResolver should
	 * return {@code null} if a view with the given name is not defined in it.
	 * However, this is not required: Some ViewResolvers will always attempt
	 * to build View objects with the given name, unable to return {@code null}
	 * (rather throwing an exception when View creation failed).
	 * @param viewName name of the view to resolve
	 * @param locale the Locale in which to resolve the view.
	 * ViewResolvers that support internationalization should respect this.
	 * @return the View object, or {@code null} if not found
	 * (optional, to allow for ViewResolver chaining)
	 * @throws Exception if the view cannot be resolved
	 * (typically in case of problems creating an actual View object)
	 */
	/**
	 * 通过名称解析给定的视图。 
	 *  <p>注意：为了允许ViewResolver链接，如果其中未定义具有给定名称的视图，则ViewResolver应该返回{@code  null}。 
	 * 但是，这不是必需的：某些ViewResolvers将始终尝试使用给定名称构建View对象，而无法返回{@code  null}（而不是在创建View失败时引发异常）。 
	 *  
	 * @param  viewName解析视图的名称
	 * @param  locale解析视图的语言环境。 
	 * 支持国际化的ViewResolvers应该尊重这一点。 
	 *  
	 * @return  View对象，如果找不到，则为{<@@code> null}（可选，以允许ViewResolver链接）
	 * @throws 如果无法解析视图，则异常（通常在创建实际View对象时出现问题） ）
	 */
	@Nullable
	View resolveViewName(String viewName, Locale locale) throws Exception;

}
