/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2019 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2019的原始作者或作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.util.unit;

/**
 * A standard set of {@link DataSize} units.
 *
 * <p>The unit prefixes used in this class are
 * <a href="https://en.wikipedia.org/wiki/Binary_prefix">binary prefixes</a>
 * indicating multiplication by powers of 2. The following table displays the
 * enum constants defined in this class and corresponding values.
 *
 * <p>
 * <table border="1">
 * <tr><th>Constant</th><th>Data Size</th><th>Power&nbsp;of&nbsp;2</th><th>Size in Bytes</th></tr>
 * <tr><td>{@link #BYTES}</td><td>1B</td><td>2^0</td><td>1</td></tr>
 * <tr><td>{@link #KILOBYTES}</td><td>1KB</td><td>2^10</td><td>1,024</td></tr>
 * <tr><td>{@link #MEGABYTES}</td><td>1MB</td><td>2^20</td><td>1,048,576</td></tr>
 * <tr><td>{@link #GIGABYTES}</td><td>1GB</td><td>2^30</td><td>1,073,741,824</td></tr>
 * <tr><td>{@link #TERABYTES}</td><td>1TB</td><td>2^40</td><td>1,099,511,627,776</td></tr>
 * </table>
 *
 * @author Stephane Nicoll
 * @author Sam Brannen
 * @since 5.1
 * @see DataSize
 */
/**
 * 标准的{@link  DataSize}单位集。 
 *  <p>该类中使用的单位前缀为<a href="https://en.wikipedia.org/wiki/Binary_prefix">二进制前缀</a>，表示乘以2的幂。 
 * 下表显示了枚举。 
 * 此类中定义的常量和相应的值。 
 *  <p> <table border ="1"> <tr> <th>常量</ th> <th>数据大小</ th> <th> 2的幂</ th> <th>字节大小</ th > </ tr> <tr> <td> {<@link> #BYTES} </ td> <td> 1B </ td> <td> 2 ^ 0 </ td> <td> 1 </ td> < / tr> <tr> <td> {<@link> #KILOBYTES} </ td> <td> 1KB </ td> <td> 2 ^ 10 </ td> <td> 1,024 </ td> </ tr > <tr> <td> {<@link> #MEGABYTES} </ td> <td> 1MB </ td> <td> 2 ^ 20 </ td> <td> 1,048,576 </ td> </ tr> < tr> <td> {<@link> #GIGABYTES} </ td> <td> 1GB </ td> <td> 2 ^ 30 </ td> <td> 1,073,741,824 </ td> </ tr> <tr> <td> {<@link> #TERABYTES} </ td> <td> 1TB </ td> <td> 2 ^ 40 </ td> <td> 1,099,511,627,776 </ td> </ tr> </ table> @author  Stephane Nicoll @author  Sam Brannen @从5.1开始
 * @see  DataSize
 */
public enum DataUnit {

	/**
	 * Bytes, represented by suffix {@code B}.
	 */
	/**
	 * 字节，用后缀{@code  B}表示。 
	 * 
	 */
	BYTES("B", DataSize.ofBytes(1)),

	/**
	 * Kilobytes, represented by suffix {@code KB}.
	 */
	/**
	 * 千字节，由后缀{@code  KB}表示。 
	 * 
	 */
	KILOBYTES("KB", DataSize.ofKilobytes(1)),

	/**
	 * Megabytes, represented by suffix {@code MB}.
	 */
	/**
	 * 以后缀{@code  MB}表示的兆字节。 
	 * 
	 */
	MEGABYTES("MB", DataSize.ofMegabytes(1)),

	/**
	 * Gigabytes, represented by suffix {@code GB}.
	 */
	/**
	 * 千兆字节，用后缀{@code  GB}表示。 
	 * 
	 */
	GIGABYTES("GB", DataSize.ofGigabytes(1)),

	/**
	 * Terabytes, represented by suffix {@code TB}.
	 */
	/**
	 * TB，以后缀{@code  TB}表示。 
	 * 
	 */
	TERABYTES("TB", DataSize.ofTerabytes(1));


	private final String suffix;

	private final DataSize size;


	DataUnit(String suffix, DataSize size) {
		this.suffix = suffix;
		this.size = size;
	}

	DataSize size() {
		return this.size;
	}

	/**
	 * Return the {@link DataUnit} matching the specified {@code suffix}.
	 * @param suffix one of the standard suffixes
	 * @return the {@link DataUnit} matching the specified {@code suffix}
	 * @throws IllegalArgumentException if the suffix does not match the suffix
	 * of any of this enum's constants
	 */
	/**
	 * 返回与指定的{@code 后缀}匹配的{@link  DataUnit}。 
	 *  
	 * @param 后缀为标准后缀之一
	 * @return  {@link  DataUnit}与指定的{@code 后缀}匹配的
	 * @throws  IllegalArgumentException如果后缀与该枚举的任何后缀都不匹配常数
	 */
	public static DataUnit fromSuffix(String suffix) {
		for (DataUnit candidate : values()) {
			if (candidate.suffix.equals(suffix)) {
				return candidate;
			}
		}
		throw new IllegalArgumentException("Unknown data unit suffix '" + suffix + "'");
	}

}
