/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2019 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2019的原始作者或作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.util.xml;

import javax.xml.transform.OutputKeys;
import javax.xml.transform.Transformer;

import org.springframework.util.Assert;

/**
 * Contains common behavior relating to {@link javax.xml.transform.Transformer Transformers}
 * and the {@code javax.xml.transform} package in general.
 *
 * @author Rick Evans
 * @author Juergen Hoeller
 * @since 2.5.5
 */
/**
 * 一般包含与{@link  javax.xml.transform.Transformer变形金刚}和{@code  javax.xml.transform}包有关的常见行为。 
 *  @author 里克·埃文斯（Rick Evans）@author  Juergen Hoeller @2.5.5起
 */
public abstract class TransformerUtils {

	/**
	 * The indent amount of characters if {@link #enableIndenting indenting is enabled}.
	 * <p>Defaults to "2".
	 */
	/**
	 * 如果启用了<< @link> #enableIndenting缩进，则缩进字符数。 
	 *  <p>默认为"2"。 
	 * 
	 */
	public static final int DEFAULT_INDENT_AMOUNT = 2;


	/**
	 * Enable indenting for the supplied {@link javax.xml.transform.Transformer}.
	 * <p>If the underlying XSLT engine is Xalan, then the special output key {@code indent-amount}
	 * will be also be set to a value of {@link #DEFAULT_INDENT_AMOUNT} characters.
	 * @param transformer the target transformer
	 * @see javax.xml.transform.Transformer#setOutputProperty(String, String)
	 * @see javax.xml.transform.OutputKeys#INDENT
	 */
	/**
	 * 为提供的{@link  javax.xml.transform.Transformer}启用缩进。 
	 *  <p>如果基础XSLT引擎是Xalan，则特殊输出键{@code  indent-amount}也将设置为{@link  #DEFAULT_INDENT_AMOUNT}字符的值。 
	 *  
	 * @param 转换器目标转换器
	 * @see  javax.xml.transform.Transformer＃setOutputProperty（String，String）
	 * @see  javax.xml.transform.OutputKeys＃INDENT
	 */
	public static void enableIndenting(Transformer transformer) {
		enableIndenting(transformer, DEFAULT_INDENT_AMOUNT);
	}

	/**
	 * Enable indenting for the supplied {@link javax.xml.transform.Transformer}.
	 * <p>If the underlying XSLT engine is Xalan, then the special output key {@code indent-amount}
	 * will be also be set to a value of {@link #DEFAULT_INDENT_AMOUNT} characters.
	 * @param transformer the target transformer
	 * @param indentAmount the size of the indent (2 characters, 3 characters, etc)
	 * @see javax.xml.transform.Transformer#setOutputProperty(String, String)
	 * @see javax.xml.transform.OutputKeys#INDENT
	 */
	/**
	 * 为提供的{@link  javax.xml.transform.Transformer}启用缩进。 
	 *  <p>如果基础XSLT引擎是Xalan，则特殊输出键{@code  indent-amount}也将设置为{@link  #DEFAULT_INDENT_AMOUNT}字符的值。 
	 *  
	 * @param 转换器目标转换器
	 * @param  indent缩进的大小（2个字符，3个字符等）
	 * @see  javax.xml.transform.Transformer＃setOutputProperty（String，String）
	 * @see  javax .xml.transform.OutputKeys＃INDENT
	 */
	public static void enableIndenting(Transformer transformer, int indentAmount) {
		Assert.notNull(transformer, "Transformer must not be null");
		if (indentAmount < 0) {
			throw new IllegalArgumentException("Invalid indent amount (must not be less than zero): " + indentAmount);
		}
		transformer.setOutputProperty(OutputKeys.INDENT, "yes");
		try {
			// Xalan-specific, but this is the most common XSLT engine in any case
			transformer.setOutputProperty("{http://xml.apache.org/xalan}indent-amount", String.valueOf(indentAmount));
		}
		catch (IllegalArgumentException ignored) {
		}
	}

	/**
	 * Disable indenting for the supplied {@link javax.xml.transform.Transformer}.
	 * @param transformer the target transformer
	 * @see javax.xml.transform.OutputKeys#INDENT
	 */
	/**
	 * 禁用提供的{@link  javax.xml.transform.Transformer}的缩进。 
	 *  
	 * @param 转换器目标转换器
	 * @see  javax.xml.transform.OutputKeys＃INDENT
	 */
	public static void disableIndenting(Transformer transformer) {
		Assert.notNull(transformer, "Transformer must not be null");
		transformer.setOutputProperty(OutputKeys.INDENT, "no");
	}

}
