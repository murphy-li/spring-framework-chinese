/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2016 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2016的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.jms.support.destination;

import javax.jms.Destination;
import javax.jms.JMSException;
import javax.jms.Session;

import org.springframework.lang.Nullable;

/**
 * Strategy interface for resolving JMS destinations.
 *
 * <p>Used by {@link org.springframework.jms.core.JmsTemplate} for resolving
 * destination names from simple {@link String Strings} to actual
 * {@link Destination} implementation instances.
 *
 * <p>The default {@link DestinationResolver} implementation used by
 * {@link org.springframework.jms.core.JmsTemplate} instances is the
 * {@link DynamicDestinationResolver} class. Consider using the
 * {@link JndiDestinationResolver} for more advanced scenarios.
 *
 * @author Juergen Hoeller
 * @since 1.1
 * @see org.springframework.jms.core.JmsTemplate#setDestinationResolver
 * @see org.springframework.jms.support.destination.DynamicDestinationResolver
 * @see org.springframework.jms.support.destination.JndiDestinationResolver
 */
/**
 * 解决JMS目标的策略界面。 
 *  <p>由{@link  org.springframework.jms.core.JmsTemplate}使用，用于将目标名称从简单的{@link 字符串字符串}解析为实际的{@link  Destination}实现实例。 
 *  <p> {<@link> org.springframework.jms.core.JmsTemplate}实例使用的默认{@link  DestinationResolver}实现是{@link  DynamicDestinationResolver}类。 
 * 考虑将{@link  JndiDestinationResolver}用于更高级的方案。 
 *  @author  Juergen Hoeller @since 1.1起
 * @see  org.springframework.jms.core.JmsTemplate＃setDestinationResolver 
 * @see  org.springframework.jms.support.destination.DynamicDestinationResolver 
 * @see  org.springframework.jms.support .destination.JndiDestinationResolver
 */
@FunctionalInterface
public interface DestinationResolver {

	/**
	 * Resolve the given destination name, either as located resource
	 * or as dynamic destination.
	 * @param session the current JMS Session
	 * (may be {@code null} if the resolver implementation is able to work without it)
	 * @param destinationName the name of the destination
	 * @param pubSubDomain {@code true} if the domain is pub-sub, {@code false} if P2P
	 * @return the JMS destination (either a topic or a queue)
	 * @throws javax.jms.JMSException if the JMS Session failed to resolve the destination
	 * @throws DestinationResolutionException in case of general destination resolution failure
	 */
	/**
	 * 将给定的目标名称解析为定位资源或动态目标。 
	 * 当前的JMS会话的
	 * @param 会话（如果解析器实现能够在没有它的情况下运行，则可以为{@code  null}）
	 * @param  destinationName目标的名称
	 * @param  pubSubDomain {@code 如果域是pub-sub，则为true； 
	 * 如果是P2P 
	 * @return  JMS目标（主题或队列），则为{@code  false}； 
	 * 如果JMS会话无法解析，则为@
	 * @throws> javax.jms.JMSException。 
	 * 一般目标解析失败时，目标
	 * @throws  DestinationResolutionException
	 */
	Destination resolveDestinationName(@Nullable Session session, String destinationName, boolean pubSubDomain)
			throws JMSException;

}
