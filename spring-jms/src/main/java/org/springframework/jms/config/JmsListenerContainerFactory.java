/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2018的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.jms.config;

import org.springframework.jms.listener.MessageListenerContainer;

/**
 * Factory of {@link MessageListenerContainer} based on a
 * {@link JmsListenerEndpoint} definition.
 *
 * @author Stephane Nicoll
 * @since 4.1
 * @param <C> the container type
 * @see JmsListenerEndpoint
 */
/**
 * 基于{@link  JmsListenerEndpoint}定义的{@link  MessageListenerContainer}的工厂。 
 *  @author  Stephane Nicoll @4.1起
 * @param  <C>容器类型
 * @see  JmsListenerEndpoint
 */
public interface JmsListenerContainerFactory<C extends MessageListenerContainer> {

	/**
	 * Create a {@link MessageListenerContainer} for the given {@link JmsListenerEndpoint}.
	 * @param endpoint the endpoint to configure
	 * @return the created container
	 */
	/**
	 * 为给定的{@link  JmsListenerEndpoint}创建一个{@link  MessageListenerContainer}。 
	 *  
	 * @param 端点端点配置
	 * @return 创建的容器
	 */
	C createListenerContainer(JmsListenerEndpoint endpoint);

}
