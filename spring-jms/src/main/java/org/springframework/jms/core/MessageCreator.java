/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2016 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2016的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.jms.core;

import javax.jms.JMSException;
import javax.jms.Message;
import javax.jms.Session;

/**
 * Creates a JMS message given a {@link Session}.
 *
 * <p>The {@code Session} typically is provided by an instance
 * of the {@link JmsTemplate} class.
 *
 * <p>Implementations <i>do not</i> need to concern themselves with
 * checked {@code JMSExceptions} (from the '{@code javax.jms}'
 * package) that may be thrown from operations they attempt. The
 * {@code JmsTemplate} will catch and handle these
 * {@code JMSExceptions} appropriately.
 *
 * @author Mark Pollack
 * @since 1.1
 */
/**
 * 给定{@link 会话}创建JMS消息。 
 *  <p> {<@code>会话}通常由{@link  JmsTemplate}类的实例提供。 
 *  <p>实现<i>不需要</ i>关心被检查的{@code  JMSExceptions}（来自"{@code  javax.jms}"包）可能会从尝试执行的操作中抛出。 
 *  {@code  JmsTemplate}将捕获并适当处理这些{@code  JMSExceptions}。 
 *  @author  Mark Pollack @始于1.1
 */
@FunctionalInterface
public interface MessageCreator {

	/**
	 * Create a {@link Message} to be sent.
	 * @param session the JMS {@link Session} to be used to create the
	 * {@code Message} (never {@code null})
	 * @return the {@code Message} to be sent
	 * @throws javax.jms.JMSException if thrown by JMS API methods
	 */
	/**
	 * 创建要发送的{@link 消息}。 
	 *  
	 * @param 会话用于创建{@code 消息}的JMS {@link 会话}（永不{@code  null}）
	 * @return  {@code 消息}到如果由JMS API方法抛出，则发送
	 * @throws  javax.jms.JMSException
	 */
	Message createMessage(Session session) throws JMSException;

}
