/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2008 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2008的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.jms.listener;

/**
 * Interface to be implemented by message listener objects that suggest a specific
 * name for a durable subscription that they might be registered with. Otherwise
 * the listener class name will be used as a default subscription name.
 *
 * <p>Applies to {@link javax.jms.MessageListener} objects as well as to
 * {@link SessionAwareMessageListener} objects and plain listener methods
 * (as supported by {@link org.springframework.jms.listener.adapter.MessageListenerAdapter}.
 *
 * @author Juergen Hoeller
 * @since 2.5.6
 */
/**
 * 由消息侦听器对象实现的接口，这些消息侦听器对象建议可能会注册的持久订阅的特定名称。 
 * 否则，侦听器类名称将用作默认订阅名称。 
 *  <p>适用于{@link  javax.jms.MessageListener}对象以及{@link  SessionAwareMessageListener}对象和普通侦听器方法（受{@link  org.springframework.jms.listener支持。 
 *  adapter.MessageListenerAdapter}。 
 * @author  Juergen Hoeller @since 2.5.6起
 */
public interface SubscriptionNameProvider {

	/**
	 * Determine the subscription name for this message listener object.
	 */
	/**
	 * 确定此消息侦听器对象的订阅名称。 
	 * 
	 */
	String getSubscriptionName();

}
