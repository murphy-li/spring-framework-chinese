/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2012 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2012的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.scripting;

import java.io.IOException;

import org.springframework.lang.Nullable;

/**
 * Interface that defines the source of a script.
 * Tracks whether the underlying script has been modified.
 *
 * @author Rob Harrop
 * @author Juergen Hoeller
 * @since 2.0
 */
/**
 * 定义脚本源的接口。 
 * 跟踪基础脚本是否已被修改。 
 *  @author 罗布·哈罗普（Rob Harrop）@author  Juergen Hoeller @始于2.0
 */
public interface ScriptSource {

	/**
	 * Retrieve the current script source text as String.
	 * @return the script text
	 * @throws IOException if script retrieval failed
	 */
	/**
	 * 以字符串形式检索当前脚本源文本。 
	 *  
	 * @return 脚本文本
	 * @throws  IOException如果脚本检索失败
	 */
	String getScriptAsString() throws IOException;

	/**
	 * Indicate whether the underlying script data has been modified since
	 * the last time {@link #getScriptAsString()} was called.
	 * Returns {@code true} if the script has not been read yet.
	 * @return whether the script data has been modified
	 */
	/**
	 * 指示自上次调用{@link  #getScriptAsString（）}以来是否已修改基础脚本数据。 
	 * 如果尚未读取脚本，则返回{@code  true}。 
	 *  
	 * @return 脚本数据是否已被修改
	 */
	boolean isModified();

	/**
	 * Determine a class name for the underlying script.
	 * @return the suggested class name, or {@code null} if none available
	 */
	/**
	 * 确定基础脚本的类名。 
	 *  
	 * @return 建议的类名，如果没有可用的，则返回{@code  null}
	 */
	@Nullable
	String suggestedClassName();

}
