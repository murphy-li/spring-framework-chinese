/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2012 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2012的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.validation;

import java.util.Map;

import org.springframework.lang.Nullable;
import org.springframework.util.Assert;

/**
 * Convenience methods for looking up BindingResults in a model Map.
 *
 * @author Juergen Hoeller
 * @since 2.0
 * @see BindingResult#MODEL_KEY_PREFIX
 */
/**
 * 在模型Map中查找BindingResults的便捷方法。 
 *  @author 于尔根·霍勒（Juergen Hoeller）@从2.0开始
 * @see  BindingResult＃MODEL_KEY_PREFIX
 */
public abstract class BindingResultUtils {

	/**
	 * Find the BindingResult for the given name in the given model.
	 * @param model the model to search
	 * @param name the name of the target object to find a BindingResult for
	 * @return the BindingResult, or {@code null} if none found
	 * @throws IllegalStateException if the attribute found is not of type BindingResult
	 */
	/**
	 * 在给定模型中找到给定名称的BindingResult。 
	 *  
	 * @param 为要搜索的模型建模
	 * @param 命名目标对象的名称以为BindingResult 
	 * @return 查找BindingResult； 
	 * 如果未找到，则为{@code  null} 
	 * @throws  IllegalStateException找到的属性不是BindingResult类型
	 */
	@Nullable
	public static BindingResult getBindingResult(Map<?, ?> model, String name) {
		Assert.notNull(model, "Model map must not be null");
		Assert.notNull(name, "Name must not be null");
		Object attr = model.get(BindingResult.MODEL_KEY_PREFIX + name);
		if (attr != null && !(attr instanceof BindingResult)) {
			throw new IllegalStateException("BindingResult attribute is not of type BindingResult: " + attr);
		}
		return (BindingResult) attr;
	}

	/**
	 * Find a required BindingResult for the given name in the given model.
	 * @param model the model to search
	 * @param name the name of the target object to find a BindingResult for
	 * @return the BindingResult (never {@code null})
	 * @throws IllegalStateException if no BindingResult found
	 */
	/**
	 * 在给定模型中为给定名称找到所需的BindingResult。 
	 *  
	 * @param 为要搜索的模型建模
	 * @param 命名目标对象的名称，以找到BindingResult，以
	 * @return  BindingResult（从不（<{@code> null}）
	 * @throws 如果未找到BindingResult，则抛出IllegalStateException
	 */
	public static BindingResult getRequiredBindingResult(Map<?, ?> model, String name) {
		BindingResult bindingResult = getBindingResult(model, name);
		if (bindingResult == null) {
			throw new IllegalStateException("No BindingResult attribute found for name '" + name +
					"'- have you exposed the correct model?");
		}
		return bindingResult;
	}

}
