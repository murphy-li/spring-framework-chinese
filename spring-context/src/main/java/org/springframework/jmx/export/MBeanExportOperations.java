/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2018的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.jmx.export;

import javax.management.ObjectName;

/**
 * Interface that defines the set of MBean export operations that are intended to be
 * accessed by application developers during application runtime.
 *
 * <p>This interface should be used to export application resources to JMX using Spring's
 * management interface generation capabilities and, optionally, it's {@link ObjectName}
 * generation capabilities.
 *
 * @author Rob Harrop
 * @since 2.0
 * @see MBeanExporter
 */
/**
 * 定义一组MBean导出操作的接口，应用程序开发人员应在应用程序运行时对其进行访问。 
 *  <p>此接口应用于使用Spring的管理接口生成功能以及（可选）{{@link> ObjectName}生成功能将应用程序资源导出到JMX。 
 *  @author  Rob Harrop @始于2.0 
 * @see  MBeanExporter
 */
public interface MBeanExportOperations {

	/**
	 * Register the supplied resource with JMX. If the resource is not a valid MBean already,
	 * Spring will generate a management interface for it. The exact interface generated will
	 * depend on the implementation and its configuration. This call also generates an
	 * {@link ObjectName} for the managed resource and returns this to the caller.
	 * @param managedResource the resource to expose via JMX
	 * @return the {@link ObjectName} under which the resource was exposed
	 * @throws MBeanExportException if Spring is unable to generate an {@link ObjectName}
	 * or register the MBean
	 */
	/**
	 * 向JMX注册提供的资源。 
	 * 如果资源不是有效的MBean，Spring将为其生成管理接口。 
	 * 生成的确切接口将取决于实现及其配置。 
	 * 该调用还会为托管资源生成一个{@link  ObjectName}，并将其返回给调用方。 
	 *  
	 * @param  managedResource通过JMX 
	 * @return 公开资源的资源
	 * @throws  MBeanExportException，如果Spring无法生成{@link  ObjectName}或注册MBean
	 */
	ObjectName registerManagedResource(Object managedResource) throws MBeanExportException;

	/**
	 * Register the supplied resource with JMX. If the resource is not a valid MBean already,
	 * Spring will generate a management interface for it. The exact interface generated will
	 * depend on the implementation and its configuration.
	 * @param managedResource the resource to expose via JMX
	 * @param objectName the {@link ObjectName} under which to expose the resource
	 * @throws MBeanExportException if Spring is unable to register the MBean
	 */
	/**
	 * 向JMX注册提供的资源。 
	 * 如果资源不是有效的MBean，Spring将为其生成管理接口。 
	 * 生成的确切接口将取决于实现及其配置。 
	 *  
	 * @param  managedResource通过JMX公开的资源
	 * @param  objectName {@link  ObjectName}，在其下公开资源
	 * @throws  MBeanExportException（如果Spring无法注册MBean）
	 */
	void registerManagedResource(Object managedResource, ObjectName objectName) throws MBeanExportException;

	/**
	 * Remove the specified MBean from the underlying MBeanServer registry.
	 * @param objectName the {@link ObjectName} of the resource to remove
	 */
	/**
	 * 从基础MBeanServer注册表中删除指定的MBean。 
	 *  
	 * @param  objectName要删除的资源的{@link  ObjectName}
	 */
	void unregisterManagedResource(ObjectName objectName);

}
