/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2017的原始作者或作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.jmx.export.naming;

import javax.management.MalformedObjectNameException;
import javax.management.ObjectName;

import org.springframework.lang.Nullable;

/**
 * Strategy interface that encapsulates the creation of {@code ObjectName} instances.
 *
 * <p>Used by the {@code MBeanExporter} to obtain {@code ObjectName}s
 * when registering beans.
 *
 * @author Rob Harrop
 * @since 1.2
 * @see org.springframework.jmx.export.MBeanExporter
 * @see javax.management.ObjectName
 */
/**
 * 策略接口封装了{@code  ObjectName}实例的创建。 
 *  <p> {<@code> MBeanExporter}在注册bean时使用它来获取{@code  ObjectName}。 
 *  @author  Rob Harrop @始于1.2 
 * @see  org.springframework.jmx.export.MBeanExporter 
 * @see  javax.management.ObjectName
 */
@FunctionalInterface
public interface ObjectNamingStrategy {

	/**
	 * Obtain an {@code ObjectName} for the supplied bean.
	 * @param managedBean the bean that will be exposed under the
	 * returned {@code ObjectName}
	 * @param beanKey the key associated with this bean in the beans map
	 * passed to the {@code MBeanExporter}
	 * @return the {@code ObjectName} instance
	 * @throws MalformedObjectNameException if the resulting {@code ObjectName} is invalid
	 */
	/**
	 * 获取提供的bean的{@code  ObjectName}。 
	 *  
	 * @param  managedBean将在返回的{@code  ObjectName}下公开的bean 
	 * @param  beanKey在传递给{@code  MBeanExporter}的bean映射中与该bean关联的键
	 * @return 如果结果{@code  ObjectName}无效，则{@code  ObjectName}实例
	 * @throws  MalformedObjectNameException
	 */
	ObjectName getObjectName(Object managedBean, @Nullable String beanKey) throws MalformedObjectNameException;

}
