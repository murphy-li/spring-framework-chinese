/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2018的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.jmx.export.assembler;

import java.lang.reflect.Method;

/**
 * Simple subclass of {@code AbstractReflectiveMBeanInfoAssembler}
 * that always votes yes for method and property inclusion, effectively exposing
 * all public methods and properties as operations and attributes.
 *
 * @author Rob Harrop
 * @author Juergen Hoeller
 * @since 1.2
 */
/**
 * {@code  AbstractReflectiveMBeanInfoAssembler}的简单子类始终对方法和属性包含投赞成票，有效地将所有公共方法和属性公开为操作和属性。 
 *  @author  Rob Harrop @author  Juergen Hoeller @始于1.2
 */
public class SimpleReflectiveMBeanInfoAssembler extends AbstractConfigurableMBeanInfoAssembler {

	/**
	 * Always returns {@code true}.
	 */
	/**
	 * 始终返回{@code  true}。 
	 * 
	 */
	@Override
	protected boolean includeReadAttribute(Method method, String beanKey) {
		return true;
	}

	/**
	 * Always returns {@code true}.
	 */
	/**
	 * 始终返回{@code  true}。 
	 * 
	 */
	@Override
	protected boolean includeWriteAttribute(Method method, String beanKey) {
		return true;
	}

	/**
	 * Always returns {@code true}.
	 */
	/**
	 * 始终返回{@code  true}。 
	 * 
	 */
	@Override
	protected boolean includeOperation(Method method, String beanKey) {
		return true;
	}

}
