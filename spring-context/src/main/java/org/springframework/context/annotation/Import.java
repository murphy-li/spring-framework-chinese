/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2019 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2019的原始作者或作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.context.annotation;

import java.lang.annotation.Documented;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

/**
 * Indicates one or more <em>component classes</em> to import &mdash; typically
 * {@link Configuration @Configuration} classes.
 *
 * <p>Provides functionality equivalent to the {@code <import/>} element in Spring XML.
 * Allows for importing {@code @Configuration} classes, {@link ImportSelector} and
 * {@link ImportBeanDefinitionRegistrar} implementations, as well as regular component
 * classes (as of 4.2; analogous to {@link AnnotationConfigApplicationContext#register}).
 *
 * <p>{@code @Bean} definitions declared in imported {@code @Configuration} classes should be
 * accessed by using {@link org.springframework.beans.factory.annotation.Autowired @Autowired}
 * injection. Either the bean itself can be autowired, or the configuration class instance
 * declaring the bean can be autowired. The latter approach allows for explicit, IDE-friendly
 * navigation between {@code @Configuration} class methods.
 *
 * <p>May be declared at the class level or as a meta-annotation.
 *
 * <p>If XML or other non-{@code @Configuration} bean definition resources need to be
 * imported, use the {@link ImportResource @ImportResource} annotation instead.
 *
 * @author Chris Beams
 * @author Juergen Hoeller
 * @since 3.0
 * @see Configuration
 * @see ImportSelector
 * @see ImportBeanDefinitionRegistrar
 * @see ImportResource
 */
/**
 * 指示要导入的一个或多个<em>组件类</ em>-通常为{@link  Configuration @Configuration}类。 
 *  <p>提供与Spring XML中的{@code  <import />}元素等效的功能。 
 * 允许导入{@code  @Configuration}类，{<@link> ImportSelector}和{@link  ImportBeanDefinitionRegistrar}实现以及常规组件类（从4.2开始； 
 * 类似于{@link  AnnotationConfigApplicationContext＃寄存器}）。 
 * 应当使用{@link  org.springframework.beans.factory.annotation.Autowired @Autowired}注入访问在导入的{@code  @Configuration}类中声明的<p> {<@code> @Bean}定义。 
 * 可以对bean本身进行自动装配，也可以对声明bean的配置类实例进行自动装配。 
 * 后一种方法允许在{@code  @Configuration}类方法之间进行明确的，IDE友好的导航。 
 *  <p>可以在类级别或作为元注释声明。 
 *  <p>如果需要导入XML或其他非{@code  @Configuration} bean定义资源，请改用{@link  ImportResource @ImportResource}注解。 
 *  @author  Chris Beams @author  Juergen Hoeller @since 3.0起
 * @see 配置
 * @see  ImportSelector 
 * @see  ImportBeanDefinitionRegistrar 
 * @see  ImportResource
 */
@Target(ElementType.TYPE)
@Retention(RetentionPolicy.RUNTIME)
@Documented
public @interface Import {

	/**
	 * {@link Configuration @Configuration}, {@link ImportSelector},
	 * {@link ImportBeanDefinitionRegistrar}, or regular component classes to import.
	 */
	/**
	 * {@link 配置@Configuration}，{<@link> ImportSelector}，{<@link> ImportBeanDefinitionRegistrar}或要导入的常规组件类。 
	 * 
	 */
	Class<?>[] value();

}
