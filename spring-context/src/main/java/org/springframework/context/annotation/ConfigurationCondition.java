/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2018的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.context.annotation;

/**
 * A {@link Condition} that offers more fine-grained control when used with
 * {@code @Configuration}. Allows certain {@link Condition Conditions} to adapt when they match
 * based on the configuration phase. For example, a condition that checks if a bean
 * has already been registered might choose to only be evaluated during the
 * {@link ConfigurationPhase#REGISTER_BEAN REGISTER_BEAN} {@link ConfigurationPhase}.
 *
 * @author Phillip Webb
 * @since 4.0
 * @see Configuration
 */
/**
 * 与{@code  @Configuration}一起使用时，{<@link>条件}可以提供更精细的控制。 
 * 允许某些{@link 条件条件}在基于配置阶段匹配时进行调整。 
 * 例如，检查Bean是否已经注册的条件可能选择仅在{@link  ConfigurationPhase＃REGISTER_BEAN REGISTER_BEAN} {@link  ConfigurationPhase}期间进行评估。 
 *  @author  Phillip Webb @始于4.0 
 * @see 配置
 */
public interface ConfigurationCondition extends Condition {

	/**
	 * Return the {@link ConfigurationPhase} in which the condition should be evaluated.
	 */
	/**
	 * 返回{@link  ConfigurationPhase}，应在其中评估条件。 
	 * 
	 */
	ConfigurationPhase getConfigurationPhase();


	/**
	 * The various configuration phases where the condition could be evaluated.
	 */
	/**
	 * 可以评估条件的各种配置阶段。 
	 * 
	 */
	enum ConfigurationPhase {

		/**
		 * The {@link Condition} should be evaluated as a {@code @Configuration}
		 * class is being parsed.
		 * <p>If the condition does not match at this point, the {@code @Configuration}
		 * class will not be added.
		 */
		/**
		 * 应在解析{@code  @Configuration}类时评估{@link 条件}。 
		 *  <p>如果此时条件不匹配，将不会添加{@code  @Configuration}类。 
		 * 
		 */
		PARSE_CONFIGURATION,

		/**
		 * The {@link Condition} should be evaluated when adding a regular
		 * (non {@code @Configuration}) bean. The condition will not prevent
		 * {@code @Configuration} classes from being added.
		 * <p>At the time that the condition is evaluated, all {@code @Configuration}s
		 * will have been parsed.
		 */
		/**
		 * 添加常规（非{@code  @Configuration}）bean时，应评估{@link 条件}。 
		 * 该条件不会阻止添加{@code  @Configuration}类。 
		 *  <p>在评估条件时，将已解析所有{@code  @Configuration}。 
		 * 
		 */
		REGISTER_BEAN
	}

}
