/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2012 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2012的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.context.annotation;

import org.springframework.instrument.classloading.LoadTimeWeaver;

/**
 * Interface to be implemented by
 * {@link org.springframework.context.annotation.Configuration @Configuration}
 * classes annotated with {@link EnableLoadTimeWeaving @EnableLoadTimeWeaving} that wish to
 * customize the {@link LoadTimeWeaver} instance to be used.
 *
 * <p>See {@link org.springframework.scheduling.annotation.EnableAsync @EnableAsync}
 * for usage examples and information on how a default {@code LoadTimeWeaver}
 * is selected when this interface is not used.
 *
 * @author Chris Beams
 * @since 3.1
 * @see LoadTimeWeavingConfiguration
 * @see EnableLoadTimeWeaving
 */
/**
 * 由{@link  org.springframework.context.annotation.Configuration @Configuration}类实现的接口，该类带有{@link  EnableLoadTimeWeaving @EnableLoadTimeWeaving}注释，这些类希望自定义要使用的{@link  LoadTimeWeaver}实例。 
 *  <p>请参阅{@link  org.springframework.scheduling.annotation.EnableAsync @EnableAsync}，以获取用法示例和有关在不使用此接口时如何选择默认{@code  LoadTimeWeaver}的信息。 
 *  @author 克里斯·比姆斯（Chris Beams）自3.1起
 * @see  LoadTimeWeavingConfiguration 
 * @see  EnableLoadTimeWeaving
 */
public interface LoadTimeWeavingConfigurer {

	/**
	 * Create, configure and return the {@code LoadTimeWeaver} instance to be used. Note
	 * that it is unnecessary to annotate this method with {@code @Bean}, because the
	 * object returned will automatically be registered as a bean by
	 * {@link LoadTimeWeavingConfiguration#loadTimeWeaver()}
	 */
	/**
	 * 创建，配置并返回要使用的{@code  LoadTimeWeaver}实例。 
	 * 请注意，不必使用{@code  @Bean}注释此方法，因为返回的对象将由{@link  LoadTimeWeavingConfiguration＃loadTimeWeaver（）}自动注册为Bean。 
	 * 
	 */
	LoadTimeWeaver getLoadTimeWeaver();

}
