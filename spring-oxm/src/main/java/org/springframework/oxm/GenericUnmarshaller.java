/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2012 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2012的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.oxm;

import java.lang.reflect.Type;

/**
 * Subinterface of {@link Unmarshaller} that has support for Java 5 generics.
 *
 * @author Arjen Poutsma
 * @since 3.0.1
 */
/**
 * {@link  Unmarshaller}的子接口具有对Java 5泛型的支持。 
 *  @author  Arjen Poutsma @从3.0.1开始
 */
public interface GenericUnmarshaller extends Unmarshaller {

	/**
	 * Indicates whether this marshaller can marshal instances of the supplied generic type.
	 * @param genericType the type that this marshaller is being asked if it can marshal
	 * @return {@code true} if this marshaller can indeed marshal instances of the supplied type;
	 * {@code false} otherwise
	 */
	/**
	 * 指示此封送人员是否可以封送提供的泛型类型的实例。 
	 *  
	 * @param  genericType：询问此编组是否可以编组的类型
	 * @return  {@code  true}如果此编组确实可以编组所提供类型的实例； 
	 *  {@code  false}否则
	 */
	boolean supports(Type genericType);

}
