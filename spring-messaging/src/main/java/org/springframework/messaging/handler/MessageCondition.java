/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2015 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2015的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.messaging.handler;

import org.springframework.lang.Nullable;
import org.springframework.messaging.Message;

/**
 * Contract for mapping conditions to messages.
 *
 * <p>Message conditions can be combined (e.g. type + method-level conditions),
 * matched to a specific Message, as well as compared to each other in the
 * context of a Message to determine which one matches a request more closely.
 *
 * @author Rossen Stoyanchev
 * @since 4.0
 * @param <T> the kind of condition that this condition can be combined with or compared to
 */
/**
 * 将条件映射到消息的合同。 
 *  <p>可以组合消息条件（例如，类型+方法级别的条件），与特定消息匹配，以及在消息的上下文中相互比较以确定哪个消息与请求更紧密匹配。 
 *  @author  Rossen Stoyanchev @从4.0开始
 * @param  <T>这种条件可以与之组合或比较的条件
 */
public interface MessageCondition<T> {

	/**
	 * Define the rules for combining this condition with another.
	 * For example combining type- and method-level conditions.
	 * @param other the condition to combine with
	 * @return the resulting message condition
	 */
	/**
	 * 定义用于将此条件与另一个条件组合的规则。 
	 * 例如，组合类型和方法级别的条件。 
	 *  
	 * @param 其他条件与
	 * @return 组合后的消息条件
	 */
	T combine(T other);

	/**
	 * Check if this condition matches the given Message and returns a
	 * potentially new condition with content tailored to the current message.
	 * For example a condition with destination patterns might return a new
	 * condition with sorted, matching patterns only.
	 * @return a condition instance in case of a match; or {@code null} if there is no match.
	 */
	/**
	 * 检查此条件是否与给定的消息匹配，并返回潜在的新条件，其内容适合于当前消息。 
	 * 例如，具有目标模式的条件可能会返回仅具有排序，匹配模式的新条件。 
	 *  
	 * @return 匹配时的条件实例； 
	 * 或{@code  null}（如果不匹配）。 
	 * 
	 */
	@Nullable
	T getMatchingCondition(Message<?> message);

	/**
	 * Compare this condition to another in the context of a specific message.
	 * It is assumed both instances have been obtained via
	 * {@link #getMatchingCondition(Message)} to ensure they have content
	 * relevant to current message only.
	 */
	/**
	 * 在特定消息的上下文中将此条件与另一个条件进行比较。 
	 * 假定这两个实例都是通过{@link  #getMatchingCondition（Message）}获得的，以确保它们都具有仅与当前消息相关的内容。 
	 * 
	 */
	int compareTo(T other, Message<?> message);

}
