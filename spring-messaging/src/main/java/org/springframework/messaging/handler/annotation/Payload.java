/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2015 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2015的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.messaging.handler.annotation;

import java.lang.annotation.Documented;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

import org.springframework.core.annotation.AliasFor;
import org.springframework.messaging.converter.MessageConverter;

/**
 * Annotation that binds a method parameter to the payload of a message. Can also
 * be used to associate a payload to a method invocation. The payload may be passed
 * through a {@link MessageConverter} to convert it from serialized form with a
 * specific MIME type to an Object matching the target method parameter.
 *
 * @author Rossen Stoyanchev
 * @author Sam Brannen
 * @since 4.0
 */
/**
 * 将方法参数绑定到消息的有效负载的注释。 
 * 也可以用于将有效负载与方法调用相关联。 
 * 有效负载可以通过{@link  MessageConverter}传递，以将其从具有特定MIME类型的序列化形式转换为与目标方法参数匹配的Object。 
 *  @author  Rossen Stoyanchev @author 山姆·布兰嫩@4.0
 */
@Target({ElementType.PARAMETER, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Documented
public @interface Payload {

	/**
	 * Alias for {@link #expression}.
	 */
	/**
	 * {@link  #expression}的别名。 
	 * 
	 */
	@AliasFor("expression")
	String value() default "";

	/**
	 * A SpEL expression to be evaluated against the payload object as the root context.
	 * <p>This attribute may or may not be supported depending on whether the message being
	 * handled contains a non-primitive Object as its payload or is in serialized form and
	 * requires message conversion.
	 * <p>When processing STOMP over WebSocket messages this attribute is not supported.
	 * @since 4.2
	 */
	/**
	 * 要针对有效负载对象作为根上下文评估的SpEL表达式。 
	 *  <p>是否支持此属性，具体取决于所处理的消息是否包含非原始对象作为其有效负载，或者是否为序列化形式并且需要消息转换。 
	 *  <p>在通过WebSocket消息处理STOMP时，不支持此属性。 
	 *  @4.2起
	 */
	@AliasFor("value")
	String expression() default "";

	/**
	 * Whether payload content is required.
	 * <p>Default is {@code true}, leading to an exception if there is no payload. Switch
	 * to {@code false} to have {@code null} passed when there is no payload.
	 */
	/**
	 * 是否需要有效载荷内容。 
	 *  <p>默认值为{@code  true}，如果没有有效负载，则会导致异常。 
	 * 没有有效负载时，切换到{@code  false}以传递{@code  null}。 
	 * 
	 */
	boolean required() default true;

}
