/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2017的原始作者或作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.messaging.handler.invocation.reactive;

import reactor.core.publisher.Mono;

import org.springframework.core.MethodParameter;
import org.springframework.lang.Nullable;
import org.springframework.messaging.Message;

/**
 * Handle the return value from the invocation of an annotated {@link Message}
 * handling method.
 *
 * @author Rossen Stoyanchev
 * @since 5.2
 */
/**
 * 处理从带注释的{@link  Message}处理方法的调用返回的值。 
 *  @author  Rossen Stoyanchev @从5.2开始
 */
public interface HandlerMethodReturnValueHandler {

	/** Header containing a DataBufferFactory for use in return value handling. */
	/**
	 * 包含DataBufferFactory的标头，用于返回值处理。 
	 * 
	 */
	String DATA_BUFFER_FACTORY_HEADER = "dataBufferFactory";


	/**
	 * Whether the given {@linkplain MethodParameter method return type} is
	 * supported by this handler.
	 * @param returnType the method return type to check
	 * @return {@code true} if this handler supports the supplied return type;
	 * {@code false} otherwise
	 */
	/**
	 * 此处理程序是否支持给定的{@link  plain MethodParameter方法返回类型}。 
	 *  
	 * @param  returnType方法的返回类型以检查
	 * @return  {@code  true}，如果此处理程序支持所提供的返回类型； 
	 *  {@code  false}否则
	 */
	boolean supportsReturnType(MethodParameter returnType);

	/**
	 * Handle the given return value.
	 * @param returnValue the value returned from the handler method
	 * @param returnType the type of the return value. This type must have previously
	 * been passed to {@link #supportsReturnType(MethodParameter)}
	 * and it must have returned {@code true}.
	 * @return {@code Mono<Void>} to indicate when handling is complete.
	 */
	/**
	 * 处理给定的返回值。 
	 *  
	 * @param  returnValue从处理程序方法返回的值
	 * @param  returnType返回值的类型。 
	 * 此类型必须先前已传递给{@link  #supportsReturnType（MethodParameter）}，并且它必须已返回{@code  true}。 
	 *  
	 * @return  {@code  Mono <Void>}指示何时完成处理。 
	 * 
	 */
	Mono<Void> handleReturnValue(@Nullable Object returnValue, MethodParameter returnType, Message<?> message);

}
