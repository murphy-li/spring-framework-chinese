/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2016 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2016的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.messaging.simp.user;

import java.util.Set;

import org.springframework.lang.Nullable;

/**
 * A registry of currently connected users.
 *
 * @author Rossen Stoyanchev
 * @since 4.2
 */
/**
 * 当前连接的用户的注册表。 
 *  @author  Rossen Stoyanchev @从4.2开始
 */
public interface SimpUserRegistry {

	/**
	 * Get the user for the given name.
	 * @param userName the name of the user to look up
	 * @return the user, or {@code null} if not connected
	 */
	/**
	 * 获取给定名称的用户。 
	 *  
	 * @param  userName要查找的用户名
	 * @return 用户，如果未连接，则为{@code  null}
	 */
	@Nullable
	SimpUser getUser(String userName);

	/**
	 * Return a snapshot of all connected users.
	 * <p>The returned set is a copy and will not reflect further changes.
	 * @return the connected users, or an empty set if none
	 */
	/**
	 * 返回所有已连接用户的快照。 
	 *  <p>返回的集合是副本，不会反映进一步的更改。 
	 *  
	 * @return 所连接的用户，如果没有，则为空
	 */
	Set<SimpUser> getUsers();

	/**
	 * Return the count of all connected users.
	 * @return the number of connected users
	 * @since 4.3.5
	 */
	/**
	 * 返回所有已连接用户的计数。 
	 *  
	 * @return 自4.3.5起的已连接用户数
	 */
	int getUserCount();

	/**
	 * Find subscriptions with the given matcher.
	 * @param matcher the matcher to use
	 * @return a set of matching subscriptions, or an empty set if none
	 */
	/**
	 * 查找具有给定匹配器的订阅。 
	 *  
	 * @param 匹配器匹配器使用
	 * @return 一组匹配的订阅； 
	 * 如果没有，则为空
	 */
	Set<SimpSubscription> findSubscriptions(SimpSubscriptionMatcher matcher);

}
