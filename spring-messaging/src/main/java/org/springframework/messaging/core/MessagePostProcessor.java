/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2013 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2013的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.messaging.core;

import org.springframework.messaging.Message;

/**
 * A contract for processing a {@link Message} after it has been created, either
 * returning a modified (effectively new) message or returning the same.
 *
 * @author Mark Fisher
 * @author Rossen Stoyanchev
 * @since 4.0
 * @see MessageSendingOperations
 * @see MessageRequestReplyOperations
 */
/**
 * 创建{@link 消息}后处理合同，它返回修改后的（实际上是新的）消息，或者返回相同的消息。 
 *  @author  Mark Fisher @author  Rossen Stoyanchev @从4.0开始
 * @see  MessageSendingOperations 
 * @see  MessageRequestReplyOperations
 */
public interface MessagePostProcessor {

	/**
	 * Process the given message.
	 * @param message the message to process
	 * @return a post-processed variant of the message,
	 * or simply the incoming message; never {@code null}
	 */
	/**
	 * 处理给定的消息。 
	 *  
	 * @param 消息要处理的消息
	 * @return 消息的后处理变体，或者只是传入的消息； 
	 * 从不{@code  null}
	 */
	Message<?> postProcessMessage(Message<?> message);

}
