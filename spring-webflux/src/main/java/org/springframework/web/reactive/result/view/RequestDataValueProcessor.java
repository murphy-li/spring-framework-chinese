/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2016 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2016的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */
package org.springframework.web.reactive.result.view;

import java.util.Map;

import org.springframework.lang.Nullable;
import org.springframework.web.server.ServerWebExchange;

/**
 * A contract for inspecting and potentially modifying request data values such
 * as URL query parameters or form field values before they are rendered by a
 * view or before a redirect.
 *
 * <p>Implementations may use this contract for example as part of a solution
 * to provide data integrity, confidentiality, protection against cross-site
 * request forgery (CSRF), and others or for other tasks such as automatically
 * adding a hidden field to all forms and URLs.
 *
 * <p>View technologies that support this contract can obtain an instance to
 * delegate to via {@link RequestContext#getRequestDataValueProcessor()}.
 *
 * @author Rossen Stoyanchev
 * @since 5.0
 */
/**
 * 用于在视图呈现或重定向之前检查和可能修改请求数据值（例如URL查询参数或表单字段值）的合同。 
 *  <p>实施可以使用此合同作为解决方案的一部分，例如，以提供数据完整性，机密性，防止跨站点请求伪造（CSRF）等保护或其他任务，例如为所有表单和表单自动添加隐藏字段。 
 * 网址。 
 *  <p>支持该合同的View技术可以通过{@link  RequestContext＃getRequestDataValueProcessor（）}获取要委派的实例。 
 *  @author  Rossen Stoyanchev @从5.0开始
 */
public interface RequestDataValueProcessor {

	/**
	 * Invoked when a new form action is rendered.
	 * @param exchange the current exchange
	 * @param action the form action
	 * @param httpMethod the form HTTP method
	 * @return the action to use, possibly modified
	 */
	/**
	 * 呈现新的表单动作时调用。 
	 *  
	 * @param 交换当前交换
	 * @param 动作形式动作
	 * @param  httpMethod形式HTTP方法
	 * @return 要使用的动作，可能已修改
	 */
	String processAction(ServerWebExchange exchange, String action, String httpMethod);

	/**
	 * Invoked when a form field value is rendered.
	 * @param exchange the current exchange
	 * @param name the form field name
	 * @param value the form field value
	 * @param type the form field type ("text", "hidden", etc.)
	 * @return the form field value to use, possibly modified
	 */
	/**
	 * 呈现表单字段值时调用。 
	 *  
	 * @param 交换当前交换
	 * @param 命名表单字段名称
	 * @param 值表单字段值
	 * @param 输入表单字段类型（"文本"，"隐藏"等）<
	 * @return >要使用的表单字段值，可能已修改
	 */
	String processFormFieldValue(ServerWebExchange exchange, String name, String value, String type);

	/**
	 * Invoked after all form fields have been rendered.
	 * @param exchange the current exchange
	 * @return additional hidden form fields to be added, or {@code null}
	 */
	/**
	 * 呈现所有表单字段后调用。 
	 *  
	 * @param 交换当前交换
	 * @return 要添加的其他隐藏表单字段，或者{@code  null}
	 */
	@Nullable
	Map<String, String> getExtraHiddenFields(ServerWebExchange exchange);

	/**
	 * Invoked when a URL is about to be rendered or redirected to.
	 * @param exchange the current exchange
	 * @param url the URL value
	 * @return the URL to use, possibly modified
	 */
	/**
	 * 在URL将要呈现或重定向到时调用。 
	 *  
	 * @param 交换当前交换
	 * @param  url URL值
	 * @return 要使用的URL，可能已修改
	 */
	String processUrl(ServerWebExchange exchange, String url);

}
