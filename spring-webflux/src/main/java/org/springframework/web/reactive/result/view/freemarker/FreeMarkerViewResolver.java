/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2017的原始作者或作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.web.reactive.result.view.freemarker;

import org.springframework.web.reactive.result.view.UrlBasedViewResolver;

/**
 * A {@code ViewResolver} for resolving {@link FreeMarkerView} instances, i.e.
 * FreeMarker templates and custom subclasses of it.
 *
 * <p>The view class for all views generated by this resolver can be specified
 * via the "viewClass" property. See {@link UrlBasedViewResolver} for details.
 *
 * @author Rossen Stoyanchev
 * @since 5.0
 */
/**
 * 一个{@code  ViewResolver}，用于解析{@link  FreeMarkerView}实例，即FreeMarker模板及其自定义子类。 
 *  <p>可以通过"viewClass"属性指定此解析器生成的所有视图的视图类。 
 * 有关详细信息，请参见{@link  UrlBasedViewResolver}。 
 *  @author  Rossen Stoyanchev @从5.0开始
 */
public class FreeMarkerViewResolver extends UrlBasedViewResolver {

	/**
	 * Simple constructor.
	 */
	/**
	 * 简单的构造函数。 
	 * 
	 */
	public FreeMarkerViewResolver() {
		setViewClass(requiredViewClass());
	}

	/**
	 * Convenience constructor with a prefix and suffix.
	 * @param suffix the suffix to prepend view names with
	 * @param prefix the prefix to prepend view names with
	 */
	/**
	 * 带有前缀和后缀的便捷构造函数。 
	 *  
	 * @param 后缀为后缀以
	 * @param 作为前缀，前缀为前缀后以视图名称为前缀
	 */
	public FreeMarkerViewResolver(String prefix, String suffix) {
		setViewClass(requiredViewClass());
		setPrefix(prefix);
		setSuffix(suffix);
	}


	/**
	 * Requires {@link FreeMarkerView}.
	 */
	/**
	 * 需要{@link  FreeMarkerView}。 
	 * 
	 */
	@Override
	protected Class<?> requiredViewClass() {
		return FreeMarkerView.class;
	}

}
