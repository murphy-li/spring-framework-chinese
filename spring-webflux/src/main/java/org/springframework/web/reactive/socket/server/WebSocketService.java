/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2018的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.web.reactive.socket.server;

import reactor.core.publisher.Mono;

import org.springframework.web.reactive.socket.WebSocketHandler;
import org.springframework.web.server.ServerWebExchange;

/**
 * A service to delegate WebSocket-related HTTP requests to.
 *
 * <p>For a WebSocket endpoint this means handling the initial WebSocket HTTP
 * handshake request. For a SockJS endpoint it could mean handling all HTTP
 * requests defined in the SockJS protocol.
 *
 * @author Rossen Stoyanchev
 * @since 5.0
 * @see org.springframework.web.reactive.socket.server.support.HandshakeWebSocketService
 */
/**
 * 将与WebSocket相关的HTTP请求委托给的服务。 
 *  <p>对于WebSocket终结点，这意味着处理初始WebSocket HTTP握手请求。 
 * 对于SockJS端点，这可能意味着处理SockJS协议中定义的所有HTTP请求。 
 *  @author  Rossen Stoyanchev @从5.0开始
 * @see  org.springframework.web.reactive.socket.server.support.HandshakeWebSocketService
 */
public interface WebSocketService {

	/**
	 * Handle the request with the given {@link WebSocketHandler}.
	 * @param exchange the current exchange
	 * @param webSocketHandler handler for WebSocket session
	 * @return a {@code Mono<Void>} that completes when application handling of
	 * the WebSocket session completes.
	 */
	/**
	 * 使用给定的{@link  WebSocketHandler}处理请求。 
	 *  
	 * @param 将当前的交换
	 * @param  webSocketHandler处理程序交换为WebSocket会话
	 * @return 一个{@code  Mono <Void>}，当对WebSocket会话的应用程序处理完成时，此{@code  Mono <Void>}也会完成。 
	 * 
	 */
	Mono<Void> handleRequest(ServerWebExchange exchange, WebSocketHandler webSocketHandler);

}
