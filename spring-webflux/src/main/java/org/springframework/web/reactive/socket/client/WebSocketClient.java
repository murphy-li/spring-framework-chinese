/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2016 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2016的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */
package org.springframework.web.reactive.socket.client;

import java.net.URI;

import reactor.core.publisher.Mono;

import org.springframework.http.HttpHeaders;
import org.springframework.web.reactive.socket.WebSocketHandler;

/**
 * Contract for reactive-style handling of a WebSocket session.
 *
 * @author Rossen Stoyanchev
 * @since 5.0
 */
/**
 * WebSocket会话的反应式处理的合同。 
 *  @author  Rossen Stoyanchev @从5.0开始
 */
public interface WebSocketClient {

	/**
	 * Execute a handshake request to the given url and handle the resulting
	 * WebSocket session with the given handler.
	 * @param url the handshake url
	 * @param handler the handler of the WebSocket session
	 * @return completion {@code Mono<Void>} to indicate the outcome of the
	 * WebSocket session handling.
	 */
	/**
	 * 对给定的URL执行握手请求，并使用给定的处理程序处理所产生的WebSocket会话。 
	 *  
	 * @param  url握手url 
	 * @param 处理程序WebSocket会话的处理程序
	 * @return 完成{@code  Mono <Void>}，以指示WebSocket会话处理的结果。 
	 * 
	 */
	Mono<Void> execute(URI url, WebSocketHandler handler);

	/**
	 * A variant of {@link #execute(URI, WebSocketHandler)} with custom headers.
	 * @param url the handshake url
	 * @param headers custom headers for the handshake request
	 * @param handler the handler of the WebSocket session
	 * @return completion {@code Mono<Void>} to indicate the outcome of the
	 * WebSocket session handling.
	 */
	/**
	 * 具有自定义标头的{@link  #execute（URI，WebSocketHandler）}的变体。 
	 *  
	 * @param  url握手url 
	 * @param 标头握手请求的自定义标头
	 * @param 处理程序WebSocket会话的处理程序
	 * @return 完成{@code  Mono <Void>}指示结果WebSocket会话处理。 
	 * 
	 */
	Mono<Void> execute(URI url, HttpHeaders headers, WebSocketHandler handler);

}
