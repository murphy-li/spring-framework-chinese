/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2012 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2012的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.aop.target.dynamic;

/**
 * Interface to be implemented by dynamic target objects,
 * which support reloading and optionally polling for updates.
 *
 * @author Rod Johnson
 * @author Rob Harrop
 * @since 2.0
 */
/**
 * 由动态目标对象实现的接口，该对象支持重新加载并有选择地轮询更新。 
 *  @author 罗德·约翰逊@author  Rob Harrop @since 2.0
 */
public interface Refreshable {

	/**
	 * Refresh the underlying target object.
	 */
	/**
	 * 刷新基础目标对象。 
	 * 
	 */
	void refresh();

	/**
	 * Return the number of actual refreshes since startup.
	 */
	/**
	 * 返回自启动以来的实际刷新次数。 
	 * 
	 */
	long getRefreshCount();

	/**
	 * Return the last time an actual refresh happened (as timestamp).
	 */
	/**
	 * 返回上一次实际刷新发生的时间（作为时间戳）。 
	 * 
	 */
	long getLastRefreshTime();

}
