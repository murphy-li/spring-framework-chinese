/** Generated by english-annotation-buster, Powered by Google Translate.**/
/**
 * AspectJ integration package. Includes Spring AOP advice implementations for AspectJ 5
 * annotation-style methods, and an AspectJExpressionPointcut: a Spring AOP Pointcut
 * implementation that allows use of the AspectJ pointcut expression language with the Spring AOP
 * runtime framework.
 *
 * <p>Note that use of this package does <i>not</i> require the use of the {@code ajc} compiler
 * or AspectJ load-time weaver. It is intended to enable the use of a valuable subset of AspectJ
 * functionality, with consistent semantics, with the proxy-based Spring AOP framework.
 */
/**
 * AspectJ集成软件包。 
 * 包括用于AspectJ 5注释样式方法的Spring AOP建议实现，以及AspectJExpressionPointcut：一种Spring AOP Pointcut实现，该实现允许将AspectJ Pointcut表达式语言与Spring AOP运行时框架一起使用。 
 *  <p>请注意，使用此包并不需要使用{@code  ajc}编译器或AspectJ加载时织布器。 
 * 它旨在使基于代理的Spring AOP框架能够以一致的语义使用AspectJ功能的宝贵子集。 
 * 
 */
@NonNullApi
@NonNullFields
package org.springframework.aop.aspectj;

import org.springframework.lang.NonNullApi;
import org.springframework.lang.NonNullFields;
