/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2019 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2019的原始作者或作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.http.client;

import org.springframework.http.client.support.HttpAccessor;

/**
 * Callback interface for initializing a {@link ClientHttpRequest} prior to it
 * being used.
 *
 * <p>Typically used with {@link HttpAccessor} and subclasses such as
 * {@link org.springframework.web.client.RestTemplate RestTemplate} to apply
 * consistent settings or headers to each request.
 *
 * <p>Unlike {@link ClientHttpRequestInterceptor}, this interface can apply
 * customizations without needing to read the entire request body into memory.
 *
 * @author Phillip Webb
 * @since 5.2
 * @see HttpAccessor#getClientHttpRequestInitializers()
 */
/**
 * 回调接口，用于在使用{@link  ClientHttpRequest}之前对其进行初始化。 
 *  <p>通常与{@link  HttpAccessor}和子类（例如{@link  org.springframework.web.client.RestTemplate RestTemplate}）一起使用，以将一致的设置或标头应用于每个请求。 
 *  <p>与{@link  ClientHttpRequestInterceptor}不同，此接口可以应用自定义，而无需将整个请求主体读入内存。 
 *  @author 菲利普·韦伯（Phillip Webb）自5.2起
 * @see  HttpAccessor＃getClientHttpRequestInitializers（）
 */
@FunctionalInterface
public interface ClientHttpRequestInitializer {

	/**
	 * Initialize the given client HTTP request.
	 * @param request the request to configure
	 */
	/**
	 * 初始化给定的客户端HTTP请求。 
	 *  
	 * @param 请求配置请求
	 */
	void initialize(ClientHttpRequest request);

}
