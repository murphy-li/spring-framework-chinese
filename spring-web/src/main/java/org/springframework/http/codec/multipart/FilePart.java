/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2018的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.http.codec.multipart;

import java.io.File;
import java.nio.file.Path;

import reactor.core.publisher.Mono;

/**
 * Specialization of {@link Part} that represents an uploaded file received in
 * a multipart request.
 *
 * @author Rossen Stoyanchev
 * @author Juergen Hoeller
 * @since 5.0
 */
/**
 * {@link 部分}的特殊化，表示在多部分请求中收到的上载文件。 
 *  @author  Rossen Stoyanchev @author 于尔根·霍勒（Juergen Hoeller）@从5.0开始
 */
public interface FilePart extends Part {

	/**
	 * Return the original filename in the client's filesystem.
	 */
	/**
	 * 返回客户端文件系统中的原始文件名。 
	 * 
	 */
	String filename();

	/**
	 * Convenience method to copy the content of the file in this part to the
	 * given destination file. If the destination file already exists, it will
	 * be truncated first.
	 * <p>The default implementation delegates to {@link #transferTo(Path)}.
	 * @param dest the target file
	 * @return completion {@code Mono} with the result of the file transfer,
	 * possibly {@link IllegalStateException} if the part isn't a file
	 * @see #transferTo(Path)
	 */
	/**
	 * 将这部分文件内容复制到给定目标文件的便捷方法。 
	 * 如果目标文件已经存在，它将首先被截断。 
	 *  <p>默认实现委托给{@link  #transferTo（Path）}。 
	 *  
	 * @param 将目标文件
	 * @return 完成{@code  Mono}与文件传输的结果一起存储，如果该部分不是文件，则可能是{@link  IllegalStateException}（
	 * @see  #transferTo （路径）
	 */
	default Mono<Void> transferTo(File dest) {
		return transferTo(dest.toPath());
	}

	/**
	 * Convenience method to copy the content of the file in this part to the
	 * given destination file. If the destination file already exists, it will
	 * be truncated first.
	 * @param dest the target file
	 * @return completion {@code Mono} with the result of the file transfer,
	 * possibly {@link IllegalStateException} if the part isn't a file
	 * @since 5.1
	 * @see #transferTo(File)
	 */
	/**
	 * 将这部分文件内容复制到给定目标文件的便捷方法。 
	 * 如果目标文件已经存在，它将首先被截断。 
	 *  
	 * @param 将目标文件
	 * @return 完成{@code  Mono}与文件传输的结果一起存储，如果该部分不是文件，则可能是{@link  IllegalStateException} {@5.1起> #transferTo（文件）
	 */
	Mono<Void> transferTo(Path dest);

}
