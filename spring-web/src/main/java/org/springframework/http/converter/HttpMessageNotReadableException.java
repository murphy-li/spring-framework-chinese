/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2018的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.http.converter;

import org.springframework.http.HttpInputMessage;
import org.springframework.lang.Nullable;
import org.springframework.util.Assert;

/**
 * Thrown by {@link HttpMessageConverter} implementations when the
 * {@link HttpMessageConverter#read} method fails.
 *
 * @author Arjen Poutsma
 * @author Juergen Hoeller
 * @since 3.0
 */
/**
 * 当{@link  HttpMessageConverter＃read}方法失败时，由{@link  HttpMessageConverter}实现抛出。 
 *  @author  Arjen Poutsma @author  Juergen Hoeller @从3.0开始
 */
@SuppressWarnings("serial")
public class HttpMessageNotReadableException extends HttpMessageConversionException {

	@Nullable
	private final HttpInputMessage httpInputMessage;


	/**
	 * Create a new HttpMessageNotReadableException.
	 * @param msg the detail message
	 * @deprecated as of 5.1, in favor of {@link #HttpMessageNotReadableException(String, HttpInputMessage)}
	 */
	/**
	 * 创建一个新的HttpMessageNotReadableException。 
	 *  
	 * @param  msg自5.1开始不推荐使用的详细消息，而推荐使用{@link  #HttpMessageNotReadableException（String，HttpInputMessage）}
	 */
	@Deprecated
	public HttpMessageNotReadableException(String msg) {
		super(msg);
		this.httpInputMessage = null;
	}

	/**
	 * Create a new HttpMessageNotReadableException.
	 * @param msg the detail message
	 * @param cause the root cause (if any)
	 * @deprecated as of 5.1, in favor of {@link #HttpMessageNotReadableException(String, Throwable, HttpInputMessage)}
	 */
	/**
	 * 创建一个新的HttpMessageNotReadableException。 
	 *  
	 * @param  msg详细消息
	 * @param 导致从5.1开始弃用的根本原因（如果有），而推荐使用{@link  #HttpMessageNotReadableException（String，Throwable，HttpInputMessage）}
	 */
	@Deprecated
	public HttpMessageNotReadableException(String msg, @Nullable Throwable cause) {
		super(msg, cause);
		this.httpInputMessage = null;
	}

	/**
	 * Create a new HttpMessageNotReadableException.
	 * @param msg the detail message
	 * @param httpInputMessage the original HTTP message
	 * @since 5.1
	 */
	/**
	 * 创建一个新的HttpMessageNotReadableException。 
	 *  
	 * @param  msg详细消息
	 * @param  httpInputMessage原始HTTP消息@始于5.1
	 */
	public HttpMessageNotReadableException(String msg, HttpInputMessage httpInputMessage) {
		super(msg);
		this.httpInputMessage = httpInputMessage;
	}

	/**
	 * Create a new HttpMessageNotReadableException.
	 * @param msg the detail message
	 * @param cause the root cause (if any)
	 * @param httpInputMessage the original HTTP message
	 * @since 5.1
	 */
	/**
	 * 创建一个新的HttpMessageNotReadableException。 
	 *  
	 * @param  msg详细消息
	 * @param 引起根本原因（如果有）
	 * @param  httpInputMessage原始HTTP消息@始于5.1
	 */
	public HttpMessageNotReadableException(String msg, @Nullable Throwable cause, HttpInputMessage httpInputMessage) {
		super(msg, cause);
		this.httpInputMessage = httpInputMessage;
	}


	/**
	 * Return the original HTTP message.
	 * @since 5.1
	 */
	/**
	 * 返回原始HTTP消息。 
	 *  @5.1起
	 */
	public HttpInputMessage getHttpInputMessage() {
		Assert.state(this.httpInputMessage != null, "No HttpInputMessage available - use non-deprecated constructors");
		return this.httpInputMessage;
	}

}
