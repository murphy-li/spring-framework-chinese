/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2016 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2016的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.web.context.annotation;

import java.lang.annotation.Documented;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

import org.springframework.context.annotation.Scope;
import org.springframework.context.annotation.ScopedProxyMode;
import org.springframework.core.annotation.AliasFor;
import org.springframework.web.context.WebApplicationContext;

/**
 * {@code @ApplicationScope} is a specialization of {@link Scope @Scope} for a
 * component whose lifecycle is bound to the current web application.
 *
 * <p>Specifically, {@code @ApplicationScope} is a <em>composed annotation</em> that
 * acts as a shortcut for {@code @Scope("application")} with the default
 * {@link #proxyMode} set to {@link ScopedProxyMode#TARGET_CLASS TARGET_CLASS}.
 *
 * <p>{@code @ApplicationScope} may be used as a meta-annotation to create custom
 * composed annotations.
 *
 * @author Sam Brannen
 * @since 4.3
 * @see RequestScope
 * @see SessionScope
 * @see org.springframework.context.annotation.Scope
 * @see org.springframework.web.context.WebApplicationContext#SCOPE_APPLICATION
 * @see org.springframework.web.context.support.ServletContextScope
 * @see org.springframework.stereotype.Component
 * @see org.springframework.context.annotation.Bean
 */
/**
 * {@code  @ApplicationScope}是{@link  Scope @Scope}的特化，用于其生命周期绑定到当前Web应用程序的组件。 
 *  <p>具体来说，{<@code> @ApplicationScope}是由<em>组成的注释</ em>，它用作{@code  @Scope（"application"）}}的快捷方式，默认为{<@link > #proxyMode}设置为{@link  ScopedProxyMode＃TARGET_CLASS TARGET_CLASS}。 
 *  <p> {<@@code> @ApplicationScope}可用作创建自定义组成的注解的元注解。 
 *  @author  Sam Brannen @since 4.3起@
 * @see> RequestScope 
 * @see  SessionScope 
 * @see  org.springframework.context.annotation.Scope 
 * @see  org.springframework.web.context.WebApplicationContext＃SCOPE_APPLICATION <
 * @see > org.springframework.web.context.support.ServletContextScope 
 * @see  org.springframework.stereotype.Component 
 * @see  org.springframework.context.annotation.Bean
 */
@Target({ElementType.TYPE, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Documented
@Scope(WebApplicationContext.SCOPE_APPLICATION)
public @interface ApplicationScope {

	/**
	 * Alias for {@link Scope#proxyMode}.
	 * <p>Defaults to {@link ScopedProxyMode#TARGET_CLASS}.
	 */
	/**
	 * {@link  Scope＃proxyMode}的别名。 
	 *  <p>默认为{@link  ScopedProxyMode＃TARGET_CLASS}。 
	 * 
	 */
	@AliasFor(annotation = Scope.class)
	ScopedProxyMode proxyMode() default ScopedProxyMode.TARGET_CLASS;

}
