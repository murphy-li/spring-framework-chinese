/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2018的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.web.filter;

import java.io.IOException;

import javax.servlet.FilterChain;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.lang.Nullable;
import org.springframework.util.Assert;

/**
 * Servlet Filter that allows one to specify a character encoding for requests.
 * This is useful because current browsers typically do not set a character
 * encoding even if specified in the HTML page or form.
 *
 * <p>This filter can either apply its encoding if the request does not already
 * specify an encoding, or enforce this filter's encoding in any case
 * ("forceEncoding"="true"). In the latter case, the encoding will also be
 * applied as default response encoding (although this will usually be overridden
 * by a full content type set in the view).
 *
 * @author Juergen Hoeller
 * @since 15.03.2004
 * @see #setEncoding
 * @see #setForceEncoding
 * @see javax.servlet.http.HttpServletRequest#setCharacterEncoding
 * @see javax.servlet.http.HttpServletResponse#setCharacterEncoding
 */
/**
 * Servlet过滤器，它允许为请求指定字符编码。 
 * 这很有用，因为即使在HTML页面或表单中指定了当前的浏览器，通常也不会设置字符编码。 
 *  <p>如果请求尚未指定编码，则此过滤器可以应用其编码，或者在任何情况下都强制执行此过滤器的编码（"forceEncoding"="true"）。 
 * 在后一种情况下，该编码也将用作默认响应编码（尽管通常会被视图中设置的完整内容类型覆盖）。 
 *  @author 于尔根·霍勒（Juergen Hoeller）@2004年3月15日起
 */
public class CharacterEncodingFilter extends OncePerRequestFilter {

	@Nullable
	private String encoding;

	private boolean forceRequestEncoding = false;

	private boolean forceResponseEncoding = false;


	/**
	 * Create a default {@code CharacterEncodingFilter},
	 * with the encoding to be set via {@link #setEncoding}.
	 * @see #setEncoding
	 */
	/**
	 * 创建默认的{@code  CharacterEncodingFilter}，并通过{@link  #setEncoding}设置编码。 
	 *  
	 * @see  #setEncoding
	 */
	public CharacterEncodingFilter() {
	}

	/**
	 * Create a {@code CharacterEncodingFilter} for the given encoding.
	 * @param encoding the encoding to apply
	 * @since 4.2.3
	 * @see #setEncoding
	 */
	/**
	 * 为给定的编码创建一个{@code  CharacterEncodingFilter}。 
	 *  
	 * @param 编码要应用的编码@since 4.2.3起
	 * @see  #setEncoding
	 */
	public CharacterEncodingFilter(String encoding) {
		this(encoding, false);
	}

	/**
	 * Create a {@code CharacterEncodingFilter} for the given encoding.
	 * @param encoding the encoding to apply
	 * @param forceEncoding whether the specified encoding is supposed to
	 * override existing request and response encodings
	 * @since 4.2.3
	 * @see #setEncoding
	 * @see #setForceEncoding
	 */
	/**
	 * 为给定的编码创建一个{@code  CharacterEncodingFilter}。 
	 *  
	 * @param 编码要应用的编码
	 * @param  forceEncoding指定的编码是否应该覆盖现有的请求和响应编码，自4.2.3起
	 * @see  #setEncoding 
	 * @see  #setForceEncoding
	 */
	public CharacterEncodingFilter(String encoding, boolean forceEncoding) {
		this(encoding, forceEncoding, forceEncoding);
	}

	/**
	 * Create a {@code CharacterEncodingFilter} for the given encoding.
	 * @param encoding the encoding to apply
	 * @param forceRequestEncoding whether the specified encoding is supposed to
	 * override existing request encodings
	 * @param forceResponseEncoding whether the specified encoding is supposed to
	 * override existing response encodings
	 * @since 4.3
	 * @see #setEncoding
	 * @see #setForceRequestEncoding(boolean)
	 * @see #setForceResponseEncoding(boolean)
	 */
	/**
	 * 为给定的编码创建一个{@code  CharacterEncodingFilter}。 
	 *  
	 * @param 编码要应用的编码
	 * @param  forceRequestEncoding指定的编码是否应该覆盖现有的请求编码
	 * @param  forceResponseEncoding指定的编码是否应该覆盖现有的响应编码（自4.3开始）
	 * @see  #setEncoding 
	 * @see  #setForceRequestEncoding（布尔值）
	 * @see  #setForceResponseEncoding（布尔值）
	 */
	public CharacterEncodingFilter(String encoding, boolean forceRequestEncoding, boolean forceResponseEncoding) {
		Assert.hasLength(encoding, "Encoding must not be empty");
		this.encoding = encoding;
		this.forceRequestEncoding = forceRequestEncoding;
		this.forceResponseEncoding = forceResponseEncoding;
	}


	/**
	 * Set the encoding to use for requests. This encoding will be passed into a
	 * {@link javax.servlet.http.HttpServletRequest#setCharacterEncoding} call.
	 * <p>Whether this encoding will override existing request encodings
	 * (and whether it will be applied as default response encoding as well)
	 * depends on the {@link #setForceEncoding "forceEncoding"} flag.
	 */
	/**
	 * 设置用于请求的编码。 
	 * 该编码将传递到{@link  javax.servlet.http.HttpServletRequest＃setCharacterEncoding}调用中。 
	 *  <p>此编码是否将覆盖现有的请求编码（以及是否也将其用作默认响应编码）取决于{@link  #setForceEncoding"forceEncoding"}标志。 
	 * 
	 */
	public void setEncoding(@Nullable String encoding) {
		this.encoding = encoding;
	}

	/**
	 * Return the configured encoding for requests and/or responses.
	 * @since 4.3
	 */
	/**
	 * 返回为请求和/或响应配置的编码。 
	 *  @4.3起
	 */
	@Nullable
	public String getEncoding() {
		return this.encoding;
	}

	/**
	 * Set whether the configured {@link #setEncoding encoding} of this filter
	 * is supposed to override existing request and response encodings.
	 * <p>Default is "false", i.e. do not modify the encoding if
	 * {@link javax.servlet.http.HttpServletRequest#getCharacterEncoding()}
	 * returns a non-null value. Switch this to "true" to enforce the specified
	 * encoding in any case, applying it as default response encoding as well.
	 * <p>This is the equivalent to setting both {@link #setForceRequestEncoding(boolean)}
	 * and {@link #setForceResponseEncoding(boolean)}.
	 * @see #setForceRequestEncoding(boolean)
	 * @see #setForceResponseEncoding(boolean)
	 */
	/**
	 * 设置是否应该配置此过滤器的{@link  #setEncoding encoding}覆盖现有的请求和响应编码。 
	 *  <p>默认值为"false"，即，如果{@link  javax.servlet.http.HttpServletRequest＃getCharacterEncoding（）}返回非空值，则不要修改编码。 
	 * 将其切换为"true"以在任何情况下都执行指定的编码，并将其也用作默认响应编码。 
	 *  <p>这等效于同时设置{@link  #setForceRequestEncoding（boolean）}和{@link  #setForceResponseEncoding（boolean）}。 
	 *  
	 * @see  #setForceRequestEncoding（布尔值）
	 * @see  #setForceResponseEncoding（布尔值）
	 */
	public void setForceEncoding(boolean forceEncoding) {
		this.forceRequestEncoding = forceEncoding;
		this.forceResponseEncoding = forceEncoding;
	}

	/**
	 * Set whether the configured {@link #setEncoding encoding} of this filter
	 * is supposed to override existing request encodings.
	 * <p>Default is "false", i.e. do not modify the encoding if
	 * {@link javax.servlet.http.HttpServletRequest#getCharacterEncoding()}
	 * returns a non-null value. Switch this to "true" to enforce the specified
	 * encoding in any case.
	 * @since 4.3
	 */
	/**
	 * 设置是否应该配置此过滤器的{@link  #setEncoding encoding}覆盖现有的请求编码。 
	 *  <p>默认值为"false"，即，如果{@link  javax.servlet.http.HttpServletRequest＃getCharacterEncoding（）}返回非空值，则不要修改编码。 
	 * 在任何情况下，请将其切换为"true"以强制执行指定的编码。 
	 *  @4.3起
	 */
	public void setForceRequestEncoding(boolean forceRequestEncoding) {
		this.forceRequestEncoding = forceRequestEncoding;
	}

	/**
	 * Return whether the encoding should be forced on requests.
	 * @since 4.3
	 */
	/**
	 * 返回是否对请求强加编码。 
	 *  @4.3起
	 */
	public boolean isForceRequestEncoding() {
		return this.forceRequestEncoding;
	}

	/**
	 * Set whether the configured {@link #setEncoding encoding} of this filter
	 * is supposed to override existing response encodings.
	 * <p>Default is "false", i.e. do not modify the encoding.
	 * Switch this to "true" to enforce the specified encoding
	 * for responses in any case.
	 * @since 4.3
	 */
	/**
	 * 设置是否应该配置此过滤器的{@link  #setEncoding encoding}覆盖现有的响应编码。 
	 *  <p>默认为"false"，即不修改编码。 
	 * 在任何情况下，请将其切换为"true"以对响应强制执行指定的编码。 
	 *  @4.3起
	 */
	public void setForceResponseEncoding(boolean forceResponseEncoding) {
		this.forceResponseEncoding = forceResponseEncoding;
	}

	/**
	 * Return whether the encoding should be forced on responses.
	 * @since 4.3
	 */
	/**
	 * 返回是否应在响应中强制使用编码。 
	 *  @4.3起
	 */
	public boolean isForceResponseEncoding() {
		return this.forceResponseEncoding;
	}


	@Override
	protected void doFilterInternal(
			HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)
			throws ServletException, IOException {

		String encoding = getEncoding();
		if (encoding != null) {
			if (isForceRequestEncoding() || request.getCharacterEncoding() == null) {
				request.setCharacterEncoding(encoding);
			}
			if (isForceResponseEncoding()) {
				response.setCharacterEncoding(encoding);
			}
		}
		filterChain.doFilter(request, response);
	}

}
