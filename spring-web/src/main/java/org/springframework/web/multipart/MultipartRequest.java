/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2016 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2016的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.web.multipart;

import java.util.Iterator;
import java.util.List;
import java.util.Map;

import org.springframework.lang.Nullable;
import org.springframework.util.MultiValueMap;

/**
 * This interface defines the multipart request access operations that are exposed
 * for actual multipart requests. It is extended by {@link MultipartHttpServletRequest}.
 *
 * @author Juergen Hoeller
 * @author Arjen Poutsma
 * @since 2.5.2
 */
/**
 * 此接口定义为实际的多部分请求公开的多部分请求访问操作。 
 * 它由{@link  MultipartHttpServletRequest}扩展。 
 *  @author 于尔根·霍勒（Juergen Hoeller）@author  Arjen Poutsma @从2.5.2开始
 */
public interface MultipartRequest {

	/**
	 * Return an {@link java.util.Iterator} of String objects containing the
	 * parameter names of the multipart files contained in this request. These
	 * are the field names of the form (like with normal parameters), not the
	 * original file names.
	 * @return the names of the files
	 */
	/**
	 * 返回一个String对象的{@link  java.util.Iterator}，其中包含此请求中包含的多部分文件的参数名称。 
	 * 这些是表单的字段名称（与普通参数一样），而不是原始文件名。 
	 *  
	 * @return 文件名
	 */
	Iterator<String> getFileNames();

	/**
	 * Return the contents plus description of an uploaded file in this request,
	 * or {@code null} if it does not exist.
	 * @param name a String specifying the parameter name of the multipart file
	 * @return the uploaded content in the form of a {@link MultipartFile} object
	 */
	/**
	 * 返回此请求中上载文件的内容和描述，如果不存在，则返回{@code  null}。 
	 *  
	 * @param  name一个字符串，它指定多部分文件的参数名称。 
	 * 
	 * @return 以{@link  MultipartFile}对象的形式上载的内容。 
	 * 
	 */
	@Nullable
	MultipartFile getFile(String name);

	/**
	 * Return the contents plus description of uploaded files in this request,
	 * or an empty list if it does not exist.
	 * @param name a String specifying the parameter name of the multipart file
	 * @return the uploaded content in the form of a {@link MultipartFile} list
	 * @since 3.0
	 */
	/**
	 * 返回此请求中的内容以及上载文件的描述，如果不存在，则返回一个空列表。 
	 *  
	 * @param  name一个字符串，用于指定分段文件的参数名称。 
	 * 
	 * @return 以{@link  MultipartFile}列表的形式@3.0起
	 */
	List<MultipartFile> getFiles(String name);

	/**
	 * Return a {@link java.util.Map} of the multipart files contained in this request.
	 * @return a map containing the parameter names as keys, and the
	 * {@link MultipartFile} objects as values
	 */
	/**
	 * 返回此请求中包含的多部分文件的{@link  java.util.Map}。 
	 *  
	 * @return 包含参数名称作为键和{@link  MultipartFile}对象作为值的映射
	 */
	Map<String, MultipartFile> getFileMap();

	/**
	 * Return a {@link MultiValueMap} of the multipart files contained in this request.
	 * @return a map containing the parameter names as keys, and a list of
	 * {@link MultipartFile} objects as values
	 * @since 3.0
	 */
	/**
	 * 返回此请求中包含的多部分文件的{@link  MultiValueMap}。 
	 *  
	 * @return 一个映射，其中包含参数名称作为键，以及一个{@link  MultipartFile}对象列表作为值@since 3.0
	 */
	MultiValueMap<String, MultipartFile> getMultiFileMap();

	/**
	 * Determine the content type of the specified request part.
	 * @param paramOrFileName the name of the part
	 * @return the associated content type, or {@code null} if not defined
	 * @since 3.1
	 */
	/**
	 * 确定指定请求部分的内容类型。 
	 *  
	 * @param  paramOrFileName零件的名称
	 * @return 关联的内容类型； 
	 * 如果未定义，则为{@code  null} @自3.1起
	 */
	@Nullable
	String getMultipartContentType(String paramOrFileName);

}
