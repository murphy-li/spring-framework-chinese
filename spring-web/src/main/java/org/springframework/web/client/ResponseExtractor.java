/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2018的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.web.client;

import java.io.IOException;
import java.lang.reflect.Type;

import org.springframework.http.client.ClientHttpResponse;
import org.springframework.lang.Nullable;

/**
 * Generic callback interface used by {@link RestTemplate}'s retrieval methods
 * Implementations of this interface perform the actual work of extracting data
 * from a {@link ClientHttpResponse}, but don't need to worry about exception
 * handling or closing resources.
 *
 * <p>Used internally by the {@link RestTemplate}, but also useful for
 * application code. There is one available factory method, see
 * {@link RestTemplate#responseEntityExtractor(Type)}.
 *
 * @author Arjen Poutsma
 * @since 3.0
 * @param <T> the data type
 * @see RestTemplate#execute
 */
/**
 * {@link  RestTemplate}的检索方法使用的通用回调接口此接口的实现执行从{@link  ClientHttpResponse}提取数据的实际工作，但无需担心异常处理或关闭资源。 
 *  <p>由{@link  RestTemplate}内部使用，但对应用程序代码也很有用。 
 * 有一种可用的工厂方法，请参见{@link  RestTemplate＃responseEntityExtractor（Type）}。 
 *  @author  Arjen Poutsma @从3.0开始
 * @param  <T>数据类型
 * @see  RestTemplate＃execute
 */
@FunctionalInterface
public interface ResponseExtractor<T> {

	/**
	 * Extract data from the given {@code ClientHttpResponse} and return it.
	 * @param response the HTTP response
	 * @return the extracted data
	 * @throws IOException in case of I/O errors
	 */
	/**
	 * 从给定的{@code  ClientHttpResponse}中提取数据并返回。 
	 *  
	 * @param 响应HTTP响应
	 * @return 提取的数据
	 * @throws  IOException（如果发生I / O错误）
	 */
	@Nullable
	T extractData(ClientHttpResponse response) throws IOException;

}
