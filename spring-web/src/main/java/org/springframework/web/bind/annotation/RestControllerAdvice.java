/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2019 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2019的原始作者或作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.web.bind.annotation;

import java.lang.annotation.Annotation;
import java.lang.annotation.Documented;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

import org.springframework.core.annotation.AliasFor;

/**
 * A convenience annotation that is itself annotated with
 * {@link ControllerAdvice @ControllerAdvice}
 * and {@link ResponseBody @ResponseBody}.
 *
 * <p>Types that carry this annotation are treated as controller advice where
 * {@link ExceptionHandler @ExceptionHandler} methods assume
 * {@link ResponseBody @ResponseBody} semantics by default.
 *
 * <p><b>NOTE:</b> {@code @RestControllerAdvice} is processed if an appropriate
 * {@code HandlerMapping}-{@code HandlerAdapter} pair is configured such as the
 * {@code RequestMappingHandlerMapping}-{@code RequestMappingHandlerAdapter} pair
 * which are the default in the MVC Java config and the MVC namespace.
 *
 * @author Rossen Stoyanchev
 * @author Sam Brannen
 * @since 4.3
 * @see RestController
 * @see ControllerAdvice
 */
/**
 * 便利性注释本身由{@link  ControllerAdvice @ControllerAdvice}和{@link  ResponseBody @ResponseBody}进行注释。 
 *  <p>带有此注解的类型被视为控制器建议，其中{@link  ExceptionHandler @ExceptionHandler}方法默认情况下采用{@link  ResponseBody @ResponseBody}语义。 
 *  <p> <b>注意：</ b>如果配置了适当的{@code  HandlerMapping}-{<@code> HandlerAdapter}对，例如{<@code > RequestMappingHandlerMapping}-{<@code> RequestMappingHandlerAdapter}对，它们是MVC Java配置和MVC名称空间中的默认值。 
 *  @author  Rossen Stoyanchev @author  Sam Brannen @从4.3开始
 * @see  RestController 
 * @see  ControllerAdvice
 */
@Target(ElementType.TYPE)
@Retention(RetentionPolicy.RUNTIME)
@Documented
@ControllerAdvice
@ResponseBody
public @interface RestControllerAdvice {

	/**
	 * Alias for the {@link #basePackages} attribute.
	 * <p>Allows for more concise annotation declarations &mdash; for example,
	 * {@code @RestControllerAdvice("org.my.pkg")} is equivalent to
	 * {@code @RestControllerAdvice(basePackages = "org.my.pkg")}.
	 * @see #basePackages
	 */
	/**
	 * {@link  #basePackages}属性的别名。 
	 *  <p>允许使用更简洁的注释声明-例如，{@code  @RestControllerAdvice（"org.my.pkg"）}等效于{@code  @RestControllerAdvice（basePackages ="org.my.pkg"）}。 
	 *  
	 * @see  #basePackages
	 */
	@AliasFor(annotation = ControllerAdvice.class)
	String[] value() default {};

	/**
	 * Array of base packages.
	 * <p>Controllers that belong to those base packages or sub-packages thereof
	 * will be included &mdash; for example,
	 * {@code @RestControllerAdvice(basePackages = "org.my.pkg")} or
	 * {@code @RestControllerAdvice(basePackages = {"org.my.pkg", "org.my.other.pkg"})}.
	 * <p>{@link #value} is an alias for this attribute, simply allowing for
	 * more concise use of the annotation.
	 * <p>Also consider using {@link #basePackageClasses} as a type-safe
	 * alternative to String-based package names.
	 */
	/**
	 * 基本软件包数组。 
	 *  <p>属于那些基本包或其子包的控制器将被包括-例如，{@code  @RestControllerAdvice（basePackages ="org.my.pkg"）}或{@code  @RestControllerAdvice（ basePackages = {"org.my.pkg"，"org.my.other.pkg"}）}。 
	 *  <p> {<@link> #value}是此属性的别名，只是允许更简洁地使用注释。 
	 *  <p>还可以考虑将{@link  #basePackageClasses}用作基于字符串的程序包名称的类型安全替代。 
	 * 
	 */
	@AliasFor(annotation = ControllerAdvice.class)
	String[] basePackages() default {};

	/**
	 * Type-safe alternative to {@link #basePackages} for specifying the packages
	 * in which to select controllers to be advised by the {@code @RestControllerAdvice}
	 * annotated class.
	 * <p>Consider creating a special no-op marker class or interface in each package
	 * that serves no purpose other than being referenced by this attribute.
	 */
	/**
	 * {@link  #basePackages}的类型安全替代品，用于指定要在其中选择由{@code  @RestControllerAdvice}注释类建议的控制器的软件包。 
	 *  <p>请考虑在每个程序包中创建一个特殊的无操作标记类或接口，该类或接口除了被该属性引用外没有其他用途。 
	 * 
	 */
	@AliasFor(annotation = ControllerAdvice.class)
	Class<?>[] basePackageClasses() default {};

	/**
	 * Array of classes.
	 * <p>Controllers that are assignable to at least one of the given types
	 * will be advised by the {@code @RestControllerAdvice} annotated class.
	 */
	/**
	 * 类数组。 
	 *  <p>可分配给至少一种给定类型的控制器将由{@code  @RestControllerAdvice}注释类建议。 
	 * 
	 */
	@AliasFor(annotation = ControllerAdvice.class)
	Class<?>[] assignableTypes() default {};

	/**
	 * Array of annotations.
	 * <p>Controllers that are annotated with at least one of the supplied annotation
	 * types will be advised by the {@code @RestControllerAdvice} annotated class.
	 * <p>Consider creating a custom composed annotation or use a predefined one,
	 * like {@link RestController @RestController}.
	 */
	/**
	 * 注释数组。 
	 *  <p>使用至少一种提供的注释类型进行注释的控制器将由{@code  @RestControllerAdvice}注释类建议。 
	 *  <p>考虑创建一个自定义的组合注释，或使用预定义的注释，例如{@link  RestController @RestController}。 
	 * 
	 */
	@AliasFor(annotation = ControllerAdvice.class)
	Class<? extends Annotation>[] annotations() default {};

}
