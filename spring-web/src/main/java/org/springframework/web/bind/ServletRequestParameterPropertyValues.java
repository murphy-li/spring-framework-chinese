/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2018的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.web.bind;

import javax.servlet.ServletRequest;

import org.springframework.beans.MutablePropertyValues;
import org.springframework.lang.Nullable;
import org.springframework.web.util.WebUtils;

/**
 * PropertyValues implementation created from parameters in a ServletRequest.
 * Can look for all property values beginning with a certain prefix and
 * prefix separator (default is "_").
 *
 * <p>For example, with a prefix of "spring", "spring_param1" and
 * "spring_param2" result in a Map with "param1" and "param2" as keys.
 *
 * <p>This class is not immutable to be able to efficiently remove property
 * values that should be ignored for binding.
 *
 * @author Rod Johnson
 * @author Juergen Hoeller
 * @see org.springframework.web.util.WebUtils#getParametersStartingWith
 */
/**
 * 从ServletRequest中的参数创建的PropertyValues实现。 
 * 可以查找所有以某个前缀和前缀分隔符开头的属性值（默认为"_"）。 
 *  <p>例如，以"spring"，"spring_param1"和"spring_param2"为前缀的结果将导致以"param1"和"param2"作为键的映射。 
 *  <p>此类不能一成不变，以便能够有效地删除绑定时应忽略的属性值。 
 *  @author 罗德·约翰逊@author  Juergen Hoeller 
 * @see  org.springframework.web.util.WebUtils＃getParametersStartingWith
 */
@SuppressWarnings("serial")
public class ServletRequestParameterPropertyValues extends MutablePropertyValues {

	/** Default prefix separator. */
	/**
	 * 默认前缀分隔符。 
	 * 
	 */
	public static final String DEFAULT_PREFIX_SEPARATOR = "_";


	/**
	 * Create new ServletRequestPropertyValues using no prefix
	 * (and hence, no prefix separator).
	 * @param request the HTTP request
	 */
	/**
	 * 不使用前缀（因此不使用前缀分隔符）创建新的ServletRequestPropertyValues。 
	 *  
	 * @param 请求HTTP请求
	 */
	public ServletRequestParameterPropertyValues(ServletRequest request) {
		this(request, null, null);
	}

	/**
	 * Create new ServletRequestPropertyValues using the given prefix and
	 * the default prefix separator (the underscore character "_").
	 * @param request the HTTP request
	 * @param prefix the prefix for parameters (the full prefix will
	 * consist of this plus the separator)
	 * @see #DEFAULT_PREFIX_SEPARATOR
	 */
	/**
	 * 使用给定的前缀和默认的前缀分隔符（下划线字符"_"）创建新的ServletRequestPropertyValues。 
	 *  
	 * @param 请求HTTP请求
	 * @param 为参数前缀添加前缀（完整的前缀由该前缀和分隔符组成）
	 * @see  #DEFAULT_PREFIX_SEPARATOR
	 */
	public ServletRequestParameterPropertyValues(ServletRequest request, @Nullable String prefix) {
		this(request, prefix, DEFAULT_PREFIX_SEPARATOR);
	}

	/**
	 * Create new ServletRequestPropertyValues supplying both prefix and
	 * prefix separator.
	 * @param request the HTTP request
	 * @param prefix the prefix for parameters (the full prefix will
	 * consist of this plus the separator)
	 * @param prefixSeparator separator delimiting prefix (e.g. "spring")
	 * and the rest of the parameter name ("param1", "param2")
	 */
	/**
	 * 创建同时提供前缀和前缀分隔符的新ServletRequestPropertyValues。 
	 *  
	 * @param 请求HTTP请求
	 * @param 前缀为参数添加前缀（完整前缀将由该前缀加上分隔符组成）
	 * @param  prefixSeparator分隔符分隔前缀（例如"spring"）和其余参数名称（"param1"，"param2"）
	 */
	public ServletRequestParameterPropertyValues(
			ServletRequest request, @Nullable String prefix, @Nullable String prefixSeparator) {

		super(WebUtils.getParametersStartingWith(
				request, (prefix != null ? prefix + prefixSeparator : null)));
	}

}
