/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2017的原始作者或作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.web.bind.annotation;

import java.lang.annotation.Documented;
import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

import org.springframework.core.annotation.AliasFor;
import org.springframework.http.HttpStatus;

/**
 * Marks a method or exception class with the status {@link #code} and
 * {@link #reason} that should be returned.
 *
 * <p>The status code is applied to the HTTP response when the handler
 * method is invoked and overrides status information set by other means,
 * like {@code ResponseEntity} or {@code "redirect:"}.
 *
 * <p><strong>Warning</strong>: when using this annotation on an exception
 * class, or when setting the {@code reason} attribute of this annotation,
 * the {@code HttpServletResponse.sendError} method will be used.
 *
 * <p>With {@code HttpServletResponse.sendError}, the response is considered
 * complete and should not be written to any further. Furthermore, the Servlet
 * container will typically write an HTML error page therefore making the
 * use of a {@code reason} unsuitable for REST APIs. For such cases it is
 * preferable to use a {@link org.springframework.http.ResponseEntity} as
 * a return type and avoid the use of {@code @ResponseStatus} altogether.
 *
 * <p>Note that a controller class may also be annotated with
 * {@code @ResponseStatus} and is then inherited by all {@code @RequestMapping}
 * methods.
 *
 * @author Arjen Poutsma
 * @author Sam Brannen
 * @since 3.0
 * @see org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver
 * @see javax.servlet.http.HttpServletResponse#sendError(int, String)
 */
/**
 * 标记状态为{@link  #code}和{@link  #reason}的方法或异常类。 
 *  <p>当调用处理程序方法时，状态代码将应用于HTTP响应，并覆盖通过其他方式设置的状态信息，例如{@code  ResponseEntity}或{@code "redirect："}。 
 *  <p> <strong>警告</ strong>：在异常类上使用此注解或设置此注解的{@code 原因}属性时，{<@code> HttpServletResponse.sendError}方法将为用过的。 
 *  <p>使用{@code  HttpServletResponse.sendError}，响应被认为是完整的，不应再写入任何内容。 
 * 此外，Servlet容器通常会写一个HTML错误页面，因此使用{@code 原因}不适合REST API。 
 * 在这种情况下，最好使用{@link  org.springframework.http.ResponseEntity}作为返回类型，并避免完全使用{@code  @ResponseStatus}。 
 *  <p>请注意，控制器类也可以用{@code  @ResponseStatus}进行注释，然后由所有{@code  @RequestMapping}方法继承。 
 *  @author  Arjen Poutsma @author  Sam Brannen @since 3.0 
 * @see  org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver 
 * @see  javax.servlet.http.HttpServletResponse＃sendError（int，String）
 */
@Target({ElementType.TYPE, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Documented
public @interface ResponseStatus {

	/**
	 * Alias for {@link #code}.
	 */
	/**
	 * {@link  #code}的别名。 
	 * 
	 */
	@AliasFor("code")
	HttpStatus value() default HttpStatus.INTERNAL_SERVER_ERROR;

	/**
	 * The status <em>code</em> to use for the response.
	 * <p>Default is {@link HttpStatus#INTERNAL_SERVER_ERROR}, which should
	 * typically be changed to something more appropriate.
	 * @since 4.2
	 * @see javax.servlet.http.HttpServletResponse#setStatus(int)
	 * @see javax.servlet.http.HttpServletResponse#sendError(int)
	 */
	/**
	 * 用于响应的状态<em> code </ em>。 
	 *  <p>默认值为{@link  HttpStatus＃INTERNAL_SERVER_ERROR}，通常应将其更改为更合适的名称。 
	 *  @since 4.2 
	 * @see  javax.servlet.http.HttpServletResponse＃setStatus（int）
	 * @see  javax.servlet.http.HttpServletResponse＃sendError（int）
	 */
	@AliasFor("value")
	HttpStatus code() default HttpStatus.INTERNAL_SERVER_ERROR;

	/**
	 * The <em>reason</em> to be used for the response.
	 * @see javax.servlet.http.HttpServletResponse#sendError(int, String)
	 */
	/**
	 * <em>原因</ em>用于响应。 
	 *  
	 * @see  javax.servlet.http.HttpServletResponse＃sendError（int，String）
	 */
	String reason() default "";

}
