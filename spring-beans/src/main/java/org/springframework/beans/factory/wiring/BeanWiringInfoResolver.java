/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2012 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2012的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.beans.factory.wiring;

import org.springframework.lang.Nullable;

/**
 * Strategy interface to be implemented by objects than can resolve bean name
 * information, given a newly instantiated bean object. Invocations to the
 * {@link #resolveWiringInfo} method on this interface will be driven by
 * the AspectJ pointcut in the relevant concrete aspect.
 *
 * <p>Metadata resolution strategy can be pluggable. A good default is
 * {@link ClassNameBeanWiringInfoResolver}, which uses the fully-qualified
 * class name as bean name.
 *
 * @author Rod Johnson
 * @since 2.0
 * @see BeanWiringInfo
 * @see ClassNameBeanWiringInfoResolver
 * @see org.springframework.beans.factory.annotation.AnnotationBeanWiringInfoResolver
 */
/**
 * 给定一个新实例化的bean对象，由对象实现的策略接口可以解析bean名称信息。 
 * 在相关具体方面，AspectJ切入点将驱动对此接口上的{@link  #resolveWiringInfo}方法的调用。 
 *  <p>元数据解析策略可以插入。 
 * 一个很好的默认值是{@link  ClassNameBeanWiringInfoResolver}，它将完全限定的类名用作bean名称。 
 *  @author  Rod Johnson @since 2.0起
 * @see  BeanWiringInfo 
 * @see  ClassNameBeanWiringInfoResolver 
 * @see  org.springframework.beans.factory.annotation.AnnotationBeanWiringInfoResolver
 */
public interface BeanWiringInfoResolver {

	/**
	 * Resolve the BeanWiringInfo for the given bean instance.
	 * @param beanInstance the bean instance to resolve info for
	 * @return the BeanWiringInfo, or {@code null} if not found
	 */
	/**
	 * 解决给定bean实例的BeanWiringInfo。 
	 *  
	 * @param  beanInstance bean实例，用于解析有关
	 * @return  BeanWiringInfo的信息，如果找不到，则返回{@code  null}
	 */
	@Nullable
	BeanWiringInfo resolveWiringInfo(Object beanInstance);

}
