/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2018的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.beans.factory.support;

import java.security.AccessControlContext;
import java.security.AccessController;

import org.springframework.lang.Nullable;

/**
 * Simple {@link SecurityContextProvider} implementation.
 *
 * @author Costin Leau
 * @since 3.0
 */
/**
 * 简单的{@link  SecurityContextProvider}实现。 
 *  @author  Costin Leau @从3.0开始
 */
public class SimpleSecurityContextProvider implements SecurityContextProvider {

	@Nullable
	private final AccessControlContext acc;


	/**
	 * Construct a new {@code SimpleSecurityContextProvider} instance.
	 * <p>The security context will be retrieved on each call from the current
	 * thread.
	 */
	/**
	 * 构造一个新的{@code  SimpleSecurityContextProvider}实例。 
	 *  <p>将在每次调用中从当前线程检索安全上下文。 
	 * 
	 */
	public SimpleSecurityContextProvider() {
		this(null);
	}

	/**
	 * Construct a new {@code SimpleSecurityContextProvider} instance.
	 * <p>If the given control context is null, the security context will be
	 * retrieved on each call from the current thread.
	 * @param acc access control context (can be {@code null})
	 * @see AccessController#getContext()
	 */
	/**
	 * 构造一个新的{@code  SimpleSecurityContextProvider}实例。 
	 *  <p>如果给定的控制上下文为null，则在每次调用时从当前线程检索安全性上下文。 
	 *  
	 * @param  acc访问控制上下文（可以为{@code  null}）
	 * @see  AccessController＃getContext（）
	 */
	public SimpleSecurityContextProvider(@Nullable AccessControlContext acc) {
		this.acc = acc;
	}


	@Override
	public AccessControlContext getAccessControlContext() {
		return (this.acc != null ? this.acc : AccessController.getContext());
	}

}
