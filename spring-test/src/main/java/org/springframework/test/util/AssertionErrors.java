/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2019 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2019的原始作者或作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.test.util;

import org.springframework.lang.Nullable;
import org.springframework.util.ObjectUtils;

/**
 * Test assertions that are independent of any third-party assertion library.
 *
 * @author Lukas Krecan
 * @author Arjen Poutsma
 * @author Sam Brannen
 * @since 3.2
 */
/**
 * 测试独立于任何第三方断言库的断言。 
 *  @author 卢卡斯·克雷坎@author  Arjen Poutsma @author  Sam Brannen @since 3.2
 */
public abstract class AssertionErrors {

	/**
	 * Fail a test with the given message.
	 * @param message a message that describes the reason for the failure
	 */
	/**
	 * 使用给定消息的测试失败。 
	 *  
	 * @param 消息一条消息，描述失败的原因
	 */
	public static void fail(String message) {
		throw new AssertionError(message);
	}

	/**
	 * Fail a test with the given message passing along expected and actual
	 * values to be appended to the message.
	 * <p>For example given:
	 * <pre class="code">
	 * String name = "Accept";
	 * String expected = "application/json";
	 * String actual = "text/plain";
	 * fail("Response header [" + name + "]", expected, actual);
	 * </pre>
	 * <p>The resulting message is:
	 * <pre class="code">
	 * Response header [Accept] expected:&lt;application/json&gt; but was:&lt;text/plain&gt;
	 * </pre>
	 * @param message a message that describes the use case that failed
	 * @param expected the expected value
	 * @param actual the actual value
	 */
	/**
	 * 给定消息传递的期望值和实际值附加到消息后，测试将失败。 
	 *  <p>例如：<pre class ="code">字符串名称="Accept";预期字符串="application / json";实际字符串="text / plain"; fail（"Response header ["+ name +"]"，应该是实际的）； 
	 *  </ pre> <p>结果消息为：<pre class ="code">响应标头[接受]：<application / json>，但为：<text / plain> </ pre> 
	 * @param 消息a描述失败的用例的消息
	 * @param 期望值
	 * @param 实际实际值
	 */
	public static void fail(String message, @Nullable Object expected, @Nullable Object actual) {
		throw new AssertionError(message + " expected:<" + expected + "> but was:<" + actual + ">");
	}

	/**
	 * Assert the given condition is {@code true} and raise an
	 * {@link AssertionError} otherwise.
	 * @param message a message that describes the reason for the failure
	 * @param condition the condition to test for
	 */
	/**
	 * 断言给定条件为{@code  true}，否则引发{@link  AssertionError}。 
	 *  
	 * @param 消息，描述失败原因的消息
	 * @param 条件要测试的条件
	 */
	public static void assertTrue(String message, boolean condition) {
		if (!condition) {
			fail(message);
		}
	}

	/**
	 * Assert the given condition is {@code false} and raise an
	 * {@link AssertionError} otherwise.
	 * @param message a message that describes the reason for the failure
	 * @param condition the condition to test for
	 * @since 5.2.1
	 */
	/**
	 * 断言给定条件为{@code  false}，否则引发{@link  AssertionError}。 
	 *  
	 * @param 消息，描述失败原因的消息
	 * @param 条件，测试@since 5.2.1起的条件
	 */
	public static void assertFalse(String message, boolean condition) {
		if (condition) {
			fail(message);
		}
	}

	/**
	 * Assert that the given object is {@code null} and raise an
	 * {@link AssertionError} otherwise.
	 * @param message a message that describes the reason for the failure
	 * @param object the object to check
	 * @since 5.2.1
	 */
	/**
	 * 断言给定对象为{@code  null}，否则引发{@link  AssertionError}。 
	 *  
	 * @param 消息，描述失败原因的消息
	 * @param 对象5.2.1起开始检查的对象
	 */
	public static void assertNull(String message, @Nullable Object object) {
		assertTrue(message, object == null);
	}

	/**
	 * Assert that the given object is not {@code null} and raise an
	 * {@link AssertionError} otherwise.
	 * @param message a message that describes the reason for the failure
	 * @param object the object to check
	 * @since 5.1.8
	 */
	/**
	 * 断言给定对象不是{@code  null}，否则引发{@link  AssertionError}。 
	 *  
	 * @param 消息一条消息，描述失败的原因
	 * @param 对象要检查的对象@since 5.1.8
	 */
	public static void assertNotNull(String message, @Nullable Object object) {
		assertTrue(message, object != null);
	}

	/**
	 * Assert two objects are equal and raise an {@link AssertionError} otherwise.
	 * <p>For example:
	 * <pre class="code">
	 * assertEquals("Response header [" + name + "]", expected, actual);
	 * </pre>
	 * @param message a message that describes the value being checked
	 * @param expected the expected value
	 * @param actual the actual value
	 * @see #fail(String, Object, Object)
	 */
	/**
	 * 断言两个对象相等，否则引发{@link  AssertionError}。 
	 *  <p>例如：<pre class ="code"> assertEquals（"响应标头["+名称+"]"，应为实际值）； 
	 *  </ pre> 
	 * @param 消息，该消息描述了要检查的值
	 * @param 预期的预期值
	 * @param 实际的实际值
	 * @see  #fail（String，Object，Object）
	 */
	public static void assertEquals(String message, @Nullable Object expected, @Nullable Object actual) {
		if (!ObjectUtils.nullSafeEquals(expected, actual)) {
			fail(message, ObjectUtils.nullSafeToString(expected), ObjectUtils.nullSafeToString(actual));
		}
	}

	/**
	 * Assert two objects are not equal and raise an {@link AssertionError} otherwise.
	 * <p>For example:
	 * <pre class="code">
	 * assertNotEquals("Response header [" + name + "]", expected, actual);
	 * </pre>
	 * @param message a message that describes the value being checked
	 * @param expected the expected value
	 * @param actual the actual value
	 */
	/**
	 * 断言两个对象不相等，否则引发{@link  AssertionError}。 
	 *  <p>例如：<pre class ="code"> assertNotEquals（"响应标头["+名称+"]"，应为实际值）； 
	 *  </ pre> 
	 * @param 消息，该消息描述了要检查的值
	 * @param 期望的期望值
	 * @param 实际实际值
	 */
	public static void assertNotEquals(String message, @Nullable Object expected, @Nullable Object actual) {
		if (ObjectUtils.nullSafeEquals(expected, actual)) {
			throw new AssertionError(message + " was not expected to be:" +
					"<" + ObjectUtils.nullSafeToString(actual) + ">");
		}
	}

}
