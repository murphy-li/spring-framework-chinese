/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2017 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2017的原始作者或作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.test.web.servlet.setup;

import org.springframework.lang.Nullable;
import org.springframework.test.web.servlet.request.RequestPostProcessor;
import org.springframework.web.context.WebApplicationContext;

/**
 * Contract for customizing a {@code ConfigurableMockMvcBuilder} in some
 * specific way, e.g. a 3rd party library that wants to provide shortcuts for
 * setting up a MockMvc.
 *
 * <p>An implementation of this interface can be plugged in via
 * {@link ConfigurableMockMvcBuilder#apply} with instances of this type likely
 * created via static methods, e.g.:
 *
 * <pre class="code">
 * import static org.example.ExampleSetup.mySetup;
 *
 * // ...
 *
 * MockMvcBuilders.webAppContextSetup(context).apply(mySetup("foo","bar")).build();
 * </pre>
 *
 * @author Rossen Stoyanchev
 * @since 4.1
 * @see org.springframework.test.web.servlet.setup.MockMvcConfigurerAdapter
 */
/**
 * 以某种特定方式自定义{@code  ConfigurableMockMvcBuilder}的合同，例如想要提供用于设置MockMvc的快捷方式的第3方库。 
 *  <p>可以通过{@link  ConfigurableMockMvcBuilder＃apply}插入此接口的实现，该类型的实例可能是通过静态方法创建的，例如：<pre class ="code"> import static org.example.ExampleSetup .mySetup; // ... MockMvcBuilders.webAppContextSetup（context）.apply（mySetup（"foo"，"bar"））。 
 * build（）; </ pre> @author  Rossen Stoyanchev @从4.1开始
 * @see  org.springframework.test.web.servlet.setup.MockMvcConfigurerAdapter
 */
public interface MockMvcConfigurer {

	/**
	 * Invoked immediately when this {@code MockMvcConfigurer} is added via
	 * {@link ConfigurableMockMvcBuilder#apply}.
	 * @param builder the builder for the MockMvc
	 */
	/**
	 * 通过{@link  ConfigurableMockMvcBuilder＃apply}添加此{@code  MockMvcConfigurer}时，立即调用。 
	 *  
	 * @param 构建器MockMvc的构建器
	 */
	default void afterConfigurerAdded(ConfigurableMockMvcBuilder<?> builder) {
	}

	/**
	 * Invoked when the MockMvc instance is about to be created with the MockMvc
	 * builder and the Spring WebApplicationContext that will be passed to the
	 * {@code DispatcherServlet}.
	 * @param builder the builder for the MockMvc
	 * @param context the Spring configuration
	 * @return a post processor to be applied to every request performed
	 * through the {@code MockMvc} instance.
	 */
	/**
	 * 当即将使用MockMvc构建器和将传递到{@code  DispatcherServlet}的Spring WebApplicationContext创建MockMvc实例时调用。 
	 *  
	 * @param 构建器MockMvc 
	 * @param 上下文的构建器，Spring配置
	 * @return 后处理器，将应用于通过{@code  MockMvc}实例执行的每个请求。 
	 * 
	 */
	@Nullable
	default RequestPostProcessor beforeMockMvcCreated(
			ConfigurableMockMvcBuilder<?> builder, WebApplicationContext context) {

		return null;
	}

}
