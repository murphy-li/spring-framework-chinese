/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2016 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2016的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.test.annotation;

import java.lang.annotation.Documented;
import java.lang.annotation.ElementType;
import java.lang.annotation.Inherited;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

/**
 * {@code @Commit} is a test annotation that is used to indicate that a
 * <em>test-managed transaction</em> should be <em>committed</em> after
 * the test method has completed.
 *
 * <p>Consult the class-level Javadoc for
 * {@link org.springframework.test.context.transaction.TransactionalTestExecutionListener}
 * for an explanation of <em>test-managed transactions</em>.
 *
 * <p>When declared as a class-level annotation, {@code @Commit} defines
 * the default commit semantics for all test methods within the test class
 * hierarchy. When declared as a method-level annotation, {@code @Commit}
 * defines commit semantics for the specific test method, potentially
 * overriding class-level default commit or rollback semantics.
 *
 * <p><strong>Warning</strong>: {@code @Commit} can be used as direct
 * replacement for {@code @Rollback(false)}; however, it should
 * <strong>not</strong> be declared alongside {@code @Rollback}. Declaring
 * {@code @Commit} and {@code @Rollback} on the same test method or on the
 * same test class is unsupported and may lead to unpredictable results.
 *
 * @author Sam Brannen
 * @since 4.2
 * @see Rollback
 * @see org.springframework.test.context.transaction.TransactionalTestExecutionListener
 */
/**
 * {@code  @Commit}是一个测试注释，用于指示在测试方法完成后，应<em>提交</ em>一个由测试管理的事务</ em>。 
 *  <p>请咨询{@link  org.springframework.test.context.transaction.TransactionalTestExecutionListener}的类级Javadoc，以获取对<em>测试管理的交易</ em>的解释。 
 *  <p>当声明为类级注释时，{<@code> @Commit}定义测试类层次结构内所有测试方法的默认提交语义。 
 * 当声明为方法级注释时，{<@code> @Commit}定义特定测试方法的提交语义，从而有可能覆盖类级别的默认提交或回滚语义。 
 *  <p> <strong>警告</ strong>：{@code  @Commit}可以直接替代{@code  @Rollback（false）}； 
 * 但是，不应<strong>不</ strong>与{@code  @Rollback}一起声明。 
 * 在同一测试方法或同一测试类上声明{@code  @Commit}和{@code  @Rollback}不受支持，并且可能导致不可预测的结果。 
 *  @author  Sam Brannen @从4.2开始
 * @see 回滚
 * @see  org.springframework.test.context.transaction.TransactionalTestExecutionListener
 */
@Target({ElementType.TYPE, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Documented
@Inherited
@Rollback(false)
public @interface Commit {
}
