/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2019 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2019的原始作者或作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.test.annotation;

import java.lang.annotation.Documented;
import java.lang.annotation.ElementType;
import java.lang.annotation.Inherited;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

/**
 * Test annotation for use with JUnit 4 to indicate whether a test is enabled or
 * disabled for a specific testing profile.
 *
 * <p>In the context of this annotation, the term <em>profile</em> refers to
 * a Java system property by default; however, the semantics can be changed
 * by implementing a custom {@link ProfileValueSource}. If the configured
 * {@code ProfileValueSource} returns a matching {@link #value} for the
 * declared {@link #name}, the test will be enabled. Otherwise, the test
 * will be disabled and effectively <em>ignored</em>.
 *
 * <p>{@code @IfProfileValue} can be applied at the class level, the method
 * level, or both. Class-level usage of {@code @IfProfileValue} takes
 * precedence over method-level usage for any methods within that class or
 * its subclasses. Specifically, a test is enabled if it is enabled both at
 * the class level <em>and</em> at the method level; the absence of
 * {@code @IfProfileValue} means the test is implicitly enabled. This is
 * analogous to the semantics of JUnit's {@link org.junit.Ignore @Ignore}
 * annotation, except that the presence of {@code @Ignore} always disables
 * a test.
 *
 * <h3>Example</h3>
 * When using {@link SystemProfileValueSource} as the {@code ProfileValueSource}
 * implementation (which is configured by default), you can configure a test
 * method to run only on Java VMs from Oracle as follows:
 *
 * <pre class="code">
 * &#064;IfProfileValue(name = &quot;java.vendor&quot;, value = &quot;Oracle Corporation&quot;)
 * public void testSomething() {
 *     // ...
 * }</pre>
 *
 * <h3>'OR' Semantics</h3>
 * <p>You can alternatively configure {@code @IfProfileValue} with <em>OR</em>
 * semantics for multiple {@link #values}. The following test will be enabled
 * if a {@code ProfileValueSource} has been appropriately configured for the
 * {@code "test-groups"} profile with a value of either {@code unit-tests}
 * <em>or</em> {@code integration-tests}. This functionality is similar to
 * TestNG's support for test <em>groups</em> and JUnit's experimental support
 * for test <em>categories</em>.
 *
 * <pre class="code">
 * &#064;IfProfileValue(name = &quot;test-groups&quot;, values = { &quot;unit-tests&quot;, &quot;integration-tests&quot; })
 * public void testWhichRunsForUnitOrIntegrationTestGroups() {
 *     // ...
 * }</pre>
 *
 * <h3>{@code @IfProfileValue} vs. {@code @Profile}</h3>
 * <p>Although the {@code @IfProfileValue} and
 * {@link org.springframework.context.annotation.Profile @Profile} annotations
 * both involve <em>profiles</em>, they are not directly related. {@code @Profile}
 * involves bean definition profiles configured in the
 * {@link org.springframework.core.env.Environment Environment}; whereas,
 * {@code @IfProfileValue} is used to enable or disable tests.
 *
 * <h3>Meta-annotation Support</h3>
 * <p>This annotation may be used as a <em>meta-annotation</em> to create custom
 * <em>composed annotations</em>.
 *
 * @author Rod Johnson
 * @author Sam Brannen
 * @since 2.0
 * @see ProfileValueSource
 * @see SystemProfileValueSource
 * @see ProfileValueSourceConfiguration
 * @see ProfileValueUtils
 * @see org.springframework.test.context.junit4.AbstractJUnit4SpringContextTests
 * @see org.springframework.test.context.junit4.SpringJUnit4ClassRunner
 * @see org.springframework.test.context.junit4.statements.ProfileValueChecker
 * @see org.springframework.context.annotation.Profile
 * @see org.springframework.test.context.ActiveProfiles
 */
/**
 * 与JUnit 4一起使用的测试注释，用于指示是否为特定的测试概要文件启用了测试。 
 *  <p>在此注解的上下文中，术语<em> profile </ em>默认是指Java系统属性。 
 * 但是，可以通过实现自定义{@link  ProfileValueSource}来更改语义。 
 * 如果已配置的{@code  ProfileValueSource}为声明的{@link  #name}返回匹配的{@link  #value}，则将启用测试。 
 * 否则，该测试将被禁用并有效地被<em>忽略</ em>。 
 *  <p> {<@code> @IfProfileValue}可以在类级别，方法级别或两者上应用。 
 *  {@code  @IfProfileValue}的类级别用法优先于该类或其子类中任何方法的方法级别用法。 
 * 具体来说，如果同时在类级别<em>和</ em>上启用了测试，则将启用该测试。 
 * 缺少{@code  @IfProfileValue}意味着隐式启用了测试。 
 * 这类似于JUnit的{@link  org.junit.Ignore @Ignore}注释的语义，除了{@code  @Ignore}的存在总是会禁用测试。 
 *  <h3>示例</ h3>使用{@link  SystemProfileValueSource}作为{@code  ProfileValueSource}实现（默认配置）时，可以将测试方法配置为仅在Oracle的Java VM上运行，如下所示：如下：<pre class ="code"> @IfProfileValue（name ="java.vendor"，value ="Oracle Corporation"）public void testSomething（）{// ...} </ pre> <h3>'OR'语义</ h3> <p>您也可以为多个{@link  #values}的<em> OR </ em>语义配置{@code  @IfProfileValue}。 
 * 如果为{@code "test-groups"}配置文件正确配置了{@code  ProfileValueSource}，且其值为{@code  unit-tests} <em>，则将启用以下测试或</ em> {@code 集成测试}。 
 * 此功能类似于TestNG对测试<em>组</ em>的支持，以及JUnit对测试<em> categories </ em>的实验性支持。 
 *  <pre class ="code"> @IfProfileValue（name ="test-groups"，values = {""unit-tests"，"integration-tests"}）public void testWhichRunsForUnitOrIntegrationTestGroups（）{// ...} </ pre > <h3> {<@code> @IfProfileValue}与{@code  @Profile} </ h3> <p>尽管{@code  @IfProfileValue}和{@link  org.springframework.context .annotation.Profile @Profile}注解都涉及<em> profiles </ em>，它们并不直接相关。 
 *  {@code  @Profile}涉及在{@link  org.springframework.core.env.Environment Environment}中配置的bean定义配置文件； 
 * 而{@code  @IfProfileValue}用于启用或禁用测试。 
 *  <h3>元注释支持</ h3> <p>此注释可用作<em>元注释</ em>，以创建自定义的<em>组成的注释</ em>。 
 *  @author  Rod Johnson @author  Sam Brannen @since 2.0起
 * @see  org.springframework.test.context.junit4.SpringJUnit4ClassRunner 
 * @see  org.springframework.test.context.junit4.statements.ProfileValueChecker 
 * @see  org.springframework.context.annotation.Profile 
 * @see  org .springframework.test.context.ActiveProfiles
 */
@Target({ElementType.TYPE, ElementType.METHOD})
@Retention(RetentionPolicy.RUNTIME)
@Documented
@Inherited
public @interface IfProfileValue {

	/**
	 * The {@code name} of the <em>profile value</em> against which to test.
	 */
	/**
	 * 要测试的<em>配置文件值</ em>的{@code 名称}。 
	 * 
	 */
	String name();

	/**
	 * A single, permissible {@code value} of the <em>profile value</em>
	 * for the given {@link #name}.
	 * <p>Note: Assigning values to both {@code #value} and {@link #values}
	 * will lead to a configuration conflict.
	 */
	/**
	 * 给定的{@link  #name}的<em>配置文件值</ em>的单个允许的{@code 值}。 
	 *  <p>注意：同时为{@code  #value}和{@link  #values}分配值将导致配置冲突。 
	 * 
	 */
	String value() default "";

	/**
	 * A list of all permissible {@code values} of the <em>profile value</em>
	 * for the given {@link #name}.
	 * <p>Note: Assigning values to both {@link #value} and {@code #values}
	 * will lead to a configuration conflict.
	 */
	/**
	 * 给定的{@link  #name}的<em>配置文件值</ em>的所有允许的{@code 值}的列表。 
	 *  <p>注意：同时为{@link  #value}和{@code  #values}分配值将导致配置冲突。 
	 * 
	 */
	String[] values() default {};

}
