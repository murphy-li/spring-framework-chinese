/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2019 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2019的原始作者或作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.test.context;

import java.lang.annotation.Documented;
import java.lang.annotation.ElementType;
import java.lang.annotation.Inherited;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

import org.springframework.core.annotation.AliasFor;

/**
 * {@code ActiveProfiles} is a class-level annotation that is used to declare
 * which <em>active bean definition profiles</em> should be used when loading
 * an {@link org.springframework.context.ApplicationContext ApplicationContext}
 * for test classes.
 *
 * <p>This annotation may be used as a <em>meta-annotation</em> to create custom
 * <em>composed annotations</em>.
 *
 * @author Sam Brannen
 * @since 3.1
 * @see SmartContextLoader
 * @see MergedContextConfiguration
 * @see ContextConfiguration
 * @see ActiveProfilesResolver
 * @see org.springframework.context.ApplicationContext
 * @see org.springframework.context.annotation.Profile
 */
/**
 * {@code  ActiveProfiles}是一个类级别的注释，用于声明在加载{@link  org.springframework.context.ApplicationContext ApplicationContext}时应使用哪些<em>活动bean定义配置文件</ em>。 
 * 用于测试课程。 
 *  <p>此注释可用作<em>元注释</ em>，以创建自定义的<em>组成的注释</ em>。 
 *  @author  Sam Brannen @since 3.1 
 * @see  SmartContextLoader 
 * @see  MergedContextConfiguration 
 * @see  ContextConfiguration 
 * @see  ActiveProfilesResolver 
 * @see  org.springframework.context.ApplicationContext 
 * @see  org.springframework.context。 
 * 注解
 */
@Target(ElementType.TYPE)
@Retention(RetentionPolicy.RUNTIME)
@Documented
@Inherited
public @interface ActiveProfiles {

	/**
	 * Alias for {@link #profiles}.
	 * <p>This attribute may <strong>not</strong> be used in conjunction with
	 * {@link #profiles}, but it may be used <em>instead</em> of {@link #profiles}.
	 */
	/**
	 * {@link  #profiles}的别名。 
	 *  <p>此属性可能<strong>不</ strong>与{@link  #profiles}结合使用，但可以代替{@link  #profiles}的<em> </ em>使用。 
	 * 
	 */
	@AliasFor("profiles")
	String[] value() default {};

	/**
	 * The bean definition profiles to activate.
	 * <p>This attribute may <strong>not</strong> be used in conjunction with
	 * {@link #value}, but it may be used <em>instead</em> of {@link #value}.
	 */
	/**
	 * 激活的Bean定义配置文件。 
	 *  <p>此属性可能<strong>不</ strong>与{@link  #value}结合使用，但可以代替{@link  #value}的<em> </ em>使用。 
	 * 
	 */
	@AliasFor("value")
	String[] profiles() default {};

	/**
	 * The type of {@link ActiveProfilesResolver} to use for resolving the active
	 * bean definition profiles programmatically.
	 * @since 4.0
	 * @see ActiveProfilesResolver
	 */
	/**
	 * {@link  ActiveProfilesResolver}的类型，用于以编程方式解析活动bean定义配置文件。 
	 *  @始于4.0 
	 * @see  ActiveProfilesResolver
	 */
	Class<? extends ActiveProfilesResolver> resolver() default ActiveProfilesResolver.class;

	/**
	 * Whether or not bean definition profiles from superclasses should be
	 * <em>inherited</em>.
	 * <p>The default value is {@code true}, which means that a test
	 * class will <em>inherit</em> bean definition profiles defined by a
	 * test superclass. Specifically, the bean definition profiles for a test
	 * class will be appended to the list of bean definition profiles
	 * defined by a test superclass. Thus, subclasses have the option of
	 * <em>extending</em> the list of bean definition profiles.
	 * <p>If {@code inheritProfiles} is set to {@code false}, the bean
	 * definition profiles for the test class will <em>shadow</em> and
	 * effectively replace any bean definition profiles defined by a superclass.
	 * <p>In the following example, the {@code ApplicationContext} for
	 * {@code BaseTest} will be loaded using only the &quot;base&quot;
	 * bean definition profile; beans defined in the &quot;extended&quot; profile
	 * will therefore not be loaded. In contrast, the {@code ApplicationContext}
	 * for {@code ExtendedTest} will be loaded using the &quot;base&quot;
	 * <strong>and</strong> &quot;extended&quot; bean definition profiles.
	 * <pre class="code">
	 * &#064;ActiveProfiles(&quot;base&quot;)
	 * &#064;ContextConfiguration
	 * public class BaseTest {
	 *     // ...
	 * }
	 *
	 * &#064;ActiveProfiles(&quot;extended&quot;)
	 * &#064;ContextConfiguration
	 * public class ExtendedTest extends BaseTest {
	 *     // ...
	 * }
	 * </pre>
	 * <p>Note: {@code @ActiveProfiles} can be used when loading an
	 * {@code ApplicationContext} from path-based resource locations or
	 * annotated classes.
	 * @see ContextConfiguration#locations
	 * @see ContextConfiguration#classes
	 * @see ContextConfiguration#inheritLocations
	 */
	/**
	 * 是否应该<em>继承</ em>超类的bean定义配置文件。 
	 *  <p>默认值为{@code  true}，这意味着测试类将<em>继承</ em>由测试超类定义的bean定义配置文件。 
	 * 具体来说，将用于测试类的Bean定义配置文件添加到由测试超类定义的Bean定义配置文件列表中。 
	 * 因此，子类可以选择<em>扩展</ em> bean定义配置文件列表。 
	 *  <p>如果{@code  InheritedProfiles}设置为{@code  false}，则测试类的Bean定义配置文件将<em>阴影</ em>并有效替换超类定义的所有Bean定义配置文件。 
	 *  <p>在以下示例中，将仅使用"基本"bean定义配置文件来加载{@code  BaseTest}的{@code  ApplicationContext}。 
	 * 因此，将不会加载在"扩展"概要文件中定义的bean。 
	 * 相反，{<@code> ExtendedTest}的{@code  ApplicationContext}将使用"基本"<strong>和</ strong>"扩展"bean定义配置文件加载。 
	 *  <pre class ="code"> @ActiveProfiles（"base"）@ContextConfiguration公共类BaseTest {// ...} @ActiveProfiles（"extended"）@ContextConfiguration公共类ExtendedTest扩展了BaseTest {// ...} </注意：从基于路径的资源位置或带注释的类加载{@code  ApplicationContext}时，可以使用{@code  @ActiveProfiles}。 
	 *  
	 * @see  ContextConfiguration＃locations 
	 * @see  ContextConfiguration＃classes 
	 * @see  ContextConfiguration＃inheritLocations
	 */
	boolean inheritProfiles() default true;

}
