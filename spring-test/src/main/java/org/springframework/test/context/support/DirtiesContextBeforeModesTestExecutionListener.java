/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2018的原始作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.test.context.support;

import org.springframework.context.ApplicationContext;
import org.springframework.test.annotation.DirtiesContext;
import org.springframework.test.annotation.DirtiesContext.ClassMode;
import org.springframework.test.annotation.DirtiesContext.MethodMode;
import org.springframework.test.context.TestContext;
import org.springframework.test.context.TestExecutionListeners;

import static org.springframework.test.annotation.DirtiesContext.ClassMode.BEFORE_CLASS;
import static org.springframework.test.annotation.DirtiesContext.ClassMode.BEFORE_EACH_TEST_METHOD;
import static org.springframework.test.annotation.DirtiesContext.MethodMode.BEFORE_METHOD;

/**
 * {@code TestExecutionListener} which provides support for marking the
 * {@code ApplicationContext} associated with a test as <em>dirty</em> for
 * both test classes and test methods annotated with the
 * {@link DirtiesContext @DirtiesContext} annotation.
 *
 * <p>This listener supports test methods with the
 * {@linkplain DirtiesContext#methodMode method mode} set to
 * {@link MethodMode#BEFORE_METHOD BEFORE_METHOD} and test classes with the
 * {@linkplain DirtiesContext#classMode() class mode} set to
 * {@link ClassMode#BEFORE_EACH_TEST_METHOD BEFORE_EACH_TEST_METHOD} or
 * {@link ClassMode#BEFORE_CLASS BEFORE_CLASS}. For support for <em>AFTER</em>
 * modes, see {@link DirtiesContextTestExecutionListener}.
 *
 * <p>When {@linkplain TestExecutionListeners#mergeMode merging}
 * {@code TestExecutionListeners} with the defaults, this listener will
 * automatically be ordered before the {@link DependencyInjectionTestExecutionListener};
 * otherwise, this listener must be manually configured to execute before the
 * {@code DependencyInjectionTestExecutionListener}.
 *
 * @author Sam Brannen
 * @since 4.2
 * @see DirtiesContext
 * @see DirtiesContextTestExecutionListener
 */
/**
 * {@code  TestExecutionListener}支持为与{@link  DirtiesContext @注释的测试类和测试方法，将与测试关联的{@code  ApplicationContext}标记为<em> dirty </ em>。 
 *  DirtiesContext}注解。 
 *  <p>此侦听器支持将{@link  plain DirtiesContext＃methodMode方法模式}设置为{@link  MethodMode＃BEFORE_METHOD BEFORE_METHOD}的测试方法以及使用{@link  plain DirtiesContext＃classMode（）的测试类。 
 * 类模式}设置为{@link  ClassMode＃BEFORE_EACH_TEST_METHOD BEFORE_EACH_TEST_METHOD}或{@link  ClassMode＃BEFORE_CLASS BEFORE_CLASS}。 
 * 有关对<em> AFTER </ em>模式的支持，请参见{@link  DirtiesContextTestExecutionListener}。 
 *  <p>当{@link  plain TestExecutionListeners＃mergeMode合并} {@code  TestExecutionListeners}为默认设置时，此监听器将自动在{@link  DependencyInjectionTestExecutionListener}之前进行排序。 
 * 否则，必须手动将该侦听器配置为在{@code  DependencyInjectionTestExecutionListener}之前执行。 
 *  @author  Sam Brannen @从4.2开始
 * @see  DirtiesContext 
 * @see  DirtiesContextTestExecutionListener
 */
public class DirtiesContextBeforeModesTestExecutionListener extends AbstractDirtiesContextTestExecutionListener {

	/**
	 * Returns {@code 1500}.
	 */
	/**
	 * 返回{@code  1500}。 
	 * 
	 */
	@Override
	public final int getOrder() {
		return 1500;
	}

	/**
	 * If the test class of the supplied {@linkplain TestContext test context}
	 * is annotated with {@code @DirtiesContext} and the {@linkplain
	 * DirtiesContext#classMode() class mode} is set to {@link
	 * ClassMode#BEFORE_CLASS BEFORE_CLASS}, the {@linkplain ApplicationContext
	 * application context} of the test context will be
	 * {@linkplain TestContext#markApplicationContextDirty marked as dirty}, and the
	 * {@link DependencyInjectionTestExecutionListener#REINJECT_DEPENDENCIES_ATTRIBUTE
	 * REINJECT_DEPENDENCIES_ATTRIBUTE} in the test context will be set to
	 * {@code true}.
	 */
	/**
	 * 如果提供的{@link  plain TestContext测试上下文}的测试类用{<@@code> @DirtiesContext}注释，并且{@link  plain DirtiesContext＃classMode（）类模式}设置为{<@link> ClassMode＃BEFORE_CLASS BEFORE_CLASS}，测试上下文的{@link  plain ApplicationContext应用程序上下文}将是{@link  plain TestContext＃markApplicationContextDirty标记为脏}，以及{@link  DependencyInjectionTestExecutionListener＃REINJECT_DEPENDENCIES_ATTRIBUTE REINJECT测试上下文中的}将设置为{@code  true}。 
	 * 
	 */
	@Override
	public void beforeTestClass(TestContext testContext) throws Exception {
		beforeOrAfterTestClass(testContext, BEFORE_CLASS);
	}

	/**
	 * If the current test method of the supplied {@linkplain TestContext test
	 * context} is annotated with {@code @DirtiesContext} and the {@linkplain
	 * DirtiesContext#methodMode() method mode} is set to {@link
	 * MethodMode#BEFORE_METHOD BEFORE_METHOD}, or if the test class is
	 * annotated with {@code @DirtiesContext} and the {@linkplain
	 * DirtiesContext#classMode() class mode} is set to {@link
	 * ClassMode#BEFORE_EACH_TEST_METHOD BEFORE_EACH_TEST_METHOD}, the
	 * {@linkplain ApplicationContext application context} of the test context
	 * will be {@linkplain TestContext#markApplicationContextDirty marked as dirty} and the
	 * {@link DependencyInjectionTestExecutionListener#REINJECT_DEPENDENCIES_ATTRIBUTE
	 * REINJECT_DEPENDENCIES_ATTRIBUTE} in the test context will be set to {@code true}.
	 */
	/**
	 * 如果提供的{@link  plain TestContext测试上下文}的当前测试方法用{<@@code> @DirtiesContext}注释，并且{@link  plain DirtiesContext＃methodMode（）方法模式}设置为{@link  MethodMode＃BEFORE_METHOD BEFORE_METHOD}，或者如果测试类使用{@code  @DirtiesContext}注释，并且{@link  plain DirtiesContext＃classMode（）类模式}设置为{@link  ClassMode #BEFORE_EACH_TEST_METHOD BEFORE_EACH_TEST_METHOD}，测试上下文的{@link  plain ApplicationContext应用程序上下文}将是{@link  plain TestContext＃markApplicationContextDirty标记为脏}，而{@link  DependencyInjectionTestExecutionionListener＃REINJECT_DEP上下文将设置为{@code  true}。 
	 * 
	 */
	@Override
	public void beforeTestMethod(TestContext testContext) throws Exception {
		beforeOrAfterTestMethod(testContext, BEFORE_METHOD, BEFORE_EACH_TEST_METHOD);
	}

}
