/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2019 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2019的原始作者或作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.test.context.junit4;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.junit.runner.RunWith;

import org.springframework.context.ApplicationContext;
import org.springframework.context.ApplicationContextAware;
import org.springframework.lang.Nullable;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.TestContext;
import org.springframework.test.context.TestContextManager;
import org.springframework.test.context.TestExecutionListeners;
import org.springframework.test.context.event.EventPublishingTestExecutionListener;
import org.springframework.test.context.support.DependencyInjectionTestExecutionListener;
import org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener;
import org.springframework.test.context.support.DirtiesContextTestExecutionListener;
import org.springframework.test.context.web.ServletTestExecutionListener;

/**
 * Abstract base test class which integrates the <em>Spring TestContext
 * Framework</em> with explicit {@link ApplicationContext} testing support
 * in a <strong>JUnit 4</strong> environment.
 *
 * <p>Concrete subclasses should typically declare a class-level
 * {@link ContextConfiguration @ContextConfiguration} annotation to
 * configure the {@linkplain ApplicationContext application context} {@linkplain
 * ContextConfiguration#locations() resource locations} or {@linkplain
 * ContextConfiguration#classes() component classes}. <em>If your test does not
 * need to load an application context, you may choose to omit the
 * {@link ContextConfiguration @ContextConfiguration} declaration and to configure
 * the appropriate {@link org.springframework.test.context.TestExecutionListener
 * TestExecutionListeners} manually.</em>
 *
 * <p>The following {@link org.springframework.test.context.TestExecutionListener
 * TestExecutionListeners} are configured by default:
 *
 * <ul>
 * <li>{@link org.springframework.test.context.web.ServletTestExecutionListener}
 * <li>{@link org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener}
 * <li>{@link org.springframework.test.context.support.DependencyInjectionTestExecutionListener}
 * <li>{@link org.springframework.test.context.support.DirtiesContextTestExecutionListener}
 * <li>{@link org.springframework.test.context.event.EventPublishingTestExecutionListener}
 * </ul>
 *
 * <p>This class serves only as a convenience for extension.
 * <ul>
 * <li>If you do not wish for your test classes to be tied to a Spring-specific
 * class hierarchy, you may configure your own custom test classes by using
 * {@link SpringRunner}, {@link ContextConfiguration @ContextConfiguration},
 * {@link TestExecutionListeners @TestExecutionListeners}, etc.</li>
 * <li>If you wish to extend this class and use a runner other than the
 * {@link SpringRunner}, you can use
 * {@link org.springframework.test.context.junit4.rules.SpringClassRule SpringClassRule} and
 * {@link org.springframework.test.context.junit4.rules.SpringMethodRule SpringMethodRule}
 * and specify your runner of choice via {@link RunWith @RunWith(...)}.</li>
 * </ul>
 *
 * <p><strong>NOTE:</strong> This class requires JUnit 4.12 or higher.
 *
 * @author Sam Brannen
 * @since 2.5
 * @see ContextConfiguration
 * @see TestContext
 * @see TestContextManager
 * @see TestExecutionListeners
 * @see ServletTestExecutionListener
 * @see DirtiesContextBeforeModesTestExecutionListener
 * @see DependencyInjectionTestExecutionListener
 * @see DirtiesContextTestExecutionListener
 * @see EventPublishingTestExecutionListener
 * @see AbstractTransactionalJUnit4SpringContextTests
 * @see org.springframework.test.context.testng.AbstractTestNGSpringContextTests
 */
/**
 * 在<strong> JUnit 4 </ strong>环境中将<em> Spring TestContext Framework </ em>与显式{@link  ApplicationContext}测试支持集成在一起的抽象基础测试类。 
 *  <p>具体子类通常应声明一个类级别的{@link  ContextConfiguration @ContextConfiguration}注解，以配置{@link  plain ApplicationContext应用程序上下文} {@link  plain ContextConfiguration＃locations（）资源位置}或{@link 纯ContextConfiguration＃classes（）组件类}。 
 *  <em>如果您的测试不需要加载应用程序上下文，则可以选择省略{@link  ContextConfiguration @ContextConfiguration}声明，并配置适当的{@link  org.springframework.test.context.TestExecutionListener </ em> <p>默认情况下配置以下{@link  org.springframework.test.context.TestExecutionListener TestExecutionListeners}：<ul> <li> {<@link> org.springframework.test .context.web.ServletTestExecutionListener} <li> {<@link> org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener} <li> {<@link> org.springframework.test.context.support.DependencyInjectionTestExecutionListener} <li> {@link  org.springframework.test.context.support.DirtiesContextTestExecutionListener} <li> {<@link> org.springframework.test.context.event.EventPublishingTestExecutionListener} </ ul> <p>此类仅用作扩展方便。 
 *  <ul> <li>如果您不希望将测试类绑定到特定于Spring的类层次结构，则可以使用{@link  SpringRunner}，{<@link> ContextConfiguration）配置自己的自定义测试类。 
 *  @ContextConfiguration}，{<@link> TestExecutionListeners @TestExecutionListeners}等。 
 * </ li> <li>如果您想扩展此类并使用{@link  SpringRunner}以外的运行器，则可以使用{@link  org.springframework.test.context.junit4.rules.SpringClassRule SpringClassRule}和{@link  org.springframework.test.context.junit4.rules.SpringMethodRule SpringMethodRule}并通过{<@link > RunWith @RunWith（...）}。 
 * </ li> </ ul> <p> <strong>注意：</ strong>此类需要JUnit 4.12或更高版本。 
 *  @author  Sam Brannen @始于2.5 
 * @see> EventPublishingTestExecutionListener 
 * @see  AbstractTransactionalJUnit4SpringContextTests 
 * @see  org.springframework.test.context.testng.AbstractTestNGSpringContextTests
 */
@RunWith(SpringRunner.class)
@TestExecutionListeners({ ServletTestExecutionListener.class, DirtiesContextBeforeModesTestExecutionListener.class,
	DependencyInjectionTestExecutionListener.class, DirtiesContextTestExecutionListener.class,
	EventPublishingTestExecutionListener.class })
public abstract class AbstractJUnit4SpringContextTests implements ApplicationContextAware {

	/**
	 * Logger available to subclasses.
	 */
	/**
	 * 记录器可用于子类。 
	 * 
	 */
	protected final Log logger = LogFactory.getLog(getClass());

	/**
	 * The {@link ApplicationContext} that was injected into this test instance
	 * via {@link #setApplicationContext(ApplicationContext)}.
	 */
	/**
	 * 通过{@link  #setApplicationContext（ApplicationContext）}注入到此测试实例中的{@link  ApplicationContext}。 
	 * 
	 */
	@Nullable
	protected ApplicationContext applicationContext;


	/**
	 * Set the {@link ApplicationContext} to be used by this test instance,
	 * provided via {@link ApplicationContextAware} semantics.
	 * @param applicationContext the ApplicationContext that this test runs in
	 */
	/**
	 * 通过{@link  ApplicationContextAware}语义提供设置此测试实例要使用的{@link  ApplicationContext}。 
	 *  
	 * @param  applicationContext运行此测试的ApplicationContext
	 */
	@Override
	public final void setApplicationContext(final ApplicationContext applicationContext) {
		this.applicationContext = applicationContext;
	}

}
