/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2019 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2019的原始作者或作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.test.context;

import java.lang.annotation.Documented;
import java.lang.annotation.ElementType;
import java.lang.annotation.Inherited;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

/**
 * {@code @TestConstructor} is a type-level annotation that is used to configure
 * how the parameters of a test class constructor are autowired from components
 * in the test's {@link org.springframework.context.ApplicationContext
 * ApplicationContext}.
 *
 * <p>If {@code @TestConstructor} is not <em>present</em> or <em>meta-present</em>
 * on a test class, the default <em>test constructor autowire mode</em> will be
 * used. See {@link #TEST_CONSTRUCTOR_AUTOWIRE_MODE_PROPERTY_NAME} for details on
 * how to change the default mode. Note, however, that a local declaration of
 * {@link org.springframework.beans.factory.annotation.Autowired @Autowired} on
 * a constructor takes precedence over both {@code @TestConstructor} and the default
 * mode.
 *
 * <p>This annotation may be used as a <em>meta-annotation</em> to create custom
 * <em>composed annotations</em>.
 *
 * <p>As of Spring Framework 5.2, this annotation is only supported in conjunction
 * with the {@link org.springframework.test.context.junit.jupiter.SpringExtension
 * SpringExtension} for use with JUnit Jupiter. Note that the {@code SpringExtension} is
 * often automatically registered for you &mdash; for example, when using annotations such as
 * {@link org.springframework.test.context.junit.jupiter.SpringJUnitConfig @SpringJUnitConfig} and
 * {@link org.springframework.test.context.junit.jupiter.web.SpringJUnitWebConfig @SpringJUnitWebConfig}
 * or various test-related annotations from Spring Boot Test.
 *
 * @author Sam Brannen
 * @since 5.2
 * @see org.springframework.beans.factory.annotation.Autowired @Autowired
 * @see org.springframework.test.context.junit.jupiter.SpringExtension SpringExtension
 * @see org.springframework.test.context.junit.jupiter.SpringJUnitConfig @SpringJUnitConfig
 * @see org.springframework.test.context.junit.jupiter.web.SpringJUnitWebConfig @SpringJUnitWebConfig
 * @see ContextConfiguration @ContextConfiguration
 * @see ContextHierarchy @ContextHierarchy
 * @see ActiveProfiles @ActiveProfiles
 * @see TestPropertySource @TestPropertySource
 */
/**
 * {@code  @TestConstructor}是类型级别的注释，用于配置如何从测试的{@link  org.springframework.context.ApplicationContext ApplicationContext}中的组件自动连接测试类构造函数的参数。 
 *  <p>如果测试类上的{@code  @TestConstructor}不是<em> present </ em>或<em> meta-present </ em>，则默认的<em> test构造函数自动装配模式</ em >将被使用。 
 * 有关如何更改默认模式的详细信息，请参见{@link  #TEST_CONSTRUCTOR_AUTOWIRE_MODE_PROPERTY_NAME}。 
 * 但是请注意，构造函数上的{@link  org.springframework.beans.factory.annotation.Autowired @Autowired}本地声明优先于{@code  @TestConstructor}和默认模式。 
 *  <p>此注释可用作<em>元注释</ em>，以创建自定义的<em>组成的注释</ em>。 
 *  <p>从Spring Framework 5.2开始，仅与与JUnit Jupiter一起使用的{@link  org.springframework.test.context.junit.jupiter.SpringExtension SpringExtension}一起支持此注解。 
 * 请注意，{<@code> SpringExtension}通常会自动为您注册-例如，在使用{@link  org.springframework.test.context.junit.jupiter.SpringJUnitConfig @SpringJUnitConfig}和{<@链接> org.springframework.test.context.junit.jupiter.web.SpringJUnitWebConfig @SpringJUnitWebConfig}或Spring Boot Test中与测试相关的各种注释。 
 *  @author  Sam Brannen @since 5.2起springframework.test.context.junit.jupiter.SpringJUnitConfig @SpringJUnitConfig 
 * @see  org.springframework.test.context.junit.jupiter.web.SpringJUnitWebConfig @SpringJUnitWebConfig 
 * @see  ContextConfiguration @ContextConfiguration 
 * @see  ContextHierarchy @ContextHierarchy <@请参阅> ActiveProfiles @ActiveProfiles <@请参阅> TestPropertySource @TestPropertySource
 */
@Target(ElementType.TYPE)
@Retention(RetentionPolicy.RUNTIME)
@Documented
@Inherited
public @interface TestConstructor {

	/**
	 * JVM system property used to change the default <em>test constructor
	 * autowire mode</em>: {@value #TEST_CONSTRUCTOR_AUTOWIRE_MODE_PROPERTY_NAME}.
	 * <p>Acceptable values include enum constants defined in {@link AutowireMode},
	 * ignoring case. For example, the default may be changed to {@link AutowireMode#ALL}
	 * by supplying the following JVM system property via the command line.
	 * <pre style="code">-Dspring.test.constructor.autowire.mode=all</pre>
	 * <p>If the property is not set to {@code ALL}, parameters for test class
	 * constructors will be autowired according to {@link AutowireMode#ANNOTATED}
	 * semantics by default.
	 * <p>May alternatively be configured via the
	 * {@link org.springframework.core.SpringProperties SpringProperties}
	 * mechanism.
	 * @see #autowireMode
	 */
	/**
	 * 用于更改默认的<em> test构造函数自动装配模式</ em>的JVM系统属性：{@value #TEST_CONSTRUCTOR_AUTOWIRE_MODE_PROPERTY_NAME}。 
	 *  <p>可接受的值包括在{@link  AutowireMode}中定义的枚举常量，忽略大小写。 
	 * 例如，可以通过在命令行中提供以下JVM系统属性，将默认值更改为{@link  AutowireMode＃ALL}。 
	 *  <pre style ="code">-Dspring.test.constructor.autowire.mode = all </ pre> <p>如果该属性未设置为{@code  ALL}，则将自动装配测试类构造函数的参数默认情况下根据{@link  AutowireMode＃ANNOTATED}语义。 
	 *  <p>也可以通过{@link  org.springframework.core.SpringProperties SpringProperties}机制进行配置。 
	 *  
	 * @see  #autowireMode
	 */
	String TEST_CONSTRUCTOR_AUTOWIRE_MODE_PROPERTY_NAME = "spring.test.constructor.autowire.mode";


	/**
	 * Flag for setting the <em>test constructor {@linkplain AutowireMode autowire
	 * mode}</em> for the current test class.
	 * <p>Setting this flag overrides the global default. See
	 * {@link #TEST_CONSTRUCTOR_AUTOWIRE_MODE_PROPERTY_NAME} for details on how
	 * to change the global default.
	 * @return an {@link AutowireMode} to take precedence over the global default
	 * @see #TEST_CONSTRUCTOR_AUTOWIRE_MODE_PROPERTY_NAME
	 * @see org.springframework.beans.factory.annotation.Autowired @Autowired
	 * @see AutowireMode#ALL
	 * @see AutowireMode#ANNOTATED
	 */
	/**
	 * 用于为当前测试类设置<em> test构造函数{@link  plain AutowireMode autowire模式} </ em>的标志。 
	 *  <p>设置此标志将覆盖全局默认值。 
	 * 有关如何更改全局默认值的详细信息，请参见{@link  #TEST_CONSTRUCTOR_AUTOWIRE_MODE_PROPERTY_NAME}。 
	 *  
	 * @return 和{@link  AutowireMode}优先于全局默认值
	 * @see  #TEST_CONSTRUCTOR_AUTOWIRE_MODE_PROPERTY_NAME 
	 * @see  org.springframework.beans.factory.annotation.Autowired @Autowired 
	 * @see  AutowireMode＃ALL 
	 * @see  AutowireMode＃ANNOTATED
	 */
	AutowireMode autowireMode();


	/**
	 * Defines autowiring modes for parameters in a test constructor.
	 * @see #ALL
	 * @see #ANNOTATED
	 */
	/**
	 * 为测试构造函数中的参数定义自动装配模式。 
	 *  
	 * @see  #ALL 
	 * @see ＃标注
	 */
	enum AutowireMode {

		/**
		 * All test constructor parameters will be autowired as if the constructor
		 * itself were annotated with
		 * {@link org.springframework.beans.factory.annotation.Autowired @Autowired}.
		 * @see #ANNOTATED
		 */
		/**
		 * 所有测试构造函数的参数都将自动装配，就像使用{@link  org.springframework.beans.factory.annotation.Autowired @Autowired}标注构造函数本身一样。 
		 *  
		 * @see ＃注解
		 */
		ALL,

		/**
		 * Each individual test constructor parameter will only be autowired if it
		 * is annotated with
		 * {@link org.springframework.beans.factory.annotation.Autowired @Autowired},
		 * {@link org.springframework.beans.factory.annotation.Qualifier @Qualifier},
		 * or {@link org.springframework.beans.factory.annotation.Value @Value},
		 * or if the constructor itself is annotated with {@code @Autowired}.
		 * @see #ALL
		 */
		/**
		 * 每个单独的测试构造函数参数只有在用{@link  org.springframework.beans.factory.annotation.Autowired @Autowired}，{<@link> org.springframework.beans.factory.annotation.Qualifier注释时，才会自动进行连接。 
		 *  @Qualifier}或{@link  org.springframework.beans.factory.annotation.Value @Value}，或者如果构造函数本身使用{@code  @Autowired}进行注释。 
		 *  
		 * @see  #ALL
		 */
		ANNOTATED;

	}

}
