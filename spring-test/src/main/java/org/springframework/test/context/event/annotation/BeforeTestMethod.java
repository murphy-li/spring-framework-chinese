/** Generated by english-annotation-buster, Powered by Google Translate.**/
/*
 * Copyright 2002-2019 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * 版权所有2002-2019的原始作者或作者。 
 * 根据Apache许可证2.0版（"许可证"）获得许可； 
 * 除非遵守许可，否则不得使用此文件。 
 * 您可以在https://www.apache.org/licenses/LICENSE-2.0上获得许可的副本。 
 * 除非适用法律要求或以书面形式同意，否则根据"许可"分发的软件将按"现状"分发，没有任何明示或暗示的保证或条件。 
 * 有关许可下特定的语言管理权限和限制，请参阅许可。 
 * 
 */

package org.springframework.test.context.event.annotation;

import java.lang.annotation.Documented;
import java.lang.annotation.Retention;
import java.lang.annotation.Target;

import org.springframework.context.event.EventListener;
import org.springframework.core.annotation.AliasFor;
import org.springframework.test.context.event.BeforeTestMethodEvent;

import static java.lang.annotation.ElementType.ANNOTATION_TYPE;
import static java.lang.annotation.ElementType.METHOD;
import static java.lang.annotation.RetentionPolicy.RUNTIME;

/**
 * {@link EventListener @EventListener} annotation used to consume a
 * {@link BeforeTestMethodEvent} published by the
 * {@link org.springframework.test.context.event.EventPublishingTestExecutionListener
 * EventPublishingTestExecutionListener}.
 *
 * <p>This annotation may be used on {@code @EventListener}-compliant methods within
 * a Spring test {@link org.springframework.context.ApplicationContext ApplicationContext}
 * &mdash; for example, on methods in a
 * {@link org.springframework.context.annotation.Configuration @Configuration}
 * class. A method annotated with this annotation will be invoked as part of the
 * {@link org.springframework.test.context.TestExecutionListener#beforeTestMethod}
 * lifecycle.
 *
 * <p>Event processing can optionally be made {@linkplain #value conditional} via
 * a SpEL expression &mdash; for example,
 * {@code @BeforeTestMethod("event.testContext.testMethod.name matches 'test.*'")}.
 *
 * <p>The {@code EventPublishingTestExecutionListener} must be registered in order
 * for this annotation to have an effect &mdash; for example, via
 * {@link org.springframework.test.context.TestExecutionListeners @TestExecutionListeners}.
 *
 * @author Frank Scheffler
 * @author Sam Brannen
 * @since 5.2
 * @see BeforeTestMethodEvent
 */
/**
 * {@link  EventListener @EventListener}注解用于消耗{@link  org.springframework.test.context.event.EventPublishingTestExecutionListener EventPublishingTestExecutionListener}发布的{@link  BeforeTestMethodEvent}。 
 *  <p>此注释可以在Spring测试{@link  org.springframework.context.ApplicationContext ApplicationContext}中的{{@code> @EventListener}兼容方法上使用，例如，在{<@link > org.springframework.context.annotation.Configuration @Configuration}类。 
 * 带有此注释的方法将在{@link  org.springframework.test.context.TestExecutionListener＃beforeTestMethod}生命周期的一部分中被调用。 
 *  <p>可以选择通过SpEL表达式{@link  plain #value conditional}进行事件处理-例如，{@code  @BeforeTestMethod（"event.testContext.testMethod.name与'test。 
 * '"匹配） }。 
 *  <p>必须注册{@code  EventPublishingTestExecutionListener}，以使此注释生效-例如，通过{@link  org.springframework.test.context.TestExecutionListeners @TestExecutionListeners}。 
 *  @author 弗兰克·谢弗勒（Frank Scheffler）@author 山姆·布兰嫩（Sam Brannen）@从5.2起
 * @see  BeforeTestMethodEvent
 */
@Retention(RUNTIME)
@Target({ METHOD, ANNOTATION_TYPE })
@Documented
@EventListener(BeforeTestMethodEvent.class)
public @interface BeforeTestMethod {

	/**
	 * Alias for {@link EventListener#condition}.
	 */
	/**
	 * {@link  EventListener＃condition}的别名。 
	 * 
	 */
	@AliasFor(annotation = EventListener.class, attribute = "condition")
	String value() default "";

}
